(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[416],{73108:function(e,t,n){var r=n(67294),a=n(45697),s=function(e){var t,n=e.bgColor,a=e.completed,s=e.baseBgColor,o=e.height,i=e.width,u=e.margin,c=e.padding,l=e.borderRadius,d=e.labelAlignment,p=e.labelColor,h=e.labelSize,f=e.isLabelVisible,m=e.transitionDuration,g=e.transitionTimingFunction,y=e.className,b=e.dir,x=e.ariaValuemin,v=e.ariaValuemax,k=e.ariaValuetext,w=e.maxCompleted,I=e.customLabel,N=e.animateOnRender,S=e.barContainerClassName,T=e.completedClassName,_=e.labelClassName,E="left"===(t=d)?"flex-start":"center"===t?"center":"right"===t?"flex-end":null,C=function(e,t){if(e){var n=Number(t)/e;return n>1?"100%":100*n+"%"}return 0}(w,a),A=r.useState(0),$=A[0],R=A[1],F={height:o,backgroundColor:s,borderRadius:l,padding:c,width:i,margin:u},O={height:o,width:N?$:C,backgroundColor:n,transition:"width "+(m||"1s")+" "+(g||"ease-in-out"),borderRadius:"inherit",display:"flex",alignItems:"center",justifyContent:"outside"!==d&&E?E:"normal"},D={padding:"outside"===d?"0 0 0 5px":"5px",color:p,fontWeight:"bold",fontSize:h,display:f?"initial":"none"},M={display:"outside"===d?"flex":"initial",alignItems:"outside"===d?"center":"initial"},B=I||("number"===typeof a?a+"%":""+a);return r.useEffect((function(){N&&requestAnimationFrame((function(){return R(C)}))}),[C,N]),r.createElement("div",{style:y?void 0:M,className:y,dir:b,role:"progressbar","aria-valuenow":parseFloat(B),"aria-valuemin":x,"aria-valuemax":v,"aria-valuetext":""+(null===k?B:k)},r.createElement("div",{style:S?void 0:F,className:S},r.createElement("div",{style:T?void 0:O,className:T},"outside"!==d&&r.createElement("span",{style:_?void 0:D,className:_},B))),"outside"===d&&r.createElement("span",{style:_?void 0:D,className:_},B))};s.propTypes={completed:a.oneOfType([a.string,a.number]).isRequired,bgColor:a.string,baseBgColor:a.string,height:a.string,width:a.string,borderRadius:a.string,margin:a.string,padding:a.string,labelAlignment:a.oneOf(["left","center","right","outside"]),labelColor:a.string,labelSize:a.string,isLabelVisible:a.bool,className:a.string,dir:a.oneOf(["rtl","ltr","auto"]),maxCompleted:a.number,customLabel:a.string,animateOnRender:a.bool,barContainerClassName:a.string,completedClassName:a.string,labelClassName:a.string},s.defaultProps={bgColor:"#6a1b9a",height:"20px",width:"100%",borderRadius:"50px",labelAlignment:"right",baseBgColor:"#e0e0de",labelColor:"#fff",labelSize:"15px",isLabelVisible:!0,dir:"ltr",ariaValuemin:0,ariaValuemax:100,ariaValuetext:null,maxCompleted:100,animateOnRender:!1},t.Z=s},9098:function(e,t,n){"use strict";n.r(t),n.d(t,{BodyPix:function(){return Ca},PART_CHANNELS:function(){return Za},blurBodyPart:function(){return Qa},drawBokehEffect:function(){return Ya},drawMask:function(){return Xa},drawPixelatedMask:function(){return Ka},flipPoseHorizontal:function(){return ga},load:function(){return Ra},resizeAndPadTo:function(){return pa},scaleAndCropToInputTensorShape:function(){return ha},toColoredPartMask:function(){return Ua},toMask:function(){return Wa},version:function(){return Ja}});var r={};n.r(r),n.d(r,{json:function(){return O}});var a={};n.r(a),n.d(a,{json:function(){return D}});var s={};n.r(s),n.d(s,{json:function(){return M}});var o={};n.r(o),n.d(o,{json:function(){return B}});var i={};n.r(i),n.d(i,{json:function(){return P}});var u={};n.r(u),n.d(u,{json:function(){return L}});var c={};n.r(c),n.d(c,{json:function(){return V}});var l={};n.r(l),n.d(l,{json:function(){return W}});var d={};n.r(d),n.d(d,{json:function(){return z}});var p={};n.r(p),n.d(p,{json:function(){return U}});var h={};n.r(h),n.d(h,{json:function(){return G}});var f={};n.r(f),n.d(f,{json:function(){return H}});var m={};n.r(m),n.d(m,{json:function(){return j}});var g={};n.r(g),n.d(g,{json:function(){return q}});var y={};n.r(y),n.d(y,{json:function(){return X}});var b={};n.r(b),n.d(b,{json:function(){return K}});var x={};n.r(x),n.d(x,{json:function(){return Y}});var v={};n.r(v),n.d(v,{json:function(){return Q}});var k={};n.r(k),n.d(k,{json:function(){return Z}});var w=n(83921);var I,N;(0,w.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(I||(I={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(N||(N={}));const S={};function T(e){return S[e]}function _(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return E(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type){return t.inputNames.slice(e,o).map((e=>E(e,n,r,a)))}const i=E(t.inputNames.slice(e)[0],n,r,a),u=i.dataSync();return"number"===s.type?u[0]:w.util.toNestedArray(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function E(e,t,n,r){const[a,s]=$(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[A(a,e)]));return void 0!==o?t[A(a,o)][s]:void 0}function C(e,t){const[n,r,a]=$(e);return[A(n,t&&t.currentContextId),r,a]}function A(e,t){return t?`${e}-${t}`:e}function $(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function R(e,t,n){let r=_("pad",e,t,n);if("explicit"===r){r=_("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function F(e){return e.kept?e:(0,w.clone)(e)}const O=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],D=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],M=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],B=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],L=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],W=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],z=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],U=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],G=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],j=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],X=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],K=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Y=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Q=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Z=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var J=n(48764).Buffer;class ee{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,o,i,u,c,l,d,p,h,f,m,g,y,b,x,v,k].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let c={},l={};null!=t&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=C(e),s=o[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(l).length?d.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(l).forEach((e=>{const[t]=C(e),n=o[t];null!=n&&(n.signatureKey=l[e],u.push(n))})),Object.keys(c).length>0?Object.keys(c).forEach((e=>{const[t]=C(e),n=o[t];n&&(n.signatureKey=c[e],i.push(n))})):i=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=T(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=ne(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ne(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=pe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=ae(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=de(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=re(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=le(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=he(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=ie(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=C(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:se(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=C(e),o=r[a];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=C(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function te(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,w.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof J)return new J(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ne(e,t,n,r=!1){const a=e[t];return null!=a?te(a.s,r):n}function re(e,t,n){const r=e[t];return r?r.b:n}function ae(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function se(e){switch("string"===typeof e&&(e=I[e]),e){case I.DT_FLOAT:case I.DT_HALF:return"float32";case I.DT_INT32:case I.DT_INT64:case I.DT_INT8:case I.DT_UINT8:return"int32";case I.DT_BOOL:return"bool";case I.DT_DOUBLE:return"float32";case I.DT_STRING:return"string";default:return null}}function oe(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ie(e,t,n){const r=e[t];return r&&r.type?se(r.type):n}function ue(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>se(e))):n}function ce(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function le(e,t,n){const r=e[t];return r&&r.shape?ce(r.shape):n}function de(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function pe(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>te(e,r))):n}function he(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>ce(e))):n}function fe(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class me{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return E(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return E(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ae(this.node.rawAttrs,e,t);if(null!=n.s)return ne(this.node.rawAttrs,e,t);if(null!=n.b)return re(this.node.rawAttrs,e,t);if(null!=n.shape)return le(this.node.rawAttrs,e,t);if(null!=n.type)return ie(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return de(this.node.rawAttrs,e,t);if(null!=n.list.s)return pe(this.node.rawAttrs,e,t);if(null!=n.list.shape)return he(this.node.rawAttrs,e,t);if(null!=n.list.b)return fe(this.node.rawAttrs,e,t);if(null!=n.list.type)return ue(this.node.rawAttrs,e,t)}return t}}var ge=n(56407),ye=n(13135),be=n(85228),xe=n(24841),ve=n(41274),ke=n(49322),we=n(9165),Ie=n(70827),Ne=n(24513),Se=n(80632),Te=n(33453),_e=n(15265);var Ee=n(96235),Ce=n(17839),Ae=n(91470),$e=n(72421),Re=n(21891),Fe=n(77037),Oe=n(29812),De=n(80369),Me=n(6825),Be=n(61661),Pe=n(70173),Le=n(2699),Ve=n(83233),We=n(34650),ze=n(44842),Ue=n(53426),Ge=n(26943),He=n(82597),je=n(17474),qe=n(64386),Xe=n(17370),Ke=n(19036),Ye=n(60766),Qe=n(7409),Ze=n(97809),Je=n(55503),et=n(30625),tt=n(99331),nt=n(34434),rt=n(83254),at=n(3694),st=n(13261),ot=n(50248),it=n(21869),ut=n(61173),ct=n(42279),lt=n(83582),dt=n(32634),pt=n(49451),ht=n(99133),ft=n(98151),mt=n(96230);function gt(e,t,n=""){if("number"!==typeof e&&"number"!==typeof t){w.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];w.util.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function yt(e){return"number"!==typeof e&&!e.some((e=>e<0))}function bt(e,t,n){let r=xt(e,n);const a=!yt(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=xt(e.shape,r)})),!yt(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function xt(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class vt{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,w.scalar)(0),(0,w.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),gt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,w.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,w.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return gt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,w.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,w.tensor)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return gt(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,w.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,w.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,w.tidy)((()=>{t=(0,w.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=(0,w.reshape)((0,w.slice)(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class kt{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);gt(t,e.shape,"TensorList shape mismatch: "),(0,w.keep)(e)})),this.idTensor=(0,w.scalar)(0),this.maxNumElements=r,(0,w.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new kt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);gt(e,this.elementShape,"TensorList shape mismatch: ");const r=bt(this.elementShape,this.tensors,e);return(0,w.tidy)((()=>{const e=this.tensors.map((e=>(0,w.reshape)(e,r)));return(0,w.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=bt(this.elementShape,this.tensors,e),r=this.tensors.pop();return gt(r.shape,e,"TensorList shape mismatch: "),(0,w.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(gt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,w.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);gt(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=bt(this.elementShape,this.tensors,t);return(0,w.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);gt(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,w.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);gt(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=bt(this.elementShape,this.tensors,n);return 0===e.length?(0,w.tensor)([],[0].concat(r)):(0,w.tidy)((()=>{const t=e.map((e=>(0,w.reshape)(this.tensors[e],r)));return(0,w.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);gt(this.elementShape,t,"TensorList shape mismatch: ");const n=bt(this.elementShape,this.tensors,t);return 0===this.size()?(0,w.tensor)([],[0].concat(n)):(0,w.tidy)((()=>{const e=this.tensors.map((e=>(0,w.reshape)(e,n)));return(0,w.concat)(e,0)}))}}const wt=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=_("thenBranch",e,t,n),a=_("elseBranch",e,t,n),s=_("cond",e,t,n),o=_("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=_("body",e,t,n),a=_("cond",e,t,n),s=_("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let c=s;for(;u[0];){const e=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return c}case"LoopCond":return[F(_("pred",e,t,n))];case"Switch":{const r=_("pred",e,t,n);let a=_("data",e,t,n);return a.kept||(a=F(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==E(e,t,n)));if(r){return[F(E(r,t,n))]}return}case"Enter":{const r=_("frameName",e,t,n),a=_("tensor",e,t,n);return n.enterFrame(r),[F(a)]}case"Exit":{const r=_("tensor",e,t,n);return n.exitFrame(),[F(r)]}case"NextIteration":{const r=_("tensor",e,t,n);return n.nextIteration(),[F(r)]}case"TensorArrayV3":{const r=_("size",e,t,n),a=_("dtype",e,t,n),s=_("elementShape",e,t,n),o=_("dynamicSize",e,t,n),i=_("clearAfterRead",e,t,n),u=_("identicalElementShapes",e,t,n),c=_("name",e,t,n),l=new vt(c,a,r,s,u,o,i);return n.addTensorArray(l),[l.idTensor,(0,w.scalar)(1)]}case"TensorArrayWriteV3":{const r=_("tensorArrayId",e,t,n),a=_("index",e,t,n),s=_("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=_("tensorArrayId",e,t,n),a=_("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=_("tensorArrayId",e,t,n),a=_("indices",e,t,n),s=_("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=_("tensorArrayId",e,t,n),a=_("indices",e,t,n),s=_("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=_("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=_("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=_("tensorArrayId",e,t,n),a=_("tensor",e,t,n),s=_("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=_("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,w.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=_("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=_("tensorListId",e,t,n),a=_("index",e,t,n),s=_("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=_("tensorListId",e,t,n),a=_("index",e,t,n),s=_("elementShape",e,t,n),o=_("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=_("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new kt([],n,e.dtype,r),o=(0,w.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(_("tensor",e,t,n),r,_("elementShape",e,t,n),_("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=_("elementShape",e,t,n),a=_("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=function(e,t,n){return new kt([],e,t,n)}(r,a,_(s,e,t,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=_("tensorListId",e,t,n),a=_("indices",e,t,n),s=_("elementShape",e,t,n),o=_("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=_("tensorListId",e,t,n),a=_("elementShape",e,t,n),s=_("elementDType",e,t,n),o=_("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);gt(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,w.unstack)(e);return new kt(a,t,r)}(_("tensor",e,t,n),_("elementShape",e,t,n),_("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=_("tensorListId",e,t,n),a=n.getTensorList(r.id),s=_("dtype",e,t,n),o=_("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=_("tensorListId",e,t,n),a=_("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=_("tensorListId",e,t,n),a=_("elementShape",e,t,n),s=_("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=_("tensor",e,t,n),a=_("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=xt(e.shape.slice(1),n),o=0===r?0:e.size/r,i=(0,w.tidy)((()=>{const n=[];e=(0,w.reshape)(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],o];n[r]=(0,w.reshape)((0,w.slice)(e,i,u),s)}return e.dispose(),n})),u=new kt([],n,e.dtype,t.length);for(let c=0;c<i.length;c++)u.setItem(c,i[c]);return u}(r,_("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var It=n(11355),Nt=n(64794),St=n(91423),Tt=n(71405),_t=n(64718),Et=n(70473),Ct=n(15176),At=n(21174),$t=n(96877),Rt=n(61749),Ft=n(25020),Ot=n(70557);function Dt(e,t,n){const[r,a]=_("fusedOps",e,t,n),s="biasadd"===r,o=!s,i="prelu"===a,u="fusedbatchnorm"===r,c=_("numArgs",e,t,n);if(s){if(i&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=_("strides",e,t,n),d=R(e,t,n),p=_("dataFormat",e,t,n).toUpperCase(),h=_("dilations",e,t,n);let[f,m]=_("args",e,t,n);o&&(m=f,f=void 0);return{stride:l,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:_("leakyreluAlpha",e,t,n)}}var Mt=n(14006),Bt=n(14135),Pt=n(90686),Lt=n(76708),Vt=n(44917),Wt=n(7846),zt=n(75002),Ut=n(47245),Gt=n(43596),Ht=n(59640),jt=n(6577);var qt=n(91413),Xt=n(62271),Kt=n(66380),Yt=n(36567);function Qt(e,t,n){return{boxes:_("boxes",e,t,n),scores:_("scores",e,t,n),maxOutputSize:_("maxOutputSize",e,t,n),iouThreshold:_("iouThreshold",e,t,n),scoreThreshold:_("scoreThreshold",e,t,n),softNmsSigma:_("softNmsSigma",e,t,n)}}var Zt=n(43243),Jt=n(49608);var en=n(46092),tn=n(99494);class nn{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,w.scalar)(0),this.tensorMap=new Map,(0,w.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return tn.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,w.tidy)((()=>{const e=(0,w.unstack)(t),r=n.length,a=e.length;w.util.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,w.keep)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,w.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,w.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var rn=n(26477),an=n(16500),sn=n(20636),on=n(17630),un=n(86573),cn=n(50624),ln=n(2856),dn=n(38651),pn=n(15750),hn=n(95912);var fn=n(28687),mn=n(94653),gn=n(89065);var yn=n(40094),bn=n(79648),xn=n(80682),vn=n(31510),kn=n(69040);var wn=n(83307),In=n(75130),Nn=n(25735),Sn=n(15475),Tn=n(90781),_n=n(92998),En=n(40047),Cn=n(27394),An=n(37405),$n=n(93865),Rn=n(75746);var Fn=n(46884),On=n(24926),Dn=n(57486),Mn=n(22676),Bn=n(55158),Pn=n(79590),Ln=n(4968),Vn=n(82991),Wn=n(24136),zn=n(47501),Un=n(28644),Gn=n(63100),Hn=n(87494);var jn=n(7020),qn=n(88447),Xn=n(13710),Kn=n(84415);var Yn=n(81300),Qn=n(71483),Zn=n(39682),Jn=n(27918),er=n(28441),tr=n(89112),nr=n(68247),rr=n(88194);function ar(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ge.I(_("a",e,t,n),_("b",e,t,n))];case"AddN":return[ye.Q(_("tensors",e,t,n))];case"FloorMod":case"Mod":return[be.w(_("a",e,t,n),_("b",e,t,n))];case"Mul":return[xe.d(_("a",e,t,n),_("b",e,t,n))];case"RealDiv":case"Div":return[ve.h(_("a",e,t,n),_("b",e,t,n))];case"DivNoNan":return[ke.N(_("a",e,t,n),_("b",e,t,n))];case"FloorDiv":return[we.q(_("a",e,t,n),_("b",e,t,n))];case"Sub":return[Ie.l(_("a",e,t,n),_("b",e,t,n))];case"Minimum":return[Ne.L(_("a",e,t,n),_("b",e,t,n))];case"Maximum":return[Se.g(_("a",e,t,n),_("b",e,t,n))];case"Pow":return[Te.s(_("a",e,t,n),_("b",e,t,n))];case"SquaredDifference":return[_e.$(_("a",e,t,n),_("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Ee.W(_("x",e,t,n))];case"Acos":return[Ce.K(_("x",e,t,n))];case"Acosh":return[Ae._(_("x",e,t,n))];case"Asin":return[$e.Z(_("x",e,t,n))];case"Asinh":return[Re.V(_("x",e,t,n))];case"Atan":return[Fe.z(_("x",e,t,n))];case"Atan2":return[Oe.f(_("x",e,t,n),_("y",e,t,n))];case"Atanh":return[De.C(_("x",e,t,n))];case"Ceil":return[Me.m(_("x",e,t,n))];case"Complex":return[Be.P(_("real",e,t,n),_("imag",e,t,n))];case"Cos":return[Pe.m(_("x",e,t,n))];case"Cosh":return[Le.f(_("x",e,t,n))];case"Elu":return[Ve.p(_("x",e,t,n))];case"Erf":return[We.q(_("x",e,t,n))];case"Exp":return[ze.Q(_("x",e,t,n))];case"Expm1":return[Ue.t(_("x",e,t,n))];case"Floor":return[Ge.G(_("x",e,t,n))];case"Log":return[He.c(_("x",e,t,n))];case"Log1p":return[je.K(_("x",e,t,n))];case"Imag":return[qe.a(_("x",e,t,n))];case"Neg":return[Xe.W(_("x",e,t,n))];case"Reciprocal":return[Ke.M(_("x",e,t,n))];case"Real":return[Ye.k(_("x",e,t,n))];case"Relu":return[Qe.U(_("x",e,t,n))];case"Round":return[Ze.N(_("x",e,t,n))];case"Selu":return[Je.U(_("x",e,t,n))];case"Sigmoid":return[et.X(_("x",e,t,n))];case"Sin":return[tt.O(_("x",e,t,n))];case"Sign":return[nt.X(_("x",e,t,n))];case"Sinh":return[rt.R(_("x",e,t,n))];case"Softplus":return[at.W(_("x",e,t,n))];case"Sqrt":return[st._(_("x",e,t,n))];case"Square":return[ot.h(_("x",e,t,n))];case"Tanh":return[it.A(_("x",e,t,n))];case"Tan":return[ut.O(_("x",e,t,n))];case"ClipByValue":return[ct.i(_("x",e,t,n),_("clipValueMin",e,t,n),_("clipValueMax",e,t,n))];case"Relu6":return[lt.b(_("x",e,t,n))];case"Rsqrt":return[dt.b(E(e.inputNames[0],t,n))];case"Prod":return[pt.W(_("x",e,t,n),_("axes",e,t,n))];case"LeakyRelu":return[ht.h(_("x",e,t,n),_("alpha",e,t,n))];case"Prelu":return[ft.A(_("x",e,t,n),_("alpha",e,t,n))];case"IsNan":return[mt.i(E(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return wt(e,t,n);case"convolution":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=_("stride",e,t,n),a=_("pad",e,t,n),s=_("dataFormat",e,t,n).toUpperCase(),o=_("dilation",e,t,n);return[It.P(_("x",e,t,n),_("filter",e,t,n),r,a,s,o)]}case"Conv2D":{const r=_("strides",e,t,n),a=R(e,t,n),s=_("dataFormat",e,t,n).toUpperCase(),o=_("dilations",e,t,n);return[Nt.T(_("x",e,t,n),_("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Dt(e,t,n);return[St.conv2d({x:_("x",e,t,n),filter:_("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Dt(e,t,n);return[St.depthwiseConv2d({x:_("x",e,t,n),filter:_("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=_("outputShape",e,t,n),a=_("strides",e,t,n),s=R(e,t,n);return[Tt.b(_("x",e,t,n),_("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=_("strides",e,t,n),a=R(e,t,n),s=_("dilations",e,t,n),o=_("dataFormat",e,t,n).toUpperCase();return[_t.B(_("input",e,t,n),_("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const r=_("strides",e,t,n),a=_("pad",e,t,n),s=_("dataFormat",e,t,n).toUpperCase(),o=_("dilations",e,t,n);return[Et.p(_("x",e,t,n),_("filter",e,t,n),[r[1],r[2],r[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const r=_("strides",e,t,n),a=_("pad",e,t,n),s=_("kernelSize",e,t,n);return[Ct.w(_("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=_("strides",e,t,n),a=_("pad",e,t,n),s=_("kernelSize",e,t,n);return[At._(_("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=_("strides",e,t,n),a=_("pad",e,t,n),s=_("kernelSize",e,t,n),o=_("includeBatchInIndex",e,t,n),{result:i,indexes:u}=$t.I(_("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,o);return[i,u]}case"AvgPool3D":{const r=_("strides",e,t,n),a=_("pad",e,t,n),s=_("kernelSize",e,t,n);return[Rt.u(_("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=_("strides",e,t,n),a=_("pad",e,t,n),s=_("kernelSize",e,t,n);return[Ft.Y(_("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=_("strides",e,t,n),a=_("pad",e,t,n),s=_("dilations",e,t,n),o=r[1],i=r[2],u=s[1],c=s[2];return[Ot.W(_("x",e,t,n),_("filter",e,t,n),[o,i],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=_("shape",e,t,n),a=_("dtype",e,t,n),s=_("value",e,t,n);return[Mt.h(r,s,a)]}case"LinSpace":{const r=_("start",e,t,n),a=_("stop",e,t,n),s=_("num",e,t,n);return[Bt.S(r,a,s)]}case"Multinomial":{const r=_("logits",e,t,n),a=_("numSamples",e,t,n),s=_("seed",e,t,n);return[Pt.S(r,a,s)]}case"OneHot":{const r=_("indices",e,t,n),a=_("depth",e,t,n),s=_("onValue",e,t,n),o=_("offValue",e,t,n);return[Lt.l(r,a,s,o)]}case"Ones":return[Vt.i(_("shape",e,t,n),_("dtype",e,t,n))];case"OnesLike":return[Wt.J(_("x",e,t,n))];case"RandomUniform":return[zt.L(_("shape",e,t,n),_("minval",e,t,n),_("maxval",e,t,n),_("dtype",e,t,n))];case"Range":{const r=_("start",e,t,n),a=_("stop",e,t,n),s=_("step",e,t,n);return[Ut.w(r,a,s,_("dtype",e,t,n))]}case"TruncatedNormal":{const r=_("shape",e,t,n),a=_("mean",e,t,n),s=_("stdDev",e,t,n),o=_("seed",e,t,n);return[Gt.X(r,a,s,_("dtype",e,t,n),o)]}case"Zeros":return[Ht.l(_("shape",e,t,n),_("dtype",e,t,n))];case"ZerosLike":return[jt.P(_("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=Qt(e,t,n),c=await qt.BHj.nonMaxSuppressionWithScoreAsync(r,a,s,o,i,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=Qt(e,t,n),u=_("padToMaxOutputSize",e,t,n),c=await qt.BHj.nonMaxSuppressionPaddedAsync(r,a,s,o,i,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=Qt(e,t,n);return[await qt.BHj.nonMaxSuppressionAsync(r,a,s,o,i)]}case"Where":{const r=Xt.p(_("condition",e,t,n),"bool"),a=[await Kt.i(r)];return r.dispose(),a}case"ListDiff":return Yt.O(_("x",e,t,n),_("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=_("x",e,t,n),a=_("k",e,t,n),s=_("sorted",e,t,n),o=Zt.h(r,a,s);return[o.values,o.indices]}case"Unique":{const r=_("x",e,t,n),a=Jt.T(r);return[a.values,a.indices]}case"UniqueV2":{const r=_("x",e,t,n),a=_("axis",e,t,n),s=Jt.T(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=_("images",e,t,n),a=_("size",e,t,n),s=_("alignCorners",e,t,n),o=_("halfPixelCenters",e,t,n);return[qt.BHj.resizeBilinear(r,[a[0],a[1]],s,o)]}case"ResizeNearestNeighbor":{const r=_("images",e,t,n),a=_("size",e,t,n),s=_("alignCorners",e,t,n),o=_("halfPixelCenters",e,t,n);return[qt.BHj.resizeNearestNeighbor(r,[a[0],a[1]],s,o)]}case"CropAndResize":{const r=_("image",e,t,n),a=_("boxes",e,t,n),s=_("boxInd",e,t,n),o=_("cropSize",e,t,n),i=_("method",e,t,n),u=_("extrapolationValue",e,t,n);return[qt.BHj.cropAndResize(r,a,s,o,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=_("default",e,t,n);return[E(e.name,t,n)||r];case"Placeholder":return[E(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[F(_("x",e,t,n))];case"IdentityN":return _("x",e,t,n).map((e=>F(e)));case"Snapshot":return[F(_("x",e,t,n))];case"Shape":return[en.R(_("x",e,t,n).shape,"int32")];case"ShapeN":return _("x",e,t,n).map((e=>en.R(e.shape)));case"Size":return[tn.i(_("x",e,t,n).size,"int32")];case"Rank":return[tn.i(_("x",e,t,n).rank,"int32")];case"NoOp":return[tn.i(1)];case"Print":const a=_("x",e,t,n),s=_("data",e,t,n),o=_("message",e,t,n),i=_("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"Equal":return[rn.D(_("a",e,t,n),_("b",e,t,n))];case"NotEqual":return[an.Q(_("a",e,t,n),_("b",e,t,n))];case"Greater":return[sn.p(_("a",e,t,n),_("b",e,t,n))];case"GreaterEqual":return[on.b(_("a",e,t,n),_("b",e,t,n))];case"Less":return[un.d(_("a",e,t,n),_("b",e,t,n))];case"LessEqual":return[cn.z(_("a",e,t,n),_("b",e,t,n))];case"LogicalAnd":return[ln.H(_("a",e,t,n),_("b",e,t,n))];case"LogicalNot":return[dn.h(_("a",e,t,n))];case"LogicalOr":return[pn.K(_("a",e,t,n),_("b",e,t,n))];case"Select":case"SelectV2":return[hn.a(_("condition",e,t,n),_("a",e,t,n),_("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[fn.O(_("a",e,t,n),_("b",e,t,n),_("transposeA",e,t,n),_("transposeB",e,t,n))];case"Einsum":return[mn.W(_("equation",e,t,n),..._("tensors",e,t,n))];case"Transpose":return[gn.p(_("x",e,t,n),_("perm",e,t,n))];case"_FusedMatMul":const[r,a]=_("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i=_("numArgs",e,t,n),u=_("leakyreluAlpha",e,t,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=_("args",e,t,n);return[St.matMul({a:_("a",e,t,n),b:_("b",e,t,n),transposeA:_("transposeA",e,t,n),transposeB:_("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[yn.t(_("x",e,t,n),_("mean",e,t,n),_("variance",e,t,n),_("offset",e,t,n),_("scale",e,t,n),_("epsilon",e,t,n))];case"LRN":return[bn.G(_("x",e,t,n),_("radius",e,t,n),_("bias",e,t,n),_("alpha",e,t,n),_("beta",e,t,n))];case"Softmax":return[xn.X(_("x",e,t,n))];case"LogSoftmax":return[vn.C(_("x",e,t,n))];case"SparseToDense":return[kn.e(_("sparseIndices",e,t,n),_("outputShape",e,t,n),_("sparseValues",e,t,n),_("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=_("axis",e,t,n),a=_("keepDims",e,t,n);return[wn.F(_("x",e,t,n),r,a)]}case"Mean":{const r=_("axis",e,t,n),a=_("keepDims",e,t,n);return[In.J(_("x",e,t,n),r,a)]}case"Min":{const r=_("axis",e,t,n),a=_("keepDims",e,t,n);return[Nn.V(_("x",e,t,n),r,a)]}case"Sum":{const r=_("axis",e,t,n),a=_("keepDims",e,t,n);return[Sn.S(_("x",e,t,n),r,a)]}case"All":{const r=_("axis",e,t,n),a=_("keepDims",e,t,n);return[Tn.$(_("x",e,t,n),r,a)]}case"Any":{const r=_("axis",e,t,n),a=_("keepDims",e,t,n);return[_n.Y(_("x",e,t,n),r,a)]}case"ArgMax":{const r=_("axis",e,t,n);return[En.N(_("x",e,t,n),r)]}case"ArgMin":{const r=_("axis",e,t,n);return[Cn.v(_("x",e,t,n),r)]}case"Prod":{const r=_("axis",e,t,n),a=_("keepDims",e,t,n);return[pt.W(_("x",e,t,n),r,a)]}case"Cumsum":{const r=_("axis",e,t,n),a=_("exclusive",e,t,n),s=_("reverse",e,t,n);return[An.z(_("x",e,t,n),r,a,s)]}case"Bincount":const r=_("x",e,t,n),a=_("weights",e,t,n),s=_("size",e,t,n);return[$n.y(r,a,s)];case"DenseBincount":{const r=_("x",e,t,n),a=_("weights",e,t,n),s=_("size",e,t,n),o=_("binaryOutput",e,t,n);return[Rn.p(r,a,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=_("n",e,t,n),a=_("axis",e,t,n);let s=_("tensors",e,t,n);return s=s.slice(0,r),[Fn.z(s,a)]}case"Gather":{const r=_("x",e,t,n),a=_("indices",e,t,n);return[On.I(r,Xt.p(a,"int32"),0)]}case"GatherV2":{const r=_("axis",e,t,n),a=_("batchDims",e,t,n),s=_("x",e,t,n),o=_("indices",e,t,n);return[On.I(s,Xt.p(o,"int32"),r,a)]}case"Reverse":{const r=_("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=_("x",e,t,n);return[Dn.G(s,a)]}case"ReverseV2":{const r=_("axis",e,t,n),a=_("x",e,t,n);return[Dn.G(a,r)]}case"Slice":{const r=_("begin",e,t,n),a=_("size",e,t,n);return[Mn.t(_("x",e,t,n),r,a)]}case"StridedSlice":{const r=_("begin",e,t,n),a=_("end",e,t,n),s=_("strides",e,t,n),o=_("beginMask",e,t,n),i=_("endMask",e,t,n),u=_("ellipsisMask",e,t,n),c=_("newAxisMask",e,t,n),l=_("shrinkAxisMask",e,t,n),d=_("x",e,t,n);return[Bn.N(d,r,a,s,o,i,u,c,l)]}case"Pack":return(0,w.tidy)((()=>{const r=_("axis",e,t,n),a=_("tensors",e,t,n),s=a[0].shape,o=Pn.L(a[0]).shape,i=a.map((e=>{const t=w.util.arraysEqual(e.shape,s);if(!t&&!w.util.arraysEqual(Pn.L(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:Ln.X(e,s)}));return[Vn.k(i,r)]}));case"Unpack":{const r=_("axis",e,t,n),a=_("tensor",e,t,n);return Wn.H(a,r)}case"Tile":{const r=_("reps",e,t,n);return[zn.G(_("x",e,t,n),r)]}case"Split":case"SplitV":{const r=_("axis",e,t,n),a=_("numOrSizeSplits",e,t,n),s=_("x",e,t,n);return Un.V(s,a,r)}case"ScatterNd":{const r=_("indices",e,t,n),a=_("values",e,t,n),s=_("shape",e,t,n);return[Gn.s(r,a,s)]}case"GatherNd":{const r=_("x",e,t,n),a=_("indices",e,t,n);return[Hn.d(r,a)]}case"SparseToDense":{const r=_("sparseIndices",e,t,n),a=_("outputShape",e,t,n),s=_("sparseValues",e,t,n),o=_("defaultValue",e,t,n);return[kn.e(r,s,a,s.dtype===o.dtype?o:Xt.p(o,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:o}=qt.rVs.sparseFillEmptyRows(_("indices",e,t,n),_("values",e,t,n),_("denseShape",e,t,n),_("defaultValue",e,t,n));return[r,a,s,o]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=qt.rVs.sparseReshape(_("inputIndices",e,t,n),_("inputShape",e,t,n),_("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[qt.rVs.sparseSegmentMean(_("data",e,t,n),_("indices",e,t,n),_("segmentIds",e,t,n))];case"SparseSegmentSum":return[qt.rVs.sparseSegmentSum(_("data",e,t,n),_("indices",e,t,n),_("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"FFT":return[jn.k(_("x",e,t,n))];case"IFFT":return[qn.S(_("x",e,t,n))];case"RFFT":return[Xn.Q(_("x",e,t,n))];case"IRFFT":return[Kn.w(_("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=qt.Z_8.stringNGrams(_("data",e,t,n),_("dataSplits",e,t,n),_("separator",e,t,n),_("nGramWidths",e,t,n),_("leftPad",e,t,n),_("rightPad",e,t,n),_("padWidth",e,t,n),_("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=qt.Z_8.stringSplit(_("input",e,t,n),_("delimiter",e,t,n),_("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[qt.Z_8.stringToHashBucketFast(_("input",e,t,n),_("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return w.tidy((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Xt.p(_("x",e,t,n),_("dtype",e,t,n))];case"ExpandDims":{const r=_("axis",e,t,n);return[Yn.d(_("x",e,t,n),r)]}case"Squeeze":{const r=_("axis",e,t,n);return[Pn.L(_("x",e,t,n),r)]}case"Reshape":return[Ln.X(_("x",e,t,n),_("shape",e,t,n))];case"MirrorPad":return[Qn.V(_("x",e,t,n),_("padding",e,t,n),_("mode",e,t,n))];case"PadV2":case"Pad":return[Zn.v(_("x",e,t,n),_("padding",e,t,n),_("constantValue",e,t,n))];case"SpaceToBatchND":{const r=_("blockShape",e,t,n),a=_("paddings",e,t,n);return[Jn.f(_("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=_("blockShape",e,t,n),a=_("crops",e,t,n);return[er.E(_("x",e,t,n),r,a)]}case"DepthToSpace":{const r=_("blockSize",e,t,n),a=_("dataFormat",e,t,n).toUpperCase();return[tr.n(_("x",e,t,n),r,a)]}case"BroadcastTo":return[nr.U(_("x",e,t,n),_("shape",e,t,n))];case"BroadcastArgs":return[rr.X(_("s0",e,t,n),_("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=_("keyDType",e,t,n),s=_("valueDType",e,t,n),o=new nn(a,s);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=_("tableHandle",e,t,n,r),s=_("keys",e,t,n),o=_("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=_("tableHandle",e,t,n,r),s=_("keys",e,t,n),o=_("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=_("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=T(e.op);if(a&&a.customExecutor)return a.customExecutor(new me(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class sr{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function or(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,c=Object.keys(e).map((e=>$(e)[0]));let l=[];null!=r&&(l=r.map((e=>$(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(lr(e)||dr(e)||pr(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(-1===c.indexOf(e.name)&&-1===l.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}const ir=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],ur=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],cr=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function lr(e){return ir.indexOf(e.op)>=0}function dr(e){return ur.indexOf(e.op)>=0}function pr(e){return cr.indexOf(e.op)>=0}class hr{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new hr(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=or(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],o=Object.keys(a).map((e=>$(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,c=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||c.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return c}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[$(e)[0]])),a=t.map((e=>$(e)[0]));let s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const o=this.getCompilationKey(r,s);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,s),this.compiledMap.set(o,i));const u={},c={};return(0,w.tidy)((()=>{const n=new sr(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=$(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=ar(t,r,n,this._resourceManager);if(w.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,o)}}return null==this.parent&&n.dispose(s),t.map((e=>E(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=function(e,t,n){return t[A(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=o[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=C(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete o[e.id]}else null!=n&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=(0,w.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){console.warn(c.message)}this.resetIntermediateTensors();const s=new sr(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const o=t.map((e=>E(e,this.tensorsMap,s))),i=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...i,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[$(e)[0]])),o=n.map((e=>$(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=or(e,i,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=$(t),a=[];a[r]=e[t],h[n]=a}));const f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){const e=this.processStack(s,p,t,h,g,m,o,f,u);await Promise.all(e)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!lr(e)&&!E(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=l&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return h}processStack(e,t,n,r,a,s,o,i,u){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&_("isConstant",e.node,r,n)&&([l]=C(e.node.name,n)),null==r[e.node.name]){const d=ar(e.node,r,n,this._resourceManager);l||([l]=C(e.node.name,n));const p=n.currentContext;w.util.isPromise(d)?c.push(d.then((c=>(r[l]=c,n.currentContext=p,this.checkTensorForDisposal(l,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u),c)))):(r[l]=d,this.checkTensorForDisposal(l,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return c}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=C(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!E(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!E(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=$(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));w.util.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&w.util.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=$(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=$(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class fr{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class mr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new fr}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=w.io.browserHTTPRequest(e,this.loadOptions);else{const t=w.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(w.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=w.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new hr(ee.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ee.Instance.transformGraph(e.modelInitializer);this.initializer=new hr(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"===typeof e){const t=w.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof w.Tensor)&&!Array.isArray(e))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function gr(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new mr(e,t);return await n.load(),n}var yr=function(e,t){return(yr=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function br(e,t){function n(){this.constructor=e}yr(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var xr=function(){return(xr=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function vr(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{u(r.next(e))}catch(e){s(e)}}function i(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))}function kr(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=(a=o.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}function wr(e){var t=e.shape[2],n=(0,w.argMax)(e,2),r=(0,w.reshape)(n,[-1]);return(0,w.oneHot)(r,t)}function Ir(e,t){return(0,w.tidy)((function(){return(0,w.cast)((0,w.greater)(e,(0,w.scalar)(t)),"int32")}))}function Nr(e,t){var n=t.shape,r=n[0],a=n[1],s=n[2];return(0,w.tidy)((function(){var n=wr(t),o=(0,w.expandDims)((0,w.range)(0,s,1,"int32"),1),i=(0,w.cast)((0,w.matMul)(n,o),"int32"),u=(0,w.reshape)(i,[r,a]),c=(0,w.add)(u,(0,w.scalar)(1,"int32"));return(0,w.sub)(function(e,t){return(0,w.mul)(e,t)}(c,e),(0,w.scalar)(1,"int32"))}))}function Sr(e){var t=e.shape,n=t[0],r=t[1],a=t[2];return(0,w.tidy)((function(){var t=wr(e),s=(0,w.expandDims)((0,w.range)(0,a,1,"int32"),1),o=(0,w.cast)((0,w.matMul)(t,s),"int32");return(0,w.reshape)(o,[n,r])}))}var Tr=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;w.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return e.prototype.predict=function(e){var t=this;return(0,w.tidy)((function(){var n=t.preprocessInput((0,w.cast)(e,"float32")),r=(0,w.expandDims)(n,0),a=t.model.predict(r).map((function(e){return(0,w.squeeze)(e,[0])})),s=t.nameOutputResults(a);return{heatmapScores:(0,w.sigmoid)(s.heatmap),offsets:s.offsets,displacementFwd:s.displacementFwd,displacementBwd:s.displacementBwd,segmentation:s.segmentation,partHeatmaps:s.partHeatmaps,longOffsets:s.longOffsets,partOffsets:s.partOffsets}}))},e.prototype.dispose=function(){this.model.dispose()},e}(),_r=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return br(t,e),t.prototype.preprocessInput=function(e){return(0,w.tidy)((function(){return(0,w.sub)((0,w.div)(e,127.5),1)}))},t.prototype.nameOutputResults=function(e){return{offsets:e[0],segmentation:e[1],partHeatmaps:e[2],longOffsets:e[3],heatmap:e[4],displacementFwd:e[5],displacementBwd:e[6],partOffsets:e[7]}},t}(Tr),Er=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Cr=Er.length,Ar=Er.reduce((function(e,t,n){return e[t]=n,e}),{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(e){var t=e[0],n=e[1];return[Ar[t],Ar[n]]}));function $r(e,t,n){var r=e[0],a=e[1],s=t[0],o=t[1],i=n.top,u=n.bottom;return[o/(n.left+n.right+a),s/(i+u+r)]}function Rr(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+Cr)}}function Fr(e,t,n){var r=Rr(e.heatmapY,e.heatmapX,e.id,n),a=r.y,s=r.x;return{x:e.heatmapX*t+s,y:e.heatmapY*t+a}}function Or(e,t,n){return e<t?t:e>n?n:e}function Dr(e,t){return{x:e.x+t.x,y:e.y+t.y}}function Mr(e,t,n){void 0===n&&(n=.3);for(var r=0,a=0,s=0;s<e.length;s++)t.keypoints[s].score>n&&(a+=1,r+=Math.pow(e[s].x-t.keypoints[s].position.x,2)+Math.pow(e[s].y-t.keypoints[s].position.y,2));return 0===a?r=1/0:r/=a,r}function Br(e,t,n,r,a,s,o){for(var i=o[0],u=o[1],c=n(e),l=c.y*r+c.x,d=a[Cr*(2*l)+t],p=a[Cr*(2*l+1)+t],h=e.y+d,f=e.x+p,m=0;m<s;m++){h=Math.min(h,i-1);var g=n({x:f=Math.min(f,u-1),y:h}),y=g.y*r+g.x;h+=d=a[Cr*(2*y)+t],f+=p=a[Cr*(2*y+1)+t]}return{x:f,y:h}}function Pr(e,t,n,r,a,s,o,i,u,c){for(var l=a[0],d=a[1],p=s[0],h=s[1],f=i[0],m=i[1],g=[],y=function(e){return function(e,t,n,r){var a=t[0],s=t[1],o=n[0],i=n[1],u=Math.round(((a+e.y+1)*i-1)/r);return{x:Math.round(((s+e.x+1)*o-1)/r),y:u}}(e,[l,d],[p,h],u)},b=0;b<r;b++){var x=Br(e,b,y,o,t,c,[f,m]);g.push(x)}for(var v=-1,k=1/0,w=0;w<n.length;w++){var I=Mr(g,n[w]);I<k&&(v=w,k=I)}return v}function Lr(e,t){var n=e[0],r=e[1];return[Math.round((r-1)/t+1),Math.round((n-1)/t+1)]}function Vr(e,t,n,r,a,s,o,i,u,c,l){for(var d=o[0],p=o[1],h=e.shape,f=h[0],m=h[1],g=t.shape.slice(0,2),y=g[0],b=g[1],x=(0,w.reshape)(t,[y,b,2,Cr]),v=new Float32Array(l*Cr*3).fill(0),k=0;k<n.length;k++)for(var I=k*Cr*3,N=n[k],S=0;S<Cr;S++){var T=N.keypoints[S],_=I+3*S;v[_]=T.score,v[_+1]=T.position.y,v[_+2]=T.position.x}var E=$r([r,a],[d,p],i),C=E[0],A=E[1],$=(0,w.tensor)(v,[l,Cr,3]),R=i.top,F=i.left,O={variableNames:["segmentation","longOffsets","poses"],outputShape:[f,m],userCode:"\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\n    }\n\n    float convertToPositionInOutputFloat(\n        int pos, int pad, float scale, int stride) {\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\n    }\n\n    float dist(float x1, float y1, float x2, float y2) {\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\n    }\n\n    float sampleLongOffsets(float h, float w, int d, int k) {\n      float fh = fract(h);\n      float fw = fract(w);\n      int clH = int(ceil(h));\n      int clW = int(ceil(w));\n      int flH = int(floor(h));\n      int flW = int(floor(w));\n      float o11 = getLongOffsets(flH, flW, d, k);\n      float o12 = getLongOffsets(flH, clW, d, k);\n      float o21 = getLongOffsets(clH, flW, d, k);\n      float o22 = getLongOffsets(clH, clW, d, k);\n      float o1 = mix(o11, o12, fw);\n      float o2 = mix(o21, o22, fw);\n      return mix(o1, o2, fh);\n    }\n\n    int findNearestPose(int h, int w) {\n      float prob = getSegmentation(h, w);\n      if (prob < 1.0) {\n        return -1;\n      }\n\n      // Done(Tyler): convert from output space h/w to strided space.\n      float stridedH = convertToPositionInOutputFloat(\n        h, "+R+", "+A+", "+s+");\n      float stridedW = convertToPositionInOutputFloat(\n        w, "+F+", "+C+", "+s+");\n\n      float minDist = 1000000.0;\n      int iMin = -1;\n      for (int i = 0; i < "+l+"; i++) {\n        float curDistSum = 0.0;\n        int numKpt = 0;\n        for (int k = 0; k < "+Cr+"; k++) {\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\n\n          float y = float(h) + dy;\n          float x = float(w) + dx;\n\n          for (int s = 0; s < "+u+"; s++) {\n            int yRounded = round(min(y, float("+(r-1)+")));\n            int xRounded = round(min(x, float("+(a-1)+")));\n\n            float yStrided = convertToPositionInOutputFloat(\n              yRounded, "+R+", "+A+", "+s+");\n            float xStrided = convertToPositionInOutputFloat(\n              xRounded, "+F+", "+C+", "+s+");\n\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\n\n            y = y + dy;\n            x = x + dx;\n          }\n\n          float poseScore = getPoses(i, k, 0);\n          float poseY = getPoses(i, k, 1);\n          float poseX = getPoses(i, k, 2);\n          if (poseScore > "+c+") {\n            numKpt = numKpt + 1;\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\n          }\n        }\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\n          minDist = curDistSum / float(numKpt);\n          iMin = i;\n        }\n      }\n      return iMin;\n    }\n\n    void main() {\n        ivec2 coords = getOutputCoords();\n        int nearestPose = findNearestPose(coords[0], coords[1]);\n        setOutput(float(nearestPose));\n      }\n  "};return(0,w.backend)().compileAndRun(O,[e,x,$])}function Wr(){return"webgl"===(0,w.getBackend)()}function zr(e,t,n,r,a,s,o,i,u,c,l,d){var p=o[0],h=o[1];return void 0===u&&(u=.2),void 0===c&&(c=8),void 0===l&&(l=.3),void 0===d&&(d=10),vr(this,void 0,void 0,(function(){var o,f,m,g,y;return kr(this,(function(b){switch(b.label){case 0:return o=n.filter((function(e){return e.score>=u})),Wr()?(m=(0,w.tidy)((function(){var n=Vr(e,t,o,r,a,s,[p,h],i,c,l,d),u=(0,w.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype);return o.map((function(e,t){return function(e,t){return(0,w.tidy)((function(){return(0,w.cast)((0,w.equal)(e,(0,w.scalar)(t)),"int32")}))}(u,t)}))})),[4,Promise.all(m.map((function(e){return e.data()})))]):[3,2];case 1:return f=b.sent(),m.forEach((function(e){return e.dispose()})),[3,5];case 2:return[4,e.data()];case 3:return g=b.sent(),[4,t.data()];case 4:y=b.sent(),f=function(e,t,n,r,a,s,o,i,u,c){var l=o[0],d=o[1];void 0===c&&(c=5);for(var p=n.map((function(e){return new Uint8Array(r*a).fill(0)})),h=i.top,f=i.left,m=$r([r,a],[l,d],i),g=m[0],y=m[1],b=Lr([l,d],s)[0],x=0;x<r;x+=1)for(var v=0;v<a;v+=1){var k=x*a+v;if(1===e[k]){var w=Pr({x:v,y:x},t,n,c,[h,f],[g,y],b,[r,a],s,u);w>=0&&(p[w][k]=1)}}return p}(g,y,o,r,a,s,[p,h],i,c),b.label=5;case 5:return[2,f.map((function(e,t){return{data:e,pose:o[t],width:a,height:r}}))]}}))}))}function Ur(e,t,n,r,a,s,o,i,u,c,l,d,p){var h=i[0],f=i[1];return void 0===c&&(c=.2),void 0===l&&(l=8),void 0===d&&(d=.3),void 0===p&&(p=10),vr(this,void 0,void 0,(function(){var i,m,g,y,b,x;return kr(this,(function(v){switch(v.label){case 0:return i=r.filter((function(e){return e.score>=c})),Wr()?(g=(0,w.tidy)((function(){var r=Vr(e,t,i,a,s,o,[h,f],u,l,d,p),c=(0,w.engine)().makeTensorFromDataId(r.dataId,r.shape,r.dtype);return i.map((function(e,t){return function(e,t,n){return(0,w.tidy)((function(){return(0,w.sub)((0,w.mul)((0,w.cast)((0,w.equal)(e,(0,w.scalar)(n)),"int32"),(0,w.add)(t,1)),1)}))}(c,n,t)}))})),[4,Promise.all(g.map((function(e){return e.data()})))]):[3,2];case 1:return m=v.sent(),g.forEach((function(e){return e.dispose()})),[3,6];case 2:return[4,e.data()];case 3:return y=v.sent(),[4,t.data()];case 4:return b=v.sent(),[4,n.data()];case 5:x=v.sent(),m=function(e,t,n,r,a,s,o,i,u,c,l){var d=i[0],p=i[1];void 0===l&&(l=5);for(var h=r.map((function(e){return new Int32Array(a*s).fill(-1)})),f=u.top,m=u.left,g=$r([a,s],[d,p],u),y=g[0],b=g[1],x=Lr([d,p],o)[0],v=0;v<a;v+=1)for(var k=0;k<s;k+=1){var w=v*s+k;if(1===e[w]){var I=Pr({x:k,y:v},t,r,l,[f,m],[y,b],x,[a,s],o,c);I>=0&&(h[I][w]=n[w])}}return h}(y,b,x,i,a,s,o,[h,f],u,l),v.label=6;case 6:return[2,m.map((function(e,t){return{pose:i[t],data:e,height:a,width:s}}))]}}))}))}function Gr(e){return Math.floor(e/2)}var Hr=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(Gr(e),e);)this.exchange(e,Gr(e)),e=Gr(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function jr(e,t,n,r,a,s){for(var o=s.shape,i=o[0],u=o[1],c=!0,l=Math.max(n-a,0),d=Math.min(n+a+1,i),p=l;p<d;++p){for(var h=Math.max(r-a,0),f=Math.min(r+a+1,u),m=h;m<f;++m)if(s.get(p,m,e)>t){c=!1;break}if(!c)break}return c}var qr=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(e){var t=e[0],n=e[1];return[Ar[t],Ar[n]]})),Xr=qr.map((function(e){return e[1]})),Kr=qr.map((function(e){return e[0]}));function Yr(e,t,n,r){return{y:Or(Math.round(e.y/t),0,n-1),x:Or(Math.round(e.x/t),0,r-1)}}function Qr(e,t,n,r,a,s,o,i){void 0===i&&(i=2);for(var u=r.shape,c=u[0],l=u[1],d=function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,Yr(t.position,s,c,l),o),p=Dr(t.position,d),h=0;h<i;h++){var f=Yr(p,s,c,l),m=Rr(f.y,f.x,n,a);p=Dr({x:f.x*s,y:f.y*s},{x:m.x,y:m.y})}var g=Yr(p,s,c,l),y=r.get(g.y,g.x,n);return{position:p,part:Er[n],score:y}}function Zr(e,t,n,r,a,s){var o=t.shape[2],i=Xr.length,u=new Array(o),c=e.part,l=e.score,d=Fr(c,r,n);u[c.id]={score:l,part:Er[c.id],position:d};for(var p=i-1;p>=0;--p){var h=Xr[p],f=Kr[p];u[h]&&!u[f]&&(u[f]=Qr(p,u[h],f,t,n,r,s))}for(p=0;p<i;++p)h=Kr[p],f=Xr[p],u[h]&&!u[f]&&(u[f]=Qr(p,u[h],f,t,n,r,a));return u}function Jr(e,t,n,r){var a=n.x,s=n.y;return e.some((function(e){var n=e.keypoints[r].position;return function(e,t,n,r){var a=n-e,s=r-t;return a*a+s*s}(s,a,n.y,n.x)<=t}))}function ea(e,t,n){return n.reduce((function(n,r,a){var s=r.position,o=r.score;return Jr(e,t,s,a)||(n+=o),n}),0)/n.length}function ta(e,t,n,r,a,s,o,i){void 0===o&&(o=.5),void 0===i&&(i=20);for(var u=[],c=function(e,t,n){for(var r=n.shape,a=r[0],s=r[1],o=r[2],i=new Hr(a*s*o,(function(e){return e.score})),u=0;u<a;++u)for(var c=0;c<s;++c)for(var l=0;l<o;++l){var d=n.get(u,c,l);d<e||jr(l,d,u,c,t,n)&&i.enqueue({score:d,part:{heatmapY:u,heatmapX:c,id:l}})}return i}(o,1,e),l=i*i;u.length<s&&!c.empty();){var d=c.dequeue();if(!Jr(u,l,Fr(d.part,a,t),d.part.id)){var p=Zr(d,e,t,a,n,r),h=ea(u,l,p);u.push({keypoints:p,score:h})}}return u}var na,ra=[-123.15,-115.9,-103.06],aa=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return br(t,e),t.prototype.preprocessInput=function(e){return(0,w.add)(e,ra)},t.prototype.nameOutputResults=function(e){var t=e[0],n=e[1],r=e[2],a=e[3],s=e[4],o=e[5];return{offsets:s,segmentation:e[6],partHeatmaps:o,longOffsets:a,heatmap:r,displacementFwd:n,displacementBwd:t,partOffsets:e[7]}},t}(Tr),sa="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",oa="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function ia(e){if("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&0!==e.offsetHeight&&"offsetWidth"in e&&0!==e.offsetWidth)return[e.offsetHeight,e.offsetWidth];if(null!=e.height&&null!=e.width)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(e);if("undefined"!=typeof ImageData&&e instanceof ImageData)return[e.height,e.width];if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(e);if(e instanceof w.Tensor)return[e.shape[0],e.shape[1]];throw new Error("error: Unknown input type: "+e+".")}function ua(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var ca={low:"low",medium:"medium",high:"high",full:"full"},la=((na={})[ca.low]=.25,na[ca.medium]=.5,na[ca.high]=.75,na[ca.full]=1,na);function da(e,t,n){var r=n[0],a=n[1],s=function(e){if("string"==typeof e){var t=la[e];return w.util.assert("number"==typeof t,(function(){return"string value of inputResolution must be one of "+Object.values(ca).join(",")+" but was "+e+"."})),t}return w.util.assert("number"==typeof e&&e<=2&&e>=.1,(function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+e})),e}(e);return[ua(r*s,t),ua(a*s,t)]}function pa(e,t,n){var r=t[0],a=t[1];void 0===n&&(n=!1);var s,o,i,u,c,l,d=e.shape,p=d[0],h=d[1]/p;if(h>a/r){s=a;var f=r-(o=Math.ceil(s/h));i=0,u=0,c=Math.floor(f/2),l=r-(o+c)}else{o=r;var m=a-(s=Math.ceil(r*h));i=Math.floor(m/2),u=a-(s+i),c=0,l=0}return{resizedAndPadded:(0,w.tidy)((function(){var t;return t=n?w.image.resizeBilinear((0,w.reverse)(e,1),[o,s]):w.image.resizeBilinear(e,[o,s]),(0,w.pad3d)(t,[[c,l],[i,u],[0,0]])})),paddedBy:[[c,l],[i,u]]}}function ha(e,t,n,r,a){var s=t[0],o=t[1],i=n[0],u=n[1],c=r[0],l=c[0],d=c[1],p=r[1],h=p[0],f=p[1];return void 0===a&&(a=!1),(0,w.tidy)((function(){var t=w.image.resizeBilinear(e,[i,u],!0);return a&&(t=(0,w.sigmoid)(t)),function(e,t,n){var r=t[0],a=t[1],s=n[0],o=s[0],i=s[1],u=n[1],c=u[0],l=u[1];return(0,w.tidy)((function(){var t=(0,w.expandDims)(e);return(0,w.squeeze)(w.image.cropAndResize(t,[[o/(r+o+i-1),c/(a+c+l-1),(o+r-1)/(r+o+i-1),(c+a-1)/(a+c+l-1)]],[0],[r,a]),[0])}))}(t,[s,o],[[l,d],[h,f]])}))}function fa(e,t){var n=t[0],r=t[1],a=ia(e),s=a[0],o=a[1],i=r/n,u=[0,0,0,0],c=u[0],l=u[1],d=u[2],p=u[3];return o/s<i?(c=0,l=0,d=Math.round(.5*(i*s-o)),p=Math.round(.5*(i*s-o))):(c=Math.round(.5*(1/i*o-s)),l=Math.round(.5*(1/i*o-s)),d=0,p=0),{resized:(0,w.tidy)((function(){var t=function(e){return e instanceof w.Tensor?e:w.browser.fromPixels(e)}(e);return t=(0,w.pad3d)(t,[[c,l],[d,p],[0,0]]),w.image.resizeBilinear(t,[n,r])})),padding:{top:c,left:d,right:p,bottom:l}}}function ma(e){return vr(this,void 0,void 0,(function(){return kr(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function ga(e,t){return{score:e.score,keypoints:e.keypoints.map((function(e){var n=e.score,r=e.part,a=e.position;return{score:n,part:r,position:{x:t-1-a.x,y:a.y}}}))}}function ya(e,t,n,r,a){var s=t[0],o=t[1],i=n[0],u=n[1],c=function(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),1===n&&1===t&&0===r&&0===a?e:e.map((function(e){return function(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),{score:e.score,keypoints:e.keypoints.map((function(e){var s=e.score,o=e.part,i=e.position;return{score:s,part:o,position:{x:i.x*n+a,y:i.y*t+r}}}))}}(e,t,n,r,a)}))}(e,(s+r.top+r.bottom)/i,(o+r.left+r.right)/u,-r.top,-r.left);return a?function(e,t){return t<=0?e:e.map((function(e){return ga(e,t)}))}(c,o):c}var ba=!0,xa=!1,va={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},ka=["MobileNetV1","ResNet50"],wa={MobileNetV1:[8,16,32],ResNet50:[32,16]},Ia={MobileNetV1:[.5,.75,1],ResNet50:[1]},Na=[1,2,4];var Sa={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},Ta={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function _a(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,a=e.nmsRadius;if(t<0||t>1)throw new Error("segmentationThreshold "+t+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".")}function Ea(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,a=e.nmsRadius,s=e.minKeypointScore,o=e.refineSteps;if(t<0||t>1)throw new Error("segmentationThreshold "+t+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".");if(s<0||s>1)throw new Error("Invalid minKeypointScore "+s+".Should be in range [0.0, 1.0]");if(o<=0||o>20)throw new Error("Invalid refineSteps "+o+".Should be in range [1, 20]")}var Ca=function(){function e(e){this.baseModel=e}return e.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},e.prototype.segmentPersonActivation=function(e,t,n){var r=this;void 0===n&&(n=.5);var a=ia(e),s=a[0],o=a[1],i=da(t,this.baseModel.outputStride,[s,o]),u=fa(e,i),c=u.resized,l=u.padding,d=(0,w.tidy)((function(){var e=r.predictForPersonSegmentation(c),t=e.segmentLogits,a=e.heatmapScores,i=e.offsets,u=e.displacementFwd,d=e.displacementBwd,p=c.shape,h=p[0],f=p[1],m=ha(t,[s,o],[h,f],[[l.top,l.bottom],[l.left,l.right]],ba);return{segmentation:Ir((0,w.squeeze)(m),n),heatmapScores:a,offsets:i,displacementFwd:u,displacementBwd:d}})),p=d.segmentation,h=d.heatmapScores,f=d.offsets,m=d.displacementFwd,g=d.displacementBwd;return c.dispose(),{segmentation:p,heatmapScores:h,offsets:f,displacementFwd:m,displacementBwd:g,padding:l,internalResolutionHeightAndWidth:i}},e.prototype.segmentPerson=function(e,t){return void 0===t&&(t=Sa),vr(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,c,l,d,p,h,f,m,g,y,b,x;return kr(this,(function(v){switch(v.label){case 0:return _a(t=xr(xr({},Sa),t)),n=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),r=n.segmentation,a=n.heatmapScores,s=n.offsets,o=n.displacementFwd,i=n.displacementBwd,u=n.padding,c=n.internalResolutionHeightAndWidth,l=r.shape,d=l[0],p=l[1],[4,r.data()];case 1:return h=v.sent(),r.dispose(),[4,ma([a,s,o,i])];case 2:return f=v.sent(),m=f[0],g=f[1],y=f[2],b=f[3],x=ya(x=ta(m,g,y,b,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[d,p],c,u,xa),a.dispose(),s.dispose(),o.dispose(),i.dispose(),[2,{height:d,width:p,data:h,allPoses:x}]}}))}))},e.prototype.segmentMultiPerson=function(e,t){return void 0===t&&(t=Ta),vr(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,c,l,d,p,h,f,m,g,y,b,x,v,k,I,N=this;return kr(this,(function(S){switch(S.label){case 0:return Ea(t=xr(xr({},Ta),t)),n=ia(e),r=n[0],a=n[1],s=da(t.internalResolution,this.baseModel.outputStride,[r,a]),o=fa(e,s),i=o.resized,u=o.padding,c=(0,w.tidy)((function(){var e,n=N.predictForMultiPersonInstanceSegmentationAndPart(i),o=n.segmentLogits,c=n.longOffsets,l=n.heatmapScores,d=n.offsets,p=n.displacementFwd,h=n.displacementBwd,f=ha(o,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],ba);return e=c,{segmentation:Ir((0,w.squeeze)(f),t.segmentationThreshold),longOffsets:e,heatmapScoresRaw:l,offsetsRaw:d,displacementFwdRaw:p,displacementBwdRaw:h}})),l=c.segmentation,d=c.longOffsets,p=c.heatmapScoresRaw,h=c.offsetsRaw,f=c.displacementFwdRaw,m=c.displacementBwdRaw,[4,ma([p,h,f,m])];case 1:return g=S.sent(),y=g[0],b=g[1],x=g[2],v=g[3],k=ya(k=ta(y,b,x,v,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,a],s,u,xa),[4,zr(l,d,k,r,a,this.baseModel.outputStride,s,u,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return I=S.sent(),i.dispose(),l.dispose(),d.dispose(),p.dispose(),h.dispose(),f.dispose(),m.dispose(),[2,I]}}))}))},e.prototype.segmentPersonPartsActivation=function(e,t,n){var r=this;void 0===n&&(n=.5);var a=ia(e),s=a[0],o=a[1],i=da(t,this.baseModel.outputStride,[s,o]),u=fa(e,i),c=u.resized,l=u.padding,d=(0,w.tidy)((function(){var e=r.predictForPersonSegmentationAndPart(c),t=e.segmentLogits,a=e.partHeatmapLogits,i=e.heatmapScores,u=e.offsets,d=e.displacementFwd,p=e.displacementBwd,h=c.shape,f=h[0],m=h[1],g=ha(t,[s,o],[f,m],[[l.top,l.bottom],[l.left,l.right]],ba),y=ha(a,[s,o],[f,m],[[l.top,l.bottom],[l.left,l.right]],ba);return{partSegmentation:Nr(Ir((0,w.squeeze)(g),n),y),heatmapScores:i,offsets:u,displacementFwd:d,displacementBwd:p}})),p=d.partSegmentation,h=d.heatmapScores,f=d.offsets,m=d.displacementFwd,g=d.displacementBwd;return c.dispose(),{partSegmentation:p,heatmapScores:h,offsets:f,displacementFwd:m,displacementBwd:g,padding:l,internalResolutionHeightAndWidth:i}},e.prototype.segmentPersonParts=function(e,t){return void 0===t&&(t=Sa),vr(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,c,l,d,p,h,f,m,g,y,b,x;return kr(this,(function(v){switch(v.label){case 0:return _a(t=xr(xr({},Sa),t)),n=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),r=n.partSegmentation,a=n.heatmapScores,s=n.offsets,o=n.displacementFwd,i=n.displacementBwd,u=n.padding,c=n.internalResolutionHeightAndWidth,l=r.shape,d=l[0],p=l[1],[4,r.data()];case 1:return h=v.sent(),r.dispose(),[4,ma([a,s,o,i])];case 2:return f=v.sent(),m=f[0],g=f[1],y=f[2],b=f[3],x=ya(x=ta(m,g,y,b,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[d,p],c,u,xa),a.dispose(),s.dispose(),o.dispose(),i.dispose(),[2,{height:d,width:p,data:h,allPoses:x}]}}))}))},e.prototype.segmentMultiPersonParts=function(e,t){return void 0===t&&(t=Ta),vr(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,c,l,d,p,h,f,m,g,y,b,x,v,k,I,N,S=this;return kr(this,(function(T){switch(T.label){case 0:return Ea(t=xr(xr({},Ta),t)),n=ia(e),r=n[0],a=n[1],s=da(t.internalResolution,this.baseModel.outputStride,[r,a]),o=fa(e,s),i=o.resized,u=o.padding,c=(0,w.tidy)((function(){var e=S.predictForMultiPersonInstanceSegmentationAndPart(i),n=e.segmentLogits,o=e.longOffsets,c=e.heatmapScores,l=e.offsets,d=e.displacementFwd,p=e.displacementBwd,h=e.partHeatmaps,f=ha(n,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],ba),m=ha(h,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],ba),g=o;return{segmentation:Ir((0,w.squeeze)(f),t.segmentationThreshold),longOffsets:g,heatmapScoresRaw:c,offsetsRaw:l,displacementFwdRaw:d,displacementBwdRaw:p,partSegmentation:Sr(m)}})),l=c.segmentation,d=c.longOffsets,p=c.heatmapScoresRaw,h=c.offsetsRaw,f=c.displacementFwdRaw,m=c.displacementBwdRaw,g=c.partSegmentation,[4,ma([p,h,f,m])];case 1:return y=T.sent(),b=y[0],x=y[1],v=y[2],k=y[3],I=ya(I=ta(b,x,v,k,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,a],s,u,xa),[4,Ur(l,d,g,I,r,a,this.baseModel.outputStride,s,u,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return N=T.sent(),i.dispose(),l.dispose(),d.dispose(),p.dispose(),h.dispose(),f.dispose(),m.dispose(),g.dispose(),[2,N]}}))}))},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function Aa(e){return vr(this,void 0,void 0,(function(){var t,n,r,a,s,o;return kr(this,(function(i){switch(i.label){case 0:if(t=e.outputStride,n=e.quantBytes,r=e.multiplier,null==w)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return a=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+e+".json";return 4===n?oa+"float/"+r[t]+"/"+a:oa+"quant"+n+"/"+r[t]+"/"+a}(t,r,n),[4,gr(e.modelUrl||a)];case 1:return s=i.sent(),o=new _r(s,t),[2,new Ca(o)]}}))}))}function $a(e){return vr(this,void 0,void 0,(function(){var t,n,r,a,s;return kr(this,(function(o){switch(o.label){case 0:if(t=e.outputStride,n=e.quantBytes,null==w)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return r=function(e,t){var n="model-stride"+e+".json";return 4===t?sa+"float/"+n:sa+"quant"+t+"/"+n}(t,n),[4,gr(e.modelUrl||r)];case 1:return a=o.sent(),s=new aa(a,t),[2,new Ca(s)]}}))}))}function Ra(e){return void 0===e&&(e=va),vr(this,void 0,void 0,(function(){return kr(this,(function(t){return"ResNet50"===(e=function(e){if(null==(e=e||va).architecture&&(e.architecture="MobileNetV1"),ka.indexOf(e.architecture)<0)throw new Error("Invalid architecture "+e.architecture+". Should be one of "+ka);if(null==e.outputStride&&(e.outputStride=16),wa[e.architecture].indexOf(e.outputStride)<0)throw new Error("Invalid outputStride "+e.outputStride+". Should be one of "+wa[e.architecture]+" for architecture "+e.architecture+".");if(null==e.multiplier&&(e.multiplier=1),Ia[e.architecture].indexOf(e.multiplier)<0)throw new Error("Invalid multiplier "+e.multiplier+". Should be one of "+Ia[e.architecture]+" for architecture "+e.architecture+".");if(null==e.quantBytes&&(e.quantBytes=4),Na.indexOf(e.quantBytes)<0)throw new Error("Invalid quantBytes "+e.quantBytes+". Should be one of "+Na+" for architecture "+e.architecture+".");return e}(e)).architecture?[2,$a(e)]:"MobileNetV1"===e.architecture?[2,Aa(e)]:[2,null]}))}))}var Fa={};function Oa(e,t,n,r){var a=e.width,s=e.height,o=t.width,i=t.height;if(a!==o||s!==i)throw new Error("error: dimensions must match. "+n+" has dimensions "+a+"x"+s+", "+r+" has dimensions "+o+"x"+i)}function Da(e){var t=e.getContext("2d");t.scale(-1,1),t.translate(-e.width,0)}function Ma(e,t,n){e.globalCompositeOperation=n,e.drawImage(t,0,0)}function Ba(e){return Fa[e]||(Fa[e]=function(){if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(0,0);throw new Error("Cannot create a canvas in this context")}()),Fa[e]}function Pa(e,t,n){var r=e.height,a=e.width,s=n.getContext("2d");n.width=a,n.height=r,s.clearRect(0,0,a,r),s.save(),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?function(e,t,n){for(var r=e.getContext("2d"),a=0,s=1/(2*Math.PI*5*5),o=n<3?1:2,i=-n;i<=n;i+=o)for(var u=-n;u<=n;u+=o)a+=s*Math.exp(-(u*u+i*i)/50);for(i=-n;i<=n;i+=o)for(u=-n;u<=n;u+=o)r.globalAlpha=s*Math.exp(-(u*u+i*i)/50)/a*n,r.drawImage(t,u,i);r.globalAlpha=1}(n,e,t):(s.filter="blur("+t+"px)",s.drawImage(e,0,0,a,r)),s.restore()}function La(e,t,n){var r=Ba(n);return 0===t?function(e,t){var n=e.width,r=e.height;t.width=n,t.height=r,t.getContext("2d").drawImage(e,0,0,n,r)}(e,r):Pa(e,t,r),r}function Va(e,t){var n=Ba(t);return function(e,t){t.width=e.width,t.height=e.height,t.getContext("2d").putImageData(e,0,0)}(e,n),n}function Wa(e,t,n,r,a){if(void 0===t&&(t={r:0,g:0,b:0,a:0}),void 0===n&&(n={r:0,g:0,b:0,a:255}),void 0===r&&(r=!1),void 0===a&&(a=[1]),Array.isArray(e)&&0===e.length)return null;var s,o=(s=Array.isArray(e)?e:[e])[0],i=o.width,u=o.height,c=new Uint8ClampedArray(i*u*4);function l(e,t,n,r,a,s){void 0===s&&(s={r:0,g:255,b:255,a:255});for(var o=-a;o<=a;o++)for(var i=-a;i<=a;i++)if(0!==o&&0!==i){var u=(t+o)*r+(n+i);e[4*u+0]=s.r,e[4*u+1]=s.g,e[4*u+2]=s.b,e[4*u+3]=s.a}}function d(e,t,n,r,a,s){void 0===a&&(a=[1]),void 0===s&&(s=1);for(var o=0,i=-s;i<=s;i++)for(var u=function(s){if(0!==i&&0!==s){var u=(t+i)*r+(n+s);a.some((function(t){return t===e[u]}))||(o+=1)}},c=-s;c<=s;c++)u(c);return o>0}for(var p=0;p<u;p+=1)for(var h=function(e){var o=p*i+e;c[4*o+0]=n.r,c[4*o+1]=n.g,c[4*o+2]=n.b,c[4*o+3]=n.a;for(var h=function(n){if(a.some((function(e){return e===s[n].data[o]}))){c[4*o]=t.r,c[4*o+1]=t.g,c[4*o+2]=t.b,c[4*o+3]=t.a;var h=d(s[n].data,p,e,i,a);r&&p-1>=0&&p+1<u&&e-1>=0&&e+1<i&&h&&l(c,p,e,i,1)}},f=0;f<s.length;f++)h(f)},f=0;f<i;f+=1)h(f);return new ImageData(c,i,u)}var za=[[110,64,170],[143,61,178],[178,60,178],[210,62,167],[238,67,149],[255,78,125],[255,94,99],[255,115,75],[255,140,56],[239,167,47],[217,194,49],[194,219,64],[175,240,91],[135,245,87],[96,247,96],[64,243,115],[40,234,141],[28,219,169],[26,199,194],[33,176,213],[47,150,224],[65,125,224],[84,101,214],[99,81,195]];function Ua(e,t){if(void 0===t&&(t=za),Array.isArray(e)&&0===e.length)return null;for(var n,r=(n=Array.isArray(e)?e:[e])[0],a=r.width,s=r.height,o=new Uint8ClampedArray(a*s*4),i=0;i<s*a;++i){var u=4*i;o[u+0]=255,o[u+1]=255,o[u+2]=255,o[u+3]=255;for(var c=0;c<n.length;c++){var l=n[c].data[i];if(-1!==l){var d=t[l];if(!d)throw new Error("No color could be found for part id "+l);o[u+0]=d[0],o[u+1]=d[1],o[u+2]=d[2],o[u+3]=255}}}return new ImageData(o,a,s)}var Ga="blurred",Ha="blurred-mask",ja="mask",qa="lowres-part-mask";function Xa(e,t,n,r,a,s){void 0===r&&(r=.7),void 0===a&&(a=0),void 0===s&&(s=!1);var o=ia(t),i=o[0],u=o[1];e.width=u,e.height=i;var c=e.getContext("2d");if(c.save(),s&&Da(e),c.drawImage(t,0,0),c.globalAlpha=r,n){Oa({width:u,height:i},n,"image","mask");var l=La(Va(n,ja),a,Ha);c.drawImage(l,0,0,u,i)}c.restore()}function Ka(e,t,n,r,a,s,o){void 0===r&&(r=.7),void 0===a&&(a=0),void 0===s&&(s=!1),void 0===o&&(o=10);var i=ia(t),u=i[0];Oa({width:i[1],height:u},n,"image","mask");var c=La(Va(n,ja),a,Ha);e.width=c.width,e.height=c.height;var l=e.getContext("2d");l.save(),s&&Da(e);var d=Ba(qa),p=d.getContext("2d");d.width=c.width*(1/o),d.height=c.height*(1/o),p.drawImage(c,0,0,c.width,c.height,0,0,d.width,d.height),l.imageSmoothingEnabled=!1,l.drawImage(d,0,0,d.width,d.height,0,0,e.width,e.height);for(var h=0;h<d.width;h++)l.beginPath(),l.strokeStyle="#ffffff",l.moveTo(o*h,0),l.lineTo(o*h,e.height),l.stroke();for(h=0;h<d.height;h++)l.beginPath(),l.strokeStyle="#ffffff",l.moveTo(0,o*h),l.lineTo(e.width,o*h),l.stroke();l.globalAlpha=1-r,l.drawImage(t,0,0,c.width,c.height),l.restore()}function Ya(e,t,n,r,a,s){void 0===r&&(r=3),void 0===a&&(a=3),void 0===s&&(s=!1);var o=La(t,r,Ga);e.width=o.width,e.height=o.height;var i=e.getContext("2d");if(Array.isArray(n)&&0===n.length)i.drawImage(o,0,0);else{var u=function(e,t){var n=Va(Wa(e,{r:0,g:0,b:0,a:255},{r:0,g:0,b:0,a:0}),ja);return 0===t?n:La(n,t,Ha)}(n,a);i.save(),s&&Da(e);var c=ia(t),l=c[0],d=c[1];i.drawImage(t,0,0,d,l),Ma(i,u,"destination-in"),Ma(i,o,"destination-over"),i.restore()}}function Qa(e,t,n,r,a,s,o){void 0===r&&(r=[0,1]),void 0===a&&(a=3),void 0===s&&(s=3),void 0===o&&(o=!1);var i=La(t,a,Ga);e.width=i.width,e.height=i.height;var u=e.getContext("2d");if(Array.isArray(n)&&0===n.length)u.drawImage(i,0,0);else{var c=function(e,t,n){var r=Va(Wa(e,{r:0,g:0,b:0,a:0},{r:0,g:0,b:0,a:255},!0,t),ja);return 0===n?r:La(r,n,Ha)}(n,r,s);u.save(),o&&Da(e);var l=ia(t),d=l[0],p=l[1];u.drawImage(t,0,0,p,d),Ma(u,c,"destination-in"),Ma(u,i,"destination-over"),u.restore()}}var Za=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],Ja="2.2.0"},18166:function(e,t,n){"use strict";n.d(t,{H:function(){return a}});var r=n(83921);function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},95982:function(e,t,n){"use strict";n.r(t),n.d(t,{MathBackendCPU:function(){return o},shared:function(){return i},version_cpu:function(){return u}});var r=n(83921),a=n(18166);const s=r.kernel_impls.whereImpl;class o extends r.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,(0,r.engine)())}nextDataId(){return o.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map((e=>r.util.encodeString(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.util.decodeString(e)))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return(0,r.engine)().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.util.now();e();return{kernelMs:r.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,a.H)([e],"where");const t=this.readSync(e.dataId);return s(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}o.nextDataId=0;var i=n(45226);const u="3.12.0";(0,r.registerBackend)("cpu",(()=>new o),1);var c=n(76738);const l=(0,c.A)(r.Elu,(e=>e>=0?e:Math.exp(e)-1)),d={kernelName:r.Elu,backendName:"cpu",kernelFunc:l};var p=n(41775);function h(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{alpha:i}=s;(0,a.H)([o],"leakyRelu");const u=r.util.sizeFromShape(o.shape),c=n.data.get(o.dataId).values,l=r.util.getTypedArrayFromDType("float32",u);for(let r=0;r<c.length;r++)l[r]=c[r]<0?i*c[r]:c[r];return n.makeTensorInfo(o.shape,"float32",l)}const f={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:h};var m=n(33533);const g=(0,m.b)(((e,t)=>e<0?t*e:e));function y(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;(0,a.H)([r,s],"prelu");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[u,c]=g(r.shape,s.shape,o,i,"float32");return n.makeTensorInfo(c,"float32",u)}const b={kernelName:r.Prelu,backendName:"cpu",kernelFunc:y},x=(0,c.A)(r.Relu,(e=>Math.max(0,e))),v={kernelName:r.Relu,backendName:"cpu",kernelFunc:x},k=(0,c.A)(r.Relu6,(e=>Math.min(Math.max(0,e),6))),w={kernelName:r.Relu6,backendName:"cpu",kernelFunc:k};var I=n(40108);function N(e,t,n,r,a){if("linear"===n)return(0,p.y)({inputs:{x:t},backend:e});if("relu"===n)return x({inputs:{x:t},backend:e});if("elu"===n)return l({inputs:{x:t},backend:e});if("relu6"===n)return k({inputs:{x:t},backend:e});if("prelu"===n)return y({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return h({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return(0,I.XD)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var S=n(32779);function T(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:o}=a,i=r.util.sizeFromShape(s.shape),u=r.util.inferFromImplicitShape(o,i),c=r.util.sizeFromShape(u);r.util.assert(i===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:s.dataId,shape:u,dtype:s.dtype}}const _={kernelName:r.Reshape,backendName:"cpu",kernelFunc:T};function E(e){const{inputs:t,backend:n,attrs:s}=e,{a:o,b:i}=t,{transposeA:u,transposeB:c}=s;(0,a.H)([o,i],"matMul");const l=o.shape.length,d=i.shape.length,p=u?o.shape[l-2]:o.shape[l-1],h=c?i.shape[d-1]:i.shape[d-2],f=u?o.shape[l-1]:o.shape[l-2],m=c?i.shape[d-2]:i.shape[d-1],g=o.shape.slice(0,-2),y=i.shape.slice(0,-2),b=r.util.sizeFromShape(g),x=r.util.sizeFromShape(y),v=r.broadcast_util.assertAndGetBroadcastShape(o.shape.slice(0,-2),i.shape.slice(0,-2)).concat([f,m]);r.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${o.shape} and ${i.shape} and transposeA=${u} and transposeB=${c} must match.`));const k=c?[x,m,h]:[x,h,m],w=T({inputs:{x:o},backend:n,attrs:{shape:u?[b,p,f]:[b,f,p]}}),I=T({inputs:{x:i},backend:n,attrs:{shape:k}}),N=u?w.shape[1]:w.shape[2],S=u?w.shape[2]:w.shape[1],_=c?I.shape[1]:I.shape[2],E=Math.max(b,x),C=n.data.get(w.dataId).values,A=n.data.get(I.dataId).values,$=r.util.computeStrides(w.shape),R=r.util.computeStrides(I.shape),[F,O,D]=u?[$[0],1,$[1]]:[$[0],$[1],1],[M,B,P]=c?[1,R[1],R[0]]:[R[1],1,R[0]],L=S*_,V=(0,r.buffer)([E,S,_],w.dtype),W=V.values,z=n.blockSize;for(let r=0;r<E;r++)for(let e=0;e<S;e+=z)for(let t=0;t<_;t+=z)for(let n=0;n<N;n+=z){const a=Math.min(e+z,S),s=Math.min(t+z,_),o=Math.min(n+z,N);for(let i=e;i<a;i++)for(let e=t;e<s;e++){let t=0;for(let a=n;a<o;a++){const n=Math.min(r,b-1)*F,s=Math.min(r,x-1)*P;t+=C[n+i*O+a*D]*A[a*M+e*B+s]}W[r*L+(i*_+e)]+=t}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,V.dtype,V.values)}const C={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:E};const A={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=E({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(h=(0,S.IH)({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),l&&(f=N(n,p,l,i,d),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}};var $=n(60224);const R=(0,c.A)(r.Acos,(e=>Math.acos(e))),F={kernelName:r.Acos,backendName:"cpu",kernelFunc:R},O=(0,c.A)(r.Acosh,(e=>Math.acosh(e))),D={kernelName:r.Acosh,backendName:"cpu",kernelFunc:O};const M={kernelName:r.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;(0,a.H)(t,"addN");const o=s.map((e=>n.data.get(e.dataId).values)),i=(0,r.buffer)(s[0].shape,s[0].dtype),u=i.values;for(let r=0;r<s.length;r++){const e=o[r];for(let t=0;t<u.length;t++)u[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var B=n(44802);const P={kernelName:r.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:u}=s;(0,a.H)(o,"all");const c=r.util.parseAxisParam(i,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=(0,B.p)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),g=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),y=n.data.get(p.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t&&r}g[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const b=n.makeTensorInfo(h,p.dtype,g);if(u){const e=T({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const L={kernelName:r.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:u}=s;(0,a.H)(o,"any");const c=r.util.parseAxisParam(i,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=(0,B.p)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),g=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),y=n.data.get(p.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t||r}g[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const b=n.makeTensorInfo(h,p.dtype,g);if(u){const e=T({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const V={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i}=s;(0,a.H)(o,"argMax");let u=r.util.parseAxisParam(i,o.shape);const c=r.backend_util.getAxesPermutation(u,o.shape.length);let l=o;const d=[];null!=c&&(l=(0,B.p)({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",u,l.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(f,"int32"),g=r.util.sizeFromShape(h),y=n.data.get(l.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const a=y[e+r];a>t&&(t=a,n=r)}m[r]=n}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",m)}};const W={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i}=s;(0,a.H)(o,"argMin");let u=r.util.parseAxisParam(i,o.shape);const c=r.backend_util.getAxesPermutation(u,o.shape.length);let l=o;const d=[];null!=c&&(l=(0,B.p)({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",u,l.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(f,"int32"),g=r.util.sizeFromShape(h),y=n.data.get(l.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const a=y[e+r];a<t&&(t=a,n=r)}m[r]=n}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",m)}},z=(0,c.A)(r.Asin,(e=>Math.asin(e))),U={kernelName:r.Asin,backendName:"cpu",kernelFunc:z},G=(0,c.A)(r.Asinh,(e=>Math.asinh(e))),H={kernelName:r.Asinh,backendName:"cpu",kernelFunc:G},j=(0,c.A)(r.Atan,(e=>Math.atan(e))),q={kernelName:r.Atan,backendName:"cpu",kernelFunc:j};var X=n(46205);const K=(0,m.b)(((e,t)=>Math.atan2(e,t))),Y=(0,X.j)(r.Atan2,K),Q={kernelName:r.Atan2,backendName:"cpu",kernelFunc:Y},Z=(0,c.A)(r.Atanh,(e=>Math.atanh(e))),J={kernelName:r.Atanh,backendName:"cpu",kernelFunc:Z};function ee(e,t,n,a,s,o){const i=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,r.buffer)(s.outShape,n),y=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let r=0;r<s.batchSize;++r){const t=r*b,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let g=0;g<s.outHeight;++g){const b=g*i-h,k=Math.max(0,b),w=Math.min(s.inHeight,d+b),I=t+g*x;for(let t=0;t<s.outWidth;++t){const i=t*u-f,d=Math.max(0,i),h=Math.min(s.inWidth,p+i);let g=m,b=0,x=0;for(let t=k;t<w;t+=c){const s=n+t*a[1];for(let t=d;t<h;t+=l){const n=e[s+t*a[2]+r];"max"===o&&n>g?g=n:"avg"===o&&(b+=n,x++)}if(isNaN(g))break}y[I+t*v+r]="avg"===o?b/x:g}}}return g}function te(e,t,n,a,s=!1,o=!1){const i=(0,r.buffer)(a.outShape,"int32"),u=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,r.buffer)(t,n,e);for(let r=0;r<a.batchSize;++r)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*u-f;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,p+n);for(let u=0;u<a.outWidth;++u){const p=u*c-m;let f=p;for(;f<0;)f+=d;const x=Math.min(a.inWidth,h+p);let v=Number.NEGATIVE_INFINITY,k=-1;for(let t=y;t<b;t+=l){const i=t-n;for(let n=f;n<x;n+=d){const u=n-p,c=g.get(r,t,n,e);c>v&&(v=c,k=s?o?((r*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:i*h+u)}}i.set(k,r,t,u,e)}}return i}function ne(e,t,n,a,s,o){const i=s.strideDepth,u=s.strideHeight,c=s.strideWidth,l=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,h=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,y=s.padInfo.top,b=s.padInfo.left,x="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,r.buffer)(s.outShape,n),k=v.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let r=0;r<s.batchSize;++r){const t=r*w,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let v=0;v<s.outDepth;++v){const w=v*i-g;let T=w;for(;T<0;)T+=l;const _=Math.min(s.inDepth,h+w),E=t+v*I;for(let t=0;t<s.outHeight;++t){const i=t*u-y;let h=i;for(;h<0;)h+=d;const g=Math.min(s.inHeight,f+i),v=E+t*N;for(let t=0;t<s.outWidth;++t){const i=t*c-b;let u=i;for(;u<0;)u+=p;const f=Math.min(s.inWidth,m+i),y=v+t*S;let w=x,I=0,N=0;for(let t=T;t<_;t+=l){const s=n+t*a[1];for(let t=h;t<g;t+=d){const n=s+t*a[2];for(let t=u;t<f;t+=p){const s=e[n+t*a[3]+r];if("max"===o&&s>w?w=s:"avg"===o&&(I+=s,N++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}k[y+r]="avg"===o?I/N:w}}}}return v}const re={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t;(0,a.H)(o,"avgPool");const{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const d=r.backend_util.computePool2DInfo(o.shape,i,u,1,c,l);let h;if(1===d.filterWidth&&1===d.filterHeight&&r.util.arraysEqual(d.inShape,d.outShape))h=(0,p.y)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.util.computeStrides(o.shape),a=ee(e,o.shape,o.dtype,t,d,"avg");h=n.makeTensorInfo(d.outShape,o.dtype,a.values)}return h}};const ae={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=s;(0,a.H)(o,"avgPool3d");const p=r.backend_util.computePool3DInfo(o.shape,i,u,1,c,l,d),h=ne(n.data.get(o.dataId).values,o.shape,o.dtype,r.util.computeStrides(o.shape),p,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const se={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s;(0,a.H)([o,i],"avgPool3DGrad");const p=r.backend_util.computePool3DInfo(i.shape,u,c,1,l,d),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,y=p.filterHeight,b=p.filterWidth,x=p.dilationDepth,v=p.dilationHeight,k=p.dilationWidth,w=p.effectiveFilterDepth,I=p.effectiveFilterHeight,N=p.effectiveFilterWidth,S=w-1-p.padInfo.front,T=N-1-p.padInfo.left,_=I-1-p.padInfo.top,E=(0,r.buffer)(i.shape,"float32"),C=1/(g*y*b),A=n.bufferSync(o);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inDepth;++t)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){const s=t-S,o=n-_,i=a-T;let u=0;for(let t=0;t<w;t+=x){const n=(s+t)/h;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let t=0;t<I;t+=v){const a=(o+t)/f;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let t=0;t<N;t+=k){const s=(i+t)/m;if(s<0||s>=p.outWidth||Math.floor(s)!==s)continue;u+=A.get(r,n,a,s,e)}}}E.set(u*C,r,t,n,a,e)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}};const oe={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,u=i;(0,a.H)([o,i],"avgPoolGrad");const{filterSize:c,strides:l,pad:d}=s,p=r.backend_util.computePool2DInfo(u.shape,c,l,1,d),h=p.strideHeight,f=p.strideWidth,m=p.filterHeight,g=p.filterWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,k=v-1-p.padInfo.left,w=x-1-p.padInfo.top,I=(0,r.buffer)(u.shape,"float32"),N=1/(m*g),S=n.data.get(o.dataId).values,T=(0,r.buffer)(o.shape,"float32",S);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-w,s=n-k;let o=0;for(let t=0;t<x;t+=y){const n=(a+t)/h;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let t=0;t<v;t+=b){const a=(s+t)/f;if(a<0||a>=p.outWidth||Math.floor(a)!==a)continue;o+=T.get(r,n,a,e)}}I.set(o*N,r,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const ie={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,scale:i,offset:u,mean:c,variance:l}=t;r.util.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.util.assert(null==u||c.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.util.assert(null==i||c.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,a.H)([o,c,l,i,u],"batchNorm");let{varianceEpsilon:d}=s;null==d&&(d=.001);const p=n.data.get(o.dataId).values,h=n.data.get(c.dataId).values,f=n.data.get(l.dataId).values,m=i?n.data.get(i.dataId).values:new Float32Array([1]),g=u?n.data.get(u.dataId).values:new Float32Array([0]),y=new Float32Array(p.length),b=g.length,x=m.length,v=f.length,k=h.length;let w=0,I=0,N=0,S=0;for(let r=0;r<p.length;++r)y[r]=g[w++]+(p[r]-h[I++])*m[N++]/Math.sqrt(f[S++]+d),w>=b&&(w=0),I>=k&&(I=0),N>=x&&(N=0),S>=v&&(S=0);return n.makeTensorInfo(o.shape,o.dtype,y)}};var ue=n(82578);const ce={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{blockShape:i,crops:u}=s;(0,a.H)([o],"batchToSpaceND");const c=i.reduce(((e,t)=>e*t)),l=r.backend_util.getReshaped(o.shape,i,c),d=r.backend_util.getPermuted(l.length,i.length),p=r.backend_util.getReshapedPermuted(o.shape,i,c),h=r.backend_util.getSliceBeginCoords(u,i.length),f=r.backend_util.getSliceSize(p,u,i.length),m=T({inputs:{x:o},backend:n,attrs:{shape:l}}),g=(0,B.p)({inputs:{x:m},backend:n,attrs:{perm:d}}),y=T({inputs:{x:g},backend:n,attrs:{shape:p}}),b=(0,ue.tP)({inputs:{x:y},backend:n,attrs:{begin:h,size:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),b}};var le=n(58607);const de={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=(0,le.W)(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,c)}};const pe={kernelName:r.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,u=r.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}};var he=n(29258),fe=n(34769);const me=(0,c.A)(r.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ge={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:me};var ye=n(26961);const be={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),o=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,u=n.data.get(o.dataId).values,c=n.data.get(i.dataId).values;for(let r=0;r<u.length;r++){const e=u[r],t=c[r];a[r]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};var xe=n(48926);function ve(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const ke={kernelName:r.Imag,backendName:"cpu",kernelFunc:ve};var we=n(82186);function Ie(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,o=r.util.parseAxisParam(s,t[0].shape)[0];let i=r.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===r.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return(0,p.y)({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));if(r.backend_util.assertParamsConsistent(c,o),"complex64"===u[0].dtype){const e=u.map((e=>(0,we.k)({inputs:{input:e},backend:n}))),t=u.map((e=>ve({inputs:{input:e},backend:n}))),r=Ie({inputs:e,backend:n,attrs:{axis:o}}),a=Ie({inputs:t,backend:n,attrs:{axis:o}}),s=(0,ye.P)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=u.map((e=>{const t=r.util.sizeFromShape(e.shape.slice(o));return T({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=r.backend_util.computeOutShape(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],f=(0,xe.j)(d,i,t[0].dtype,h),m=r.backend_util.computeOutShape(u.map((e=>e.shape)),o),g=n.makeTensorInfo(m,t[0].dtype,f);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const Ne={kernelName:r.Concat,backendName:"cpu",kernelFunc:Ie};function Se(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}=s;(0,a.H)([o,i],"conv2d");const h=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(o.shape,i.shape,u,d,c,p,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.dilationHeight,b=f.dilationWidth,x=f.padInfo.left,v=f.padInfo.top,k="channelsLast"===f.dataFormat,w=new r.TensorBuffer(f.outShape,o.dtype),I=r.util.computeStrides(o.shape),N=r.util.computeStrides(i.shape),S=I[0],T=k?I[1]:I[2],_=k?I[2]:1,E=k?1:I[1],C=w.strides[0],A=k?w.strides[1]:w.strides[2],$=k?w.strides[2]:1,R=k?1:w.strides[1],F=n.data.get(o.dataId).values,O=n.data.get(i.dataId).values,D=w.values;for(let r=0;r<f.batchSize;++r){const e=r*S,t=r*C;for(let n=0;n<f.outHeight;++n){const r=t+n*A,a=n*f.strideHeight-v;for(let t=0;t<m;++t){const n=a+t*y;if(n<0||n>=f.inHeight)continue;const s=t*N[0],o=e+n*T;for(let e=0;e<f.outWidth;++e){const t=r+e*$,n=e*f.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const a=o+r*_;let i=s+e*N[1];for(let e=0;e<f.inChannels;++e){const n=F[a+e*E];for(let e=0;e<f.outChannels;++e)D[t+e*R]+=n*O[i+e];i+=f.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const Te={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:Se};const _e={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:u,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:p}=s;(0,a.H)([o,i],"conv2dBackpropFilter");const h=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(o.shape,p,u,1,c,d,!1,h),{strideHeight:m,strideWidth:g,filterHeight:y,filterWidth:b}=f,x="channelsLast"===f.dataFormat,v=new r.TensorBuffer(f.filterShape,"float32"),k=f.padInfo.left,w=f.padInfo.top,I=n.data.get(o.dataId).values,N=n.data.get(i.dataId).values,S=new r.TensorBuffer(o.shape,o.dtype,I),T=new r.TensorBuffer(i.shape,i.dtype,N);for(let r=0;r<y;++r){const e=Math.max(0,Math.ceil((w-r)/m)),t=Math.min(f.outHeight,(f.inHeight+w-r)/m);for(let n=0;n<b;++n){const a=Math.max(0,Math.ceil((k-n)/g)),s=Math.min(f.outWidth,(f.inWidth+k-n)/g);for(let o=0;o<f.inChannels;++o)for(let i=0;i<f.outChannels;++i){let u=0;for(let c=0;c<f.batchSize;++c)for(let l=e;l<t;++l){const e=r+l*m-w;for(let t=a;t<s;++t){const r=n+t*g-k;u+=x?S.get(c,e,r,o)*T.get(c,l,t,i):S.get(c,o,e,r)*T.get(c,i,l,t)}}v.set(u,r,n,o,i)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Ee={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{inputShape:u,strides:c,pad:l,dataFormat:d,dimRoundingMode:p}=s;(0,a.H)([o,i],"conv2dBackpropInput");const h=r.util.computeStrides(i.shape),f=r.util.computeStrides(o.shape);let m=r.backend_util.convertConv2DDataFormat(d);const g=r.backend_util.computeConv2DInfo(u,i.shape,c,1,l,p,!1,m),y=new r.TensorBuffer(g.inShape,"float32"),b=y.values,x=n.data.get(o.dataId).values,v=n.data.get(i.dataId).values,[k,w,I]=h,{batchSize:N,filterHeight:S,filterWidth:T,inChannels:_,inHeight:E,inWidth:C,outChannels:A,outHeight:$,outWidth:R,strideHeight:F,strideWidth:O}=g;m=g.dataFormat;const D=S-1-g.padInfo.top,M=T-1-g.padInfo.left,B="channelsLast"===m,P=y.strides[0],L=B?y.strides[1]:y.strides[2],V=B?y.strides[2]:1,W=B?1:y.strides[1],z=f[0],U=B?f[1]:f[2],G=B?f[2]:1,H=B?1:f[1];for(let r=0;r<N;++r)for(let e=0;e<_;++e)for(let t=0;t<E;++t){const n=t-D,a=Math.max(0,Math.ceil(n/F)),s=Math.min($,(S+n)/F);for(let o=0;o<C;++o){const i=o-M,u=Math.max(0,Math.ceil(i/O)),c=Math.min(R,(T+i)/O);let l=0;for(let t=a;t<s;++t){const a=t*F-n;for(let n=u;n<c;++n){const s=z*r+U*t+G*n,o=k*(S-1-a)+w*(T-1-(n*O-i))+I*e;for(let e=0;e<A;++e){l+=x[s+H*e]*v[o+e]}}}b[P*r+L*t+V*o+W*e]=l}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Ce={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:u,pad:c,dilations:l}=s;(0,a.H)([o,i],"conv3d");const d=r.backend_util.computeConv3DInfo(o.shape,i.shape,u,l,c),{filterDepth:p,filterHeight:h,filterWidth:f,dilationDepth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.front,v=b.left,k=b.top,w=new r.TensorBuffer(d.outShape,o.dtype),I=n.data.get(o.dataId).values,N=n.data.get(i.dataId).values,S=w.values,T=r.util.computeStrides(o.shape),_=r.util.computeStrides(i.shape);for(let r=0;r<d.batchSize;++r){const e=r*T[0],t=r*w.strides[0];for(let n=0;n<d.outDepth;++n){const r=t+n*w.strides[1],a=n*d.strideDepth-x;for(let t=0;t<p;++t){const n=a+t*m;if(n<0||n>=d.inDepth)continue;const s=t*_[0],o=e+n*T[1];for(let e=0;e<d.outHeight;++e){const t=r+e*w.strides[2],n=e*d.strideHeight-k;for(let e=0;e<h;++e){const r=n+e*g;if(r<0||r>=d.inHeight)continue;const a=s+e*_[1],i=o+r*T[2];for(let e=0;e<d.outWidth;++e){const n=t+e*d.outChannels,r=e*d.strideWidth-v;for(let e=0;e<f;++e){const t=r+e*y;if(t<0||t>=d.inWidth)continue;const s=a+e*_[2],o=i+t*d.inChannels;let u=s;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<d.outChannels;++e)S[n+e]+=t*N[u+e];u+=d.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Ae={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:u,pad:c,filterShape:l}=s;(0,a.H)([o,i],"conv3dBackpropFilterV2");const d=r.util.computeStrides(o.shape),p=r.util.computeStrides(i.shape),h=r.backend_util.computeConv3DInfo(o.shape,l,u,1,c),f=h.strideDepth,m=h.strideHeight,g=h.strideWidth,y=h.filterDepth,b=h.filterHeight,x=h.filterWidth,v=new r.TensorBuffer(h.filterShape,"float32"),k=v.values,[w,I,N,S]=v.strides,T=n.data.get(i.dataId).values,[_,E,C,A]=p,$=n.data.get(o.dataId).values,[R,F,O,D]=d,M=h.padInfo.front,B=h.padInfo.left,P=h.padInfo.top;for(let r=0;r<y;++r){const e=Math.max(0,Math.ceil((M-r)/f)),t=Math.min(h.outDepth,(h.inDepth+M-r)/f),n=r*w;for(let a=0;a<b;++a){const s=Math.max(0,Math.ceil((P-a)/m)),o=Math.min(h.outHeight,(h.inHeight+P-a)/m),i=a*I+n;for(let n=0;n<x;++n){const u=Math.max(0,Math.ceil((B-n)/g)),c=Math.min(h.outWidth,(h.inWidth+B-n)/g),l=n*N+i;for(let i=0;i<h.inChannels;++i){const d=i*S+l;for(let l=0;l<h.outChannels;++l){let p=0;for(let d=0;d<h.batchSize;++d){const h=d*R,y=d*_;for(let d=e;d<t;++d){const e=(r+d*f-M)*F+h,t=d*E+y;for(let r=s;r<o;++r){const s=(a+r*m-P)*O+e,o=r*C+t;for(let e=u;e<c;++e){const t=e*A+o;p+=$[(n+e*g-B)*D+s+i]*T[t+l]}}}}k[d+l]=p}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const $e={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{pad:u,strides:c,inputShape:l}=s;(0,a.H)([o],"conv3dBackpropInputV2");const d=r.util.computeStrides(o.shape),p=r.util.computeStrides(i.shape),h=r.backend_util.computeConv3DInfo(l,i.shape,c,1,u),f=new r.TensorBuffer(h.inShape,"float32"),m=f.values,[g,y,b,x]=f.strides,v=n.data.get(o.dataId).values,[k,w,I,N]=d,S=n.data.get(i.dataId).values,[T,_,E,C]=p,{batchSize:A,filterDepth:$,filterHeight:R,filterWidth:F,inChannels:O,inDepth:D,inHeight:M,inWidth:B,outChannels:P,outDepth:L,outHeight:V,outWidth:W,strideDepth:z,strideHeight:U,strideWidth:G}=h,H=$-1-h.padInfo.front,j=R-1-h.padInfo.top,q=F-1-h.padInfo.left;for(let r=0;r<A;++r)for(let e=0;e<O;++e)for(let t=0;t<D;++t){const n=t-H,a=Math.max(0,Math.ceil(n/z)),s=Math.min(L,($+n)/z);for(let o=0;o<M;++o){const i=o-j,u=Math.max(0,Math.ceil(i/U)),c=Math.min(V,(R+i)/U);for(let l=0;l<B;++l){const d=l-q,p=Math.max(0,Math.ceil(d/G)),h=Math.min(W,(F+d)/G);let f=0;for(let t=a;t<s;++t){const a=t*z-n;for(let n=u;n<c;++n){const s=n*U-i;for(let o=p;o<h;++o){const i=k*r+w*t+I*n+N*o,u=T*($-1-a)+_*(R-1-s)+E*(F-1-(o*G-d))+C*e;for(let e=0;e<P;++e){f+=v[i+e]*S[u+e]}}}}m[g*r+y*t+b*o+x*l+e]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Re=(0,c.A)(r.Cos,(e=>Math.cos(e))),Fe={kernelName:r.Cos,backendName:"cpu",kernelFunc:Re},Oe=(0,c.A)(r.Cosh,(e=>Math.cosh(e))),De={kernelName:r.Cosh,backendName:"cpu",kernelFunc:Oe};const Me={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:o,boxInd:i}=t,{cropSize:u,method:c,extrapolationValue:l}=a,[d,p,h,f]=s.shape,m=o.shape[0],[g,y]=u,b=(0,r.buffer)([m,g,y,f],"float32"),x=n.data.get(o.dataId).values,v=n.data.get(i.dataId).values,k=n.data.get(s.dataId).values,w=r.util.computeStrides(s.shape),I=r.util.computeStrides(b.shape);for(let r=0;r<m;r++){const e=4*r,t=x[e],n=x[e+1],a=x[e+2],s=x[e+3],o=v[r];if(o>=d)continue;const i=g>1?(a-t)*(p-1)/(g-1):0,u=y>1?(s-n)*(h-1)/(y-1):0;for(let d=0;d<g;d++){const e=g>1?t*(p-1)+d*i:.5*(t+a)*(p-1);if(e<0||e>p-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++){const n=e+t*I[2]+d*I[1]+r*I[0];b.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),i=e-t;for(let e=0;e<y;e++){const c=y>1?n*(h-1)+e*u:.5*(n+s)*(h-1);if(c<0||c>h-1){for(let t=0;t<f;t++){const n=t+e*I[2]+d*I[1]+r*I[0];b.values[n]=l}continue}const p=Math.floor(c),m=Math.ceil(c),g=c-p;for(let n=0;n<f;n++){let s=n+p*w[2]+t*w[1]+o*w[0];const u=k[s];s=n+m*w[2]+t*w[1]+o*w[0];const c=k[s];s=n+p*w[2]+a*w[1]+o*w[0];const l=k[s];s=n+m*w[2]+a*w[1]+o*w[0];const h=u+(c-u)*g,f=l+(k[s]-l)*g;s=n+e*I[2]+d*I[1]+r*I[0],b.values[s]=h+(f-h)*i}}}else for(let t=0;t<y;++t){const a=y>1?n*(h-1)+t*u:.5*(n+s)*(h-1);if(a<0||a>h-1){for(let e=0;e<f;e++){const n=e+t*I[2]+d*I[1]+r*I[0];b.values[n]=l}continue}const i=Math.round(a),c=Math.round(e);for(let e=0;e<f;e++){const n=e+i*w[2]+c*w[1]+o*w[0],a=e+t*I[2]+d*I[1]+r*I[0];b.values[a]=k[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Be={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,exclusive:u,reverse:c}=s;(0,a.H)(o,"cumsum");const l=r.backend_util.getAxesPermutation([i],o.shape.length);let d=o;null!=l&&(d=(0,B.p)({inputs:{x:o},backend:n,attrs:{perm:l}}));const p=r.backend_util.getInnerMostAxes(1,o.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const h=(0,r.upcastType)(d.dtype,"int32"),f=r.util.makeZerosTypedArray(r.util.sizeFromShape(d.shape),h),m=n.data.get(d.dataId).values,g=d.shape[d.shape.length-1],y=c?(e,t)=>e+g-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=g)for(let e=0;e<g;e++){const t=y(r,e);if(0===e)f[t]=u?0:m[t];else{const n=y(r,e-1);f[t]=u?m[n]+f[n]:m[t]+f[n]}}const b=n.makeTensorInfo(d.shape,h,f);if(null!=l){const e=r.backend_util.getUndoAxesPermutation(l),t=(0,B.p)({inputs:{x:b},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(d),t}return b}};const Pe={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=(0,le.W)(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=(0,le.i)(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};const Le={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:o,dataFormat:i}=a;r.util.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const u=s.shape[0],c=s.shape[1],l=s.shape[2],d=s.shape[3],p=c*o,h=l*o,f=d/(o*o),m=n.data.get(s.dataId).values,g=new Float32Array(u*p*h*f);let y=0;for(let r=0;r<u;++r)for(let e=0;e<p;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<h;++e){const a=Math.floor(e/o),s=(n*o+e%o)*f;for(let e=0;e<f;++e){const n=e+s+d*(a+l*(t+c*r));g[y++]=m[n]}}}return n.makeTensorInfo([u,p,h,f],s.dtype,g)}};function Ve(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d}=s;(0,a.H)([o,i],"depthwiseConv2DNative");const p=r.util.computeStrides(o.shape),h=r.util.computeStrides(i.shape);let f=l;null==f&&(f=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`));const m=r.backend_util.computeConv2DInfo(o.shape,i.shape,u,f,c,d,!0),{filterHeight:g,filterWidth:y,dilationHeight:b,dilationWidth:x,padInfo:v}=m,k=v.left,w=v.top,I=m.outChannels/m.inChannels,N=new r.TensorBuffer(m.outShape,o.dtype),S=n.data.get(o.dataId).values,T=n.data.get(i.dataId).values,_=N.values;for(let r=0;r<m.batchSize;++r){const e=r*p[0],t=r*N.strides[0];for(let n=0;n<m.outHeight;++n){const r=t+n*N.strides[1],a=n*m.strideHeight-w;for(let t=0;t<g;++t){const n=a+t*b;if(n<0||n>=m.inHeight)continue;const s=t*h[0],o=e+n*p[1];for(let e=0;e<m.outWidth;++e){const t=r+e*N.strides[2],n=e*m.strideWidth-k;for(let e=0;e<y;++e){const r=n+e*x;if(r<0||r>=m.inWidth)continue;const a=s+e*h[1],i=o+r*m.inChannels;let u=t,c=a;for(let e=0;e<m.inChannels;++e){const t=S[i+e];for(let e=0;e<I;++e)_[u+e]+=t*T[c+e];u+=I,c+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const We={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Ve};const ze={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,filterShape:p}=s;(0,a.H)([o,i],"depthwiseConv2dNativeBackpropFilter");const h=r.backend_util.computeConv2DInfo(o.shape,p,u,c,l,d,!0),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=h,b=new r.TensorBuffer(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,k=h.outChannels/h.inChannels,w=n.data.get(o.dataId).values,I=new r.TensorBuffer(o.shape,o.dtype,w),N=n.data.get(i.dataId).values,S=new r.TensorBuffer(i.shape,i.dtype,N);for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((v-r)/f)),t=Math.min(h.outHeight,(h.inHeight+v-r)/f);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((x-n)/m)),s=Math.min(h.outWidth,(h.inWidth+x-n)/m);for(let o=0;o<h.outChannels;++o){const i=Math.trunc(o/k),u=o%k;let c=0;for(let l=0;l<h.batchSize;++l)for(let u=e;u<t;++u){const e=r+u*f-v;for(let t=a;t<s;++t){const r=n+t*m-x;c+=I.get(l,e,r,i)*S.get(l,u,t,o)}}b.set(c,r,n,i,u)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Ue={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,inputShape:p}=s;(0,a.H)([o,i],"depthwiseConv2DNativeBackpropInput");const h=r.util.computeStrides(o.shape),f=r.util.computeStrides(i.shape),m=r.backend_util.computeConv2DInfo(p,i.shape,u,c,l,d,!0),g=new r.TensorBuffer(m.inShape,"float32"),y=g.values,[b,x,v]=g.strides,k=n.data.get(o.dataId).values,[w,I,N]=h,S=n.data.get(i.dataId).values,[T,_,E]=f,{batchSize:C,filterHeight:A,filterWidth:$,inChannels:R,inHeight:F,inWidth:O,outChannels:D,outHeight:M,outWidth:B,strideHeight:P,strideWidth:L}=m,V=A-1-m.padInfo.top,W=$-1-m.padInfo.left,z=D/R;for(let r=0;r<C;++r)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-V,a=Math.max(0,Math.ceil(n/P)),s=Math.min(M,(A+n)/P);for(let o=0;o<O;++o){const i=o-W,u=Math.max(0,Math.ceil(i/L)),c=Math.min(B,($+i)/L);let l=0;for(let t=a;t<s;++t){const a=t*P-n;for(let n=u;n<c;++n){const s=w*r+I*t+N*n,o=T*(A-1-a)+_*($-1-(n*L-i))+E*e;for(let t=0;t<z;++t){l+=k[s+(e*z+t)]*S[o+t]}}}y[b*r+x*t+v*o+e]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Ge={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=r.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,i=(0,r.buffer)([s,s],a.dtype),u=i.values;for(let r=0;r<o.length;r++)u[r*s+r]=o[r];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,i.dtype,i.values)}},He={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:o,pad:i,dilations:u}=n,c=t,l=c.data.get(a.dataId).values,d=a.shape.length,p=c.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:k,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:S,dilationWidth:T,outShape:_}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,o,i,"NHWC",u),E=r.util.sizeFromShape(_),C=_.length,A=r.util.getArrayFromDType(a.dtype,E);for(let $=0;$<f;++$)for(let e=0;e<b;++e){const t=e*k-v.top;for(let n=0;n<x;++n){const o=n*w-v.left;for(let i=0;i<y;++i){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*S;if(n>=0&&n<m)for(let t=0;t<N;++t){const c=o+t*T;if(c>=0&&c<g){const o=r.util.locToIndex([$,n,c,i],d,r.util.computeStrides(a.shape)),f=r.util.locToIndex([e,t,i],h,r.util.computeStrides(s.shape)),m=l[o]+p[f];m>u&&(u=m)}}}A[r.util.locToIndex([$,e,n,i],C,r.util.computeStrides(_))]=u}}}return{dataId:c.write(r.util.toTypedArray(A,a.dtype),_,a.dtype),shape:_,dtype:a.dtype}}},je={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:o}=e,{strides:i,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),p=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:k,filterHeight:w,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,i,u,"NHWC",c);r.util.assert(o.rank===T.length,(()=>`Error in ${r.Dilation2DBackpropFilter}, dy must have the same rank as output ${T.length}, but got ${o.rank}`));const _=r.util.toNestedArray(T,l.data.get(o.dataId).values),E=r.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<h;++r)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*k-x.left;for(let s=0;s<g;++s){let o=Number.MIN_SAFE_INTEGER,i=0,u=0;for(let e=0;e<w;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<I;++t){const c=a+t*S;if(c>=0&&c<m){const a=d[r][n][c][s]+p[e][t][s];a>o&&(o=a,i=e,u=t)}}}E[i][u][s]+=_[r][e][n][s]}}}return{dataId:l.write(r.util.toTypedArray(E,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},qe={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:o}=e,{strides:i,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),p=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:k,filterHeight:w,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,i,u,"NHWC",c);r.util.assert(o.rank===T.length,(()=>`Error in ${r.Dilation2DBackpropInput}, dy must have the same rank as output ${T.length}, but got ${o.rank}`));const _=r.util.toNestedArray(T,l.data.get(o.dataId).values),E=r.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<h;++r)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*k-x.left;for(let s=0;s<g;++s){let o=Number.MIN_SAFE_INTEGER,i=t<0?0:t,u=a<0?0:a;for(let e=0;e<w;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<I;++t){const c=a+t*S;if(c>=0&&c<m){const a=d[r][n][c][s]+p[e][t][s];a>o&&(o=a,i=n,u=c)}}}E[r][i][u][s]+=_[r][e][n][s]}}}return{dataId:l.write(r.util.toTypedArray(E,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var Xe=n(1917),Ke=n(24391);function Ye(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:u}=s;let c;(0,a.H)(o,"sum"),c="bool"===o.dtype?(0,he.p)({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):(0,p.y)({inputs:{x:o},backend:n});const l=c.shape.length,d=r.util.parseAxisParam(i,c.shape),h=r.backend_util.getAxesPermutation(d,l);let f=d,m=c;null!=h&&(m=(0,B.p)({inputs:{x:c},backend:n,attrs:{perm:h}}),f=r.backend_util.getInnerMostAxes(f.length,l)),r.backend_util.assertAxesAreInnerMostDims("sum",f,m.shape.length);const[g,y]=r.backend_util.computeOutAndReduceShapes(m.shape,f),b=r.backend_util.upcastType(m.dtype,"int32");let x=(0,Ke.l)(n,g,b);const v=r.util.sizeFromShape(y),k=n.data.get(x.dataId).values,w=n.data.get(m.dataId).values;for(let r=0;r<k.length;++r){const e=r*v;let t=0;for(let n=0;n<v;++n)t+=w[e+n];k[r]=t}if(u){const e=x;x=T({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(x.shape,d)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=h&&n.disposeIntermediateTensorInfo(m),x}const Qe={kernelName:r.Sum,backendName:"cpu",kernelFunc:Ye};const Ze={kernelName:r.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,o=t,{allDims:i,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(s,o.length);r.backend_util.checkEinsumDimSizes(i.length,c,o);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),p=d.length;let h=null,f=i.length;const m=[];for(let g=0;g<p;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[e]);let s;r.backend_util.isIdentityPermutation(t)?s=o[e]:(s=(0,B.p)({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);r.util.arraysEqual(s.shape,i)||(s=T({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===h?h=s:(h=(0,Xe.Jp)({inputs:{a:s,b:h},backend:n}),m.push(h))}g<p-1&&(l[g]>=0&&(h=Ye({inputs:{x:h},backend:n,attrs:{axis:l[g]-(i.length-f),keepDims:!1}}),m.push(h)),f--)}for(const r of m)r!==h&&n.disposeIntermediateTensorInfo(r);return h}};const Je={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:o}=t;(0,a.H)([s,o],"eluGrad");const i=new Float32Array(r.util.sizeFromShape(o.shape)),u=n.data.get(o.dataId).values,c=n.data.get(s.dataId).values;for(let r=0;r<u.length;++r){const e=u[r];i[r]=e>=1?c[r]:c[r]*(e+1)}return n.makeTensorInfo(o.shape,"float32",i)}};var et=n(7679);const tt=r.backend_util.ERF_P,nt=r.backend_util.ERF_A1,rt=r.backend_util.ERF_A2,at=r.backend_util.ERF_A3,st=r.backend_util.ERF_A4,ot=r.backend_util.ERF_A5,it=(0,c.A)(r.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+tt*n);return t*(1-((((ot*r+st)*r+at)*r+rt)*r+nt)*r*Math.exp(-n*n))})),ut={kernelName:r.Erf,backendName:"cpu",kernelFunc:it};var ct=n(31211);function lt(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:o}=a,i=s.shape.length,u=s.shape.slice();let c=o;return o<0&&(r.util.assert(-(i+1)<=o,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),c=i+o+1),u.splice(c,0,1),T({inputs:{x:s},backend:n,attrs:{shape:u}})}const dt={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:lt};var pt=n(30969);const ht=(0,m.b)(((e,t)=>e/t)),ft=(0,X.j)(r.RealDiv,ht),mt={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:ft};var gt=n(71649);function yt(e,t,n){const a=e.shape,s=a[0],o=a[1],i=n.data.get(e.dataId),u=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,l=[s,o],d=r.util.sizeFromShape(l),p=r.util.getTypedArrayFromDType("float32",d),h=r.util.getTypedArrayFromDType("float32",d);for(let y=0;y<s;y++){const e=(0,ue.tP)({inputs:{x:u},backend:n,attrs:{begin:[y,0],size:[1,o]}}),a=(0,ue.tP)({inputs:{x:c},backend:n,attrs:{begin:[y,0],size:[1,o]}}),s=(0,ye.P)({inputs:{real:e,imag:a},backend:n}),{real:i,imag:l}=bt(s,t,n),d=r.backend_util.mergeRealAndImagArrays(i,l);for(let t=0;t<o;t++){const e=r.backend_util.getComplexWithIndex(d,t);p[y*o+t]=e.real,h[y*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",h),g=(0,ye.P)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function bt(e,t,n){const a=r.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((u=a)&u-1)){const s=xt(o,i,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",s.real),t=n.makeTensorInfo(u,"float32",s.imag),o=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),i=(0,p.y)({inputs:{x:o},backend:n}),c=mt.kernelFunc({inputs:{a:e,b:o},backend:n}),l=mt.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:d,imag:h}}return s}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,i=0;for(let a=0;a<t;a++){const u=r.backend_util.exponent(s*a,t,n),c=r.backend_util.getComplexWithIndex(e,a);o+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real}n&&(o/=t,i/=t),r.backend_util.assignToTypedArray(a,o,i,s)}return a}(r.backend_util.mergeRealAndImagArrays(o,i),a,t);return r.backend_util.splitRealAndImagArrays(e)}var u}function xt(e,t,n,a,s){if(1===n)return{real:e,imag:t};const o=r.backend_util.mergeRealAndImagArrays(e,t),i=n/2,u=r.backend_util.complexWithEvenIndex(o),c=u.real,l=u.imag,d=[c.length],p=s.makeTensorInfo(d,"float32",c),h=s.makeTensorInfo(d,"float32",l),f=(0,ye.P)({inputs:{real:p,imag:h},backend:s}),m=r.backend_util.complexWithOddIndex(o),g=m.real,y=m.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),v=s.makeTensorInfo(b,"float32",y),k=(0,ye.P)({inputs:{real:x,imag:v},backend:s}),w=xt(c,l,i,a,s),I=w.real,N=w.imag,T=[I.length],_=s.makeTensorInfo(T,"float32",I),E=s.makeTensorInfo(T,"float32",N),C=(0,ye.P)({inputs:{real:_,imag:E},backend:s}),A=xt(g,y,i,a,s),$=A.real,R=A.imag,F=[$.length],O=s.makeTensorInfo(F,"float32",$),D=s.makeTensorInfo(F,"float32",R),M=(0,ye.P)({inputs:{real:O,imag:D},backend:s}),B=r.backend_util.exponents(n,a),P=[B.real.length],L=s.makeTensorInfo(P,"float32",B.real),V=s.makeTensorInfo(P,"float32",B.imag),W=(0,ye.P)({inputs:{real:L,imag:V},backend:s}),z=(0,Xe.Jp)({inputs:{a:W,b:M},backend:s}),U=(0,S.IH)({inputs:{a:C,b:z},backend:s}),G=(0,gt.lu)({inputs:{a:C,b:z},backend:s}),H=(0,we.k)({inputs:{input:U},backend:s}),j=(0,we.k)({inputs:{input:G},backend:s}),q=ve({inputs:{input:U},backend:s}),X=ve({inputs:{input:G},backend:s}),K=Ie({inputs:[H,j],backend:s,attrs:{axis:0}}),Y=Ie({inputs:[q,X],backend:s,attrs:{axis:0}}),Q=s.data.get(K.dataId).values,Z=s.data.get(Y.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(Y),{real:Q,imag:Z}}const vt={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=T({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),u=yt(i,!1,n),c=T({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};function kt(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:o}=n,i=o||r.util.inferDtype(s),u=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}(u,s),t.makeTensorInfo(a,i,u)}const wt={kernelName:r.Fill,backendName:"cpu",kernelFunc:kt};const It={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,s=n,o=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[i,u,c,l]=a.shape,d=s.data.get(a.dataId).values;for(let r=0;r<i;r++){const e=r*c*u*l;for(let t=0;t<u;t++){const n=t*(c*l);for(let t=0;t<c;t++){const r=t*l;for(let a=0;a<l;a++){const s=Math.round(c-t-1),i=e+n+r+a;let u=d[i];if(s>=0&&s<c){u=d[e+n+s*l+a]}o[i]=u}}}}return{dataId:s.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var Nt=n(76574);const St=(0,m.b)(((e,t)=>Math.floor(e/t))),Tt=(0,X.j)(r.FloorDiv,St,null,"int32"),_t={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:Tt};const Et={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Se({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=(0,S.IH)({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=N(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};const Ct={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Ve({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=(0,S.IH)({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=N(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};var At=n(31820);const $t={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,o=r.util.sizeFromShape(a.shape),i=s.shape,u=i[i.length-1],[c,l,d,p]=r.backend_util.prepareAndValidate(a,s);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const h=n.data.get(s.dataId).values,f=n.bufferSync(a),m=(0,At.m)(h,f,a.dtype,l,u,d,p,a.shape,o);return n.makeTensorInfo(c,a.dtype,m.values)}};var Rt=n(54468);const Ft={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,indices:i}=t,{axis:u,batchDims:c}=s;(0,a.H)([o,i],"gatherV2");const l=r.util.parseAxisParam(u,o.shape)[0],d=n.data.get(i.dataId).values,p=o.shape[l];for(let a=0;a<d.length;++a){const e=d[a];r.util.assert(e<=p-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${p-1}]`))}let h=c;null==c&&(h=0);const f=r.util.sizeFromShape(i.shape),m=r.backend_util.segment_util.collectGatherOpShapeInfo(o,i,l,h),g=T({inputs:{x:o},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),y=T({inputs:{x:i},backend:n,attrs:{shape:[m.batchSize,f/m.batchSize]}}),b=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],x=n.bufferSync(y),v=n.bufferSync(g),k=(0,Rt.i)(v,x,b);return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),n.makeTensorInfo(m.outputShape,k.dtype,k.values)}};var Ot=n(36272),Dt=n(26259);const Mt={kernelName:r.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=T({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),u=yt(i,!0,n),c=T({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}},Bt=(0,c.A)(r.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),Pt={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:Bt},Lt=(0,c.A)(r.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),Vt={kernelName:r.IsInf,backendName:"cpu",kernelFunc:Lt},Wt=(0,c.A)(r.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),zt={kernelName:r.IsNan,backendName:"cpu",kernelFunc:Wt};var Ut=n(88405),Gt=n(40635),Ht=n(61325);const jt={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=(0,Ht.b)(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}};var qt=n(55223);const Xt=(0,c.A)(r.Log1p,(e=>Math.log1p(e))),Kt={kernelName:r.Log1p,backendName:"cpu",kernelFunc:Xt},Yt=(0,m.b)(((e,t)=>e&&t)),Qt=(0,X.j)(r.LogicalAnd,Yt,null,"bool"),Zt={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:Qt},Jt=(0,c.A)(r.LogicalNot,(e=>e?0:1),"bool"),en={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:Jt},tn=(0,m.b)(((e,t)=>e||t)),nn=(0,X.j)(r.LogicalOr,tn,null,"bool"),rn={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:nn};const an={kernelName:r.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=s;(0,a.H)(o,"LRN");const d=o.shape[3],p=d-1,h=n.data.get(o.dataId).values,f=r.util.sizeFromShape(o.shape),m=new Float32Array(f);function g(e){const t=e%d;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,p);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let r=0;r<f;r++){const e=g(r),t=h[r]*Math.pow(u+c*e,-l);m[r]=t}return n.makeTensorInfo(o.shape,o.dtype,m)}};const sn={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,y:i,dy:u}=t,{depthRadius:c,bias:l,alpha:d,beta:p}=s;(0,a.H)(u,"LRNGrad");const h=r.util.sizeFromShape(u.shape),f=u.shape[3],m=n.data.get(u.dataId).values,g=n.data.get(o.dataId).values,y=n.data.get(i.dataId).values,b=new Float32Array(h),x=h;for(let r=0;r<x;r++){const e=r%f,t=r-e+Math.max(0,e-c),n=r-e+Math.min(f,e+c+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(g[r],2);a=d*a+l;for(let s=t;s<n;s++){let e=-2*d*p*g[s]*y[r]/a;r===s&&(e+=Math.pow(a,-p)),e*=m[r],b[s]+=e}}return n.makeTensorInfo(u.shape,o.dtype,b)}};var on=n(55126),un=n(77107);function cn(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{reductionIndices:i,keepDims:u}=s,c=n;let l=o.shape;const d=l.length,p=r.util.parseAxisParam(i,l);let h=p;const f=r.backend_util.getAxesPermutation(h,d);let m=c.data.get(o.dataId).values;if(null!=f){const e=new Array(d);for(let t=0;t<e.length;t++)e[t]=l[f[t]];m=(0,un.H)(m,l,o.dtype,f,e),h=r.backend_util.getInnerMostAxes(h.length,d),l=e}(0,a.H)(o,"max"),r.backend_util.assertAxesAreInnerMostDims("max",h,d);const[g,y]=r.backend_util.computeOutAndReduceShapes(l,h),b=r.util.sizeFromShape(y),x=(0,on.B)(m,b,g,o.dtype),v=c.write(x,g,o.dtype);let k=g;if(u){k=r.backend_util.expandShapeToKeepDim(g,p)}return{dataId:v,shape:k,dtype:o.dtype}}const ln={kernelName:r.Max,backendName:"cpu",kernelFunc:cn};var dn=n(71717);const pn={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t;(0,a.H)(o,"maxPool");const{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const d=r.backend_util.computePool2DInfo(o.shape,i,u,1,c,l);let h;if(1===d.filterWidth&&1===d.filterHeight&&r.util.arraysEqual(d.inShape,d.outShape))h=(0,p.y)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.util.computeStrides(o.shape),a=ee(e,o.shape,o.dtype,t,d,"max");h=n.makeTensorInfo(d.outShape,o.dtype,a.values)}return h}};const hn={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=s;(0,a.H)(o,"maxPool3d");const p=r.backend_util.computePool3DInfo(o.shape,i,u,1,c,l,d),h=ne(n.data.get(o.dataId).values,o.shape,o.dtype,r.util.computeStrides(o.shape),p,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const fn={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s;(0,a.H)([o,i],"maxPool3DGrad");const p=r.backend_util.computePool3DInfo(i.shape,u,c,1,l,d),h=function(e,t){const n=(0,r.buffer)(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-h;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let a=0;a<t.outHeight;++a){const l=a*s-f;let h=l;for(;h<0;)h+=u;const k=Math.min(t.inHeight,d+l);for(let s=0;s<t.outWidth;++s){const f=s*o-m;let w=f;for(;w<0;)w+=c;const I=Math.min(t.inWidth,p+f);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let a=h;a<k;a+=u){const s=a-l;for(let o=w;o<I;o+=c){const i=o-f,u=e.get(r,t,a,o,g);u>=N&&(N=u,S=n*d*p+s*d+i)}}}n.set(S,r,y,a,s,g)}}}return n}(n.bufferSync(i),p),f=p.strideDepth,m=p.strideHeight,g=p.strideWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterDepth,k=p.effectiveFilterHeight,w=p.effectiveFilterWidth,I=v-1-p.padInfo.front,N=w-1-p.padInfo.left,S=k-1-p.padInfo.top,T=(0,r.buffer)(i.shape,"float32"),_=n.bufferSync(o);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inDepth;++t)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){const s=t-I,o=n-S,i=a-N;let u=0;for(let t=0;t<v;t+=y){const n=(s+t)/f;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let a=0;a<k;a+=b){const s=(o+a)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let o=0;o<w;o+=x){const c=(i+o)/g;if(c<0||c>=p.outWidth||Math.floor(c)!==c)continue;const l=v*k*w-1-h.get(r,n,s,c,e)===t*k*w+a*w+o?1:0;if(0===l)continue;u+=_.get(r,n,s,c,e)*l}}}T.set(u,r,t,n,a,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const mn={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i,output:u}=t,c=i;(0,a.H)([i,u],"maxPoolGrad");const{filterSize:l,strides:d,pad:p,dimRoundingMode:h}=s,f=r.backend_util.computePool2DInfo(c.shape,l,d,1,p,h),m=n.data.get(c.dataId).values,g=(0,r.buffer)(f.outShape,c.dtype,te(m,c.shape,c.dtype,f).values),y=f.strideHeight,b=f.strideWidth,x=f.dilationHeight,v=f.dilationWidth,k=f.effectiveFilterHeight,w=f.effectiveFilterWidth,I=w-1-f.padInfo.left,N=k-1-f.padInfo.top,S=(0,r.buffer)(c.shape,"float32"),T=n.data.get(o.dataId).values,_=(0,r.buffer)(o.shape,"float32",T);for(let r=0;r<f.batchSize;++r)for(let e=0;e<f.inChannels;++e)for(let t=0;t<f.inHeight;++t)for(let n=0;n<f.inWidth;++n){const a=t-N,s=n-I;let o=0;for(let t=0;t<k;t+=x){const n=(a+t)/y;if(!(n<0||n>=f.outHeight||Math.floor(n)!==n))for(let a=0;a<w;a+=v){const i=(s+a)/b;if(i<0||i>=f.outWidth||Math.floor(i)!==i)continue;const u=k*w-1-g.get(r,n,i,e)===t*w+a?1:0;if(0===u)continue;o+=_.get(r,n,i,e)*u}}S.set(o,r,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const gn={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:o,strides:i,pad:u,includeBatchInIndex:c}=t,l=n;(0,a.H)(s,"MaxPoolWithArgmax");const d=l.data.get(s.dataId).values,p=r.backend_util.computePool2DInfo(s.shape,o,i,[1,1],u),[h,f]=function(e,t,n,a,s){const o=ee(e,0,n,r.util.computeStrides(t),s,"max"),i=te(e,t,n,s,!0,a);return[o.values,i.values]}(d,s.shape,s.dtype,c,p),m=l.write(h,p.outShape,s.dtype),g=l.write(f,p.outShape,s.dtype);return[{dataId:m,shape:p.outShape,dtype:s.dtype},{dataId:g,shape:p.outShape,dtype:"int32"}]}};const yn={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,u=r.util.parseAxisParam(o,s.shape),c=r.backend_util.computeOutAndReduceShapes(s.shape,u)[1],l=r.util.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);const h=(0,he.p)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=ft({inputs:{a:h,b:p},backend:n});d.push(f);const m=Ye({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const bn={kernelName:r.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:u}=s;(0,a.H)(o,"min");const c=r.util.parseAxisParam(i,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=(0,B.p)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),g=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),y=n.data.get(p.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];(Number.isNaN(r)||r<t)&&(t=r)}g[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const b=n.makeTensorInfo(h,p.dtype,g);if(u){const e=T({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(b),e}return b}};var xn=n(612);const vn={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{paddings:i,mode:u}=s;(0,a.H)(o,"mirrorPad");const c=i.map(((e,t)=>e[0]+o.shape[t]+e[1])),l=i.map((e=>e[0])),d=i.map(((e,t)=>e[0]+o.shape[t])),p="reflect"===u?0:1,h=n.data.get(o.dataId).values,f=o.shape.length,m=r.util.computeStrides(o.shape),g=r.util.sizeFromShape(c),y=c.length,b=r.util.computeStrides(c),x=r.util.getTypedArrayFromDType(o.dtype,g);for(let a=0;a<g;a++){let e=r.util.indexToLoc(a,y,b);for(let n=0;n<y;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-p:e[n]>=d[n]&&(e[n]=2*(d[n]-1)-e[n]+p);e=e.map(((e,t)=>e-l[t]));const t=r.util.locToIndex(e,f,m);x[a]=h[t]}return{dataId:n.write(x,c,o.dtype),shape:c,dtype:o.dtype}}},kn=(0,m.b)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),wn=(0,X.j)(r.Mod,kn),In={kernelName:r.Mod,backendName:"cpu",kernelFunc:wn};var Nn=n(36377);function Sn(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:o}=a,i=s.shape.length;let u=o;if(-1===u&&(u=i-1),u!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${u}`);const c=r.util.parseAxisParam([u],s.shape),l=cn({inputs:{x:s},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(l.shape,c),p=T({inputs:{x:l},backend:n,attrs:{shape:d}}),h=(0,gt.lu)({inputs:{a:s,b:p},backend:n}),f=(0,ct.Qq)({inputs:{x:h},backend:n}),m=Ye({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),g=T({inputs:{x:m},backend:n,attrs:{shape:d}}),y=ft({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Tn={kernelName:r.Softmax,backendName:"cpu",kernelFunc:Sn};const _n={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:o}=t,{numSamples:i,seed:u,normalized:c}=s;(0,a.H)(o,"multinomial");const l=c?o:Sn({inputs:{logits:o},backend:n,attrs:{dim:-1}}),d=l.shape[0],p=l.shape[1],h=n.data.get(l.dataId).values,f=[d,i],m=r.util.makeZerosTypedArray(r.util.sizeFromShape(f),"int32");for(let r=0;r<d;++r){const e=r*p,t=new Float32Array(p-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=Nn.alea(u.toString()),a=r*i;for(let r=0;r<i;++r){const e=n();m[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){m[a+r]=n;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(f,"int32",m)}};var En=n(70854);const Cn=r.kernel_impls.nonMaxSuppressionV3Impl;const An={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=r;(0,a.H)(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:p}=Cn(l,d,i,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},$n=r.kernel_impls.nonMaxSuppressionV4Impl;const Rn={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r;(0,a.H)(s,"NonMaxSuppressionPadded");const d=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,{selectedIndices:h,validOutputs:f}=$n(d,p,i,u,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Fn=r.kernel_impls.nonMaxSuppressionV5Impl;const On={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r;(0,a.H)(s,"NonMaxSuppressionWithScore");const d=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,h=i,f=u,m=c,g=l,{selectedIndices:y,selectedScores:b}=Fn(d,p,h,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};var Dn=n(98584);const Mn={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:o}=t,{depth:i,onValue:u,offValue:c}=s;(0,a.H)(o,"oneHot");const l=r.util.sizeFromShape(o.shape),d=new Float32Array(l*i);d.fill(c);const p=n.data.get(o.dataId).values;for(let r=0;r<l;++r)p[r]>=0&&p[r]<i&&(d[r*i+p[r]]=u);return n.makeTensorInfo([...o.shape,i],"int32",d)}};function Bn(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=(0,we.k)({inputs:{input:r},backend:n}),t=Bn({inputs:{x:e},backend:n}),a=ve({inputs:{input:r},backend:n}),s=Bn({inputs:{x:a},backend:n}),o=(0,ye.P)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return kt({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Pn={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:Bn};const Ln={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=(0,we.k)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=ve({inputs:{input:a},backend:r}),o=Bn({inputs:{x:s},backend:r}),i=(0,ye.P)({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return kt({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function Vn(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return lt({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=Ie({inputs:t.map((e=>{const t=lt({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const Wn={kernelName:r.Pack,backendName:"cpu",kernelFunc:Vn};const zn={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{paddings:i,constantValue:u}=s;(0,a.H)(o,"pad");const c=i.map(((e,t)=>e[0]+o.shape[t]+e[1])),l=i.map((e=>e[0])),d=n.data.get(o.dataId).values,p=r.util.sizeFromShape(o.shape),h=o.shape.length,f=r.util.computeStrides(o.shape),m=r.util.sizeFromShape(c),g=c.length,y=r.util.computeStrides(c),b=r.util.getTypedArrayFromDType(o.dtype,m);0!==u&&b.fill(u);for(let a=0;a<p;a++){const e=r.util.indexToLoc(a,h,f).map(((e,t)=>e+l[t]));b[r.util.locToIndex(e,g,y)]=d[a]}return{dataId:n.write(b,c,o.dtype),shape:c,dtype:o.dtype}}},Un=(0,m.b)(((e,t)=>Math.pow(e,t))),Gn=(0,X.j)(r.Pow,Un),Hn={kernelName:r.Pow,backendName:"cpu",kernelFunc:Gn};var jn=n(29560),qn=n(99230);const Xn={kernelName:r.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:o}=n,i=(0,qn.b)(r,a,o,s);return t.makeTensorInfo([i.length],s,i)}},Kn=(0,c.A)(r.Reciprocal,(e=>1/e)),Yn={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:Kn};const Qn={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o}=t,{alignCorners:i,halfPixelCenters:u,size:c}=s;(0,a.H)(o,"resizeBilinear");const l=r.util.computeStrides(o.shape),[d,p]=c,[h,f,m,g]=o.shape,y=n.data.get(o.dataId).values,b=new Float32Array(r.util.sizeFromShape([h,d,p,g])),x=[i&&d>1?f-1:f,i&&p>1?m-1:m],v=[i&&d>1?d-1:d,i&&p>1?p-1:p];let k=0;const w=x[0]/v[0],I=x[1]/v[1];for(let r=0;r<h;r++)for(let e=0;e<d;e++){let t;t=u?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(f-1,Math.ceil(t)),o=r*l[0]+n*l[1],i=r*l[0]+s*l[1];for(let e=0;e<p;e++){let t;t=u?I*(e+.5)-.5:I*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(m-1,Math.ceil(t)),c=o+n*l[2],d=i+n*l[2],p=o+s*l[2],h=i+s*l[2];for(let e=0;e<g;e++){const t=y[c+e],n=y[d+e],s=t+(y[p+e]-t)*r,o=s+(n+(y[h+e]-n)*r-s)*a;b[k++]=o}}}return n.makeTensorInfo([h,d,p,g],"float32",b)}};const Zn={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o,dy:i}=t,{alignCorners:u}=s;(0,a.H)([i,o],"resizeBilinearGrad");const c=r.util.computeStrides(o.shape),[l,d,p,h]=o.shape,[,f,m]=i.shape,g=new Float32Array(l*d*p*h),y=[u&&f>1?d-1:d,u&&m>1?p-1:p],b=[u&&f>1?f-1:f,u&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],k=n.data.get(i.dataId).values;let w=0;for(let r=0;r<l;r++){const e=r*c[0];for(let t=0;t<f;t++){const n=t*x,r=Math.floor(n),a=Math.min(Math.ceil(n),d-1),s=e+r*c[1],o=e+a*c[1],i=n-r,u=1-i;for(let e=0;e<m;e++){const t=e*v,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,l=1-a,d=s+n*c[2],f=s+r*c[2],m=o+n*c[2],y=o+r*c[2],b=u*l,x=u*a,I=i*l,N=i*a;for(let e=0;e<h;e++){const t=k[w++];g[d+e]+=t*b,g[f+e]+=t*x,g[m+e]+=t*I,g[y+e]+=t*N}}}}return n.makeTensorInfo([l,p,d,h],"float32",g)}};const Jn={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o}=t,{alignCorners:i,halfPixelCenters:u,size:c}=s;(0,a.H)(o,"resizeNearestNeighbor");const l=r.util.computeStrides(o.shape),[d,p]=c,[h,f,m,g]=o.shape,y=n.data.get(o.dataId).values,b=new Float32Array(h*d*p*g),x=[i&&d>1?f-1:f,i&&p>1?m-1:m],v=[i&&d>1?d-1:d,i&&p>1?p-1:p],k=x[0]/v[0],w=x[1]/v[1];let I=0;for(let r=0;r<h;r++){const e=r*l[0];for(let t=0;t<d;t++){const n=u?k*(t+.5):k*t;let r=Math.min(f-1,i?Math.round(n):Math.floor(n));u&&(r=Math.max(0,r));const a=e+r*l[1];for(let e=0;e<p;e++){const t=u?w*(e+.5):w*e;let n=Math.min(m-1,i?Math.round(t):Math.floor(t));u&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<g;e++){const t=y[r+e];b[I++]=t}}}}return n.makeTensorInfo([h,d,p,g],o.dtype,b)}};const er={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o,dy:i}=t,{alignCorners:u}=s;(0,a.H)([i,o],"resizeNearestNeighborGrad");const c=r.util.computeStrides(o.shape),l=r.util.computeStrides(i.shape),[d,p,h,f]=o.shape,[,m,g]=i.shape,y=new Float32Array(d*p*h*f),b=n.data.get(i.dataId).values,x=[u&&m>1?p-1:p,u&&g>1?h-1:h],v=[u&&m>1?m-1:m,u&&g>1?g-1:g],k=x[0]/v[0],w=x[1]/v[1],I=1/k,N=1/w,S=2*Math.ceil(I)+2,T=2*Math.ceil(N)+2;for(let r=0;r<d;r++){const e=r*c[0];for(let t=0;t<p;t++){const n=e+t*c[1],r=Math.floor(t*I),a=Math.floor(r-S/2);for(let s=0;s<h;s++){const r=n+s*c[2],o=Math.floor(s*N),i=Math.floor(o-T/2);for(let n=0;n<f;n++){let o=0;for(let r=0;r<S;r++){const c=r+a;if(c<0||c>=m)continue;const d=e+c*l[1],f=c*k;if(t===Math.min(p-1,u?Math.round(f):Math.floor(f)))for(let e=0;e<T;e++){const t=e+i;if(t<0||t>=g)continue;const r=d+t*l[2],a=t*w;s===Math.min(h-1,u?Math.round(a):Math.floor(a))&&(o+=b[r+n])}}y[r+n]=o}}}}return n.makeTensorInfo(o.shape,o.dtype,y)}};const tr={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{dims:i}=s;(0,a.H)(o,"reverse");const u=o.shape.length,c=r.util.parseAxisParam(i,o.shape);if(0===u)return(0,p.y)({inputs:{x:o},backend:n});const l=new r.TensorBuffer(o.shape,o.dtype),d=n.bufferSync(o);for(let r=0;r<l.size;r++){const e=l.indexToLoc(r),t=e.slice();c.forEach((e=>t[e]=o.shape[e]-1-t[e])),l.set(d.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},nr={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:o,center:i}=t,u=n,c=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[l,d,p,h]=a.shape,[f,m]=r.backend_util.getImageCenter(i,d,p),g=Math.sin(s),y=Math.cos(s),b=u.data.get(a.dataId).values;for(let r=0;r<l;r++){const e=r*p*d*h;for(let t=0;t<d;t++){const n=t*(p*h);for(let r=0;r<p;r++){const a=r*h;for(let s=0;s<h;s++){const i=[l,t,r,s],u=i[2],x=i[1];let v=(u-f)*y-(x-m)*g,k=(u-f)*g+(x-m)*y;v=Math.round(v+f),k=Math.round(k+m);let w=o;if("number"!==typeof o&&(w=3===s?255:o[s]),v>=0&&v<p&&k>=0&&k<d){w=b[e+k*(p*h)+v*h+s]}c[e+n+a+s]=w}}}}return{dataId:u.write(c,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},rr=(0,c.A)(r.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),ar={kernelName:r.Round,backendName:"cpu",kernelFunc:rr};var sr=n(7742);function or(e,t,n,a,s,o,i,u,c,l){const d=[a/s,s],p=e.values,h=t.values;if(0===a)return(0,r.buffer)(n,t.dtype);const f=(0,r.buffer)(d,t.dtype);f.values.fill(c);for(let r=0;r<o;r++){const e=[];let o=0;for(let t=0;t<i;t++){const n=p[r*i+t];e.push(n),o+=n*u[t]}if(o<0||o>=a/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)l?f.values[o*s+n]+=h[r*s+n]:f.values[o*s+n]=0===t.rank?h[0]:h[r*s+n]}return f}const ir={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:o}=t,{shape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(o,s,i),h=or(n.bufferSync(s),n.bufferSync(o),i,p,l,c,u,d,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};const ur={kernelName:r.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:o,e:i}=t;(0,a.H)([s,o,i],"select");const u=s.shape.length,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,d=n.data.get(i.dataId).values,p=(0,r.upcastType)(o.dtype,i.dtype),h=r.util.makeZerosTypedArray(r.util.sizeFromShape(o.shape),p);let f=0;const m=0===u||u>1||1===o.shape.length?1:r.util.sizeFromShape(o.shape.slice(1));for(let r=0;r<c.length;r++)for(let e=0;e<m;e++)1===c[r]?h[f++]=l[r]:h[f++]=d[r];return n.makeTensorInfo(o.shape,p,h)}},cr=r.backend_util.SELU_SCALEALPHA,lr=r.backend_util.SELU_SCALE,dr=(0,c.A)(r.Selu,(e=>e>=0?lr*e:cr*(Math.exp(e)-1))),pr={kernelName:r.Selu,backendName:"cpu",kernelFunc:dr},hr=(0,c.A)(r.Sign,(e=>e<0?-1:e>0?1:0)),fr={kernelName:r.Sign,backendName:"cpu",kernelFunc:hr},mr=(0,c.A)(r.Sin,(e=>Math.sin(e))),gr={kernelName:r.Sin,backendName:"cpu",kernelFunc:mr},yr=(0,c.A)(r.Sinh,(e=>Math.sinh(e))),br={kernelName:r.Sinh,backendName:"cpu",kernelFunc:yr},xr=Math.log(1.1920928955078125e-7)+2,vr=(0,c.A)(r.Softplus,(e=>{const t=e>-xr,n=e<xr,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),kr={kernelName:r.Softplus,backendName:"cpu",kernelFunc:vr};const wr={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{blockShape:i,paddings:u}=s;(0,a.H)([o],"spaceToBatchND");const c=r.util.sizeFromShape(i),l=[[0,0]];l.push(...u);for(let r=1+i.length;r<o.shape.length;++r)l.push([0,0]);const d=zn.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:l,constantValue:0}}),p=r.backend_util.getReshaped(d.shape,i,c,!1),h=r.backend_util.getPermuted(p.length,i.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,i,c,!1),m=T({inputs:{x:d},backend:n,attrs:{shape:p}}),g={x:m},y={perm:h},b=(0,B.p)({inputs:g,backend:n,attrs:y}),x=T({inputs:{x:b},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),x}};var Ir=n(42123);const Nr={kernelName:r.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values[0],[d,p,h,f,m]=(0,Ir.c)(i,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var Sr=n(3849);const Tr={kernelName:r.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.data.get(a.dataId).values),i=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,d]=(0,Sr.U)(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var _r=n(13989);const Er={kernelName:r.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=(0,_r.V)(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};const Cr={kernelName:r.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=(0,_r.V)(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}};const Ar={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=r.backend_util.calculateShapes(o,s,u),f=or(n.bufferSync(s),n.bufferSync(o),u,h,d,l,c,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(u,f.dtype,f.values)}};const $r={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=a,u=r.util.parseAxisParam(i,s.shape)[0],c=r.backend_util.prepareSplitSize(s,o,u),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return c.map((e=>{const t=[...d];t[u]=e;const r=(0,ue.tP)({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[u]+=e,r}))}};var Rr=n(10440);const Fr={kernelName:r.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,a.H)(n,"square");const s=r.data.get(n.dataId).values,o=new Float32Array(s.length);for(let a=0;a<s.length;++a){const e=s[a];o[a]=e*e}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Or=n(40212);const Dr=(0,c.A)(r.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Mr={kernelName:r.Step,backendName:"cpu",kernelFunc:Dr};var Br=n(62210);const Pr={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{begin:i,end:u,strides:c,beginMask:l,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:f}=s;(0,a.H)(o,"stridedSlice");const{finalShapeSparse:m,finalShape:g,isIdentity:y,sliceDim0:b,isSimpleSlice:x,begin:v,end:k,strides:w}=r.slice_util.sliceInfo(o.shape,i,u,c,l,d,p,h,f);let I;if(y)I=T({inputs:{x:o},backend:n,attrs:{shape:g}});else if(b||x){r.util.assert(o.shape.length>=1,(()=>`Input must have rank at least 1, got: ${o.shape.length}`));const e=r.slice_util.computeOutShape(v,k,w),t=(0,ue.tP)({inputs:{x:o},backend:n,attrs:{begin:v,size:e}});I=T({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(o),t=(0,Br.t)(m,e,w,v);I=n.makeTensorInfo(g,t.dtype,t.values)}return I}};var Lr=n(66841);const Vr={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,p=n.data.get(l.dataId).values,h=n.data.get(d.dataId).values,[f,m]=(0,Lr.A)(p,h,a,s,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var Wr=n(38639);const zr={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[c,l,d]=(0,Wr.Q)(i,u,a),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var Ur=n(26626);const Gr={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(s.dataId).values,i=(0,Ur.h)(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},Hr=(0,c.A)(r.Tan,(e=>Math.tan(e))),jr={kernelName:r.Tan,backendName:"cpu",kernelFunc:Hr},qr=(0,c.A)(r.Tanh,(e=>Math.tanh(e))),Xr={kernelName:r.Tanh,backendName:"cpu",kernelFunc:qr};var Kr=n(27723);const Yr={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;(0,a.H)(s,"tile");const i=(0,Kr.R)(n.bufferSync(s),o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var Qr=n(69556);const Zr={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:i}=r;(0,a.H)(s,"topk");const u=n.data.get(s.dataId).values,[c,l]=(0,Qr.W)(u,s.shape,s.dtype,o,i);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Jr={kernelName:r.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:o}=t,{interpolation:i,fillMode:u,fillValue:c,outputShape:l}=n,[d,p,h,f]=s.shape,[m,g]=null!=l?l:[p,h],y=[d,m,g,f],b=r.util.computeStrides(s.shape),x=b[0],v=b[1],k=b[2],w=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(y));w.fill(c);const I=a.data.get(s.dataId).values,N=a.data.get(o.dataId).values;for(let r=0;r<d;++r){const e=1===o.shape[0]?N:N.subarray(8*r,8*r+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let a=0;a<f;++a){let s;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const l=(e[0]*n+e[1]*t+e[2])/o,d=(e[3]*n+e[4]*t+e[5])/o,f=ea(l,h,u),m=ea(d,p,u);switch(i){case"nearest":s=na(I,p,h,x,v,k,r,m,f,a,c);break;case"bilinear":s=ra(I,p,h,x,v,k,r,m,f,a,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[r*x+t*v+n*k+a]=s}return a.makeTensorInfo(y,s.dtype,w)}return{dataId:a.write(w,y,s.dtype),shape:s.shape,dtype:s.dtype}}};function ea(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.util.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function ta(e,t,n,r,a,s,o,i,u,c,l){return 0<=i&&i<t&&0<=u&&u<n?e[o*r+i*a+u*s+c]:l}function na(e,t,n,r,a,s,o,i,u,c,l){return ta(e,t,n,r,a,s,o,Math.round(i),Math.round(u),c,l)}function ra(e,t,n,r,a,s,o,i,u,c,l){const d=Math.floor(i),p=Math.floor(u),h=d+1,f=p+1;return(h-i)*((f-u)*ta(e,t,n,r,a,s,o,d,p,c,l)+(u-p)*ta(e,t,n,r,a,s,o,d,f,c,l))+(i-d)*((f-u)*ta(e,t,n,r,a,s,o,h,p,c,l)+(u-p)*ta(e,t,n,r,a,s,o,h,f,c,l))}var aa=n(75638);const sa={kernelName:r.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:o}=t;(0,a.H)(o,"unique");const i=r.data.get(o.dataId).values,{outputValues:u,outputShape:c,indices:l}=(0,aa.S)(i,s,o.shape,o.dtype);return[r.makeTensorInfo(c,o.dtype,u),r.makeTensorInfo([l.length],"int32",l)]}};const oa={kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a.shape.length,i=a.shape[s],u=new Array(o-1);let c=0;for(let h=0;h<o;h++)h!==s&&(u[c++]=a.shape[h]);const l=new Array(o).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(i);for(let h=0;h<p.length;h++){l[s]=h;const e=(0,ue.tP)({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});p[h]=T({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return p}};const ia={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,segmentIds:i}=t,{numSegments:u}=s;(0,a.H)(o,"unsortedSegmentSum");const c=[],l=[],d=o.shape.length-i.shape.length;let p=i;for(let r=0;r<d;++r){const e=lt({inputs:{input:p},backend:n,attrs:{dim:r+1}});p=e,l.push(e)}for(let a=0;a<u;++a){const e=r.util.createScalarValue(a,"int32"),t=n.makeTensorInfo([],"int32",e),s=(0,et.Dg)({inputs:{a:t,b:p},backend:n}),i=(0,he.p)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=(0,Xe.Jp)({inputs:{a:i,b:o},backend:n}),d=Ye({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});c.push(d),l.push(t),l.push(s),l.push(i),l.push(u),l.push(d)}const h=Vn({inputs:c,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ua=[A,$.fC,F,D,S.j4,M,P,L,V,W,U,H,q,Q,J,re,ae,se,oe,C,ie,ce,de,pe,he.M,fe.y2,ge,ye.z,be,Ne,_e,Ee,Te,Ae,$e,Ce,Fe,De,Me,Be,Pe,Le,We,ze,Ue,Ge,He,qe,je,mt,Ze,d,Je,et.Kx,ut,ct.SX,dt,pt.Vu,vt,wt,It,Nt.Ao,_t,Et,Ct,$t,Ft,Ot.Ce,Dt.V,p.I,Mt,ke,Pt,Vt,zt,f,Ut.zh,Gt.m3,jt,qt.xM,Kt,Zt,en,rn,an,sn,dn.eJ,pn,hn,fn,mn,gn,ln,yn,bn,xn.u0,vn,In,_n,Xe.f$,En.AF,An,Rn,On,Dn.nP,Mn,Ln,Wn,zn,Hn,b,jn.Iz,Xn,we.O,Yn,v,w,_,Qn,Zn,Jn,er,tr,nr,ar,sr.FY,ir,ur,pr,I.BP,fr,gr,br,ue.C6,Tn,kr,wr,Nr,Tr,Er,Cr,Ar,$r,Rr.cz,Fr,Or.MS,Mr,Pr,Vr,zr,Gr,gt.GR,Qe,jr,Xr,Yr,Zr,B.b,Jr,sa,oa,ia,Pn];for(const ca of ua)(0,r.registerKernel)(ca)},60224:function(e,t,n){"use strict";n.d(t,{bk:function(){return s},fC:function(){return o}});var r=n(83921),a=n(18166);function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const o={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,a.H)(t,"abs");let o=new Float32Array(r.util.sizeFromShape(t.shape));return o=s(n.data.get(t.dataId).values),n.makeOutput(o,t.shape,t.dtype)}}},32779:function(e,t,n){"use strict";n.d(t,{EH:function(){return o},IH:function(){return u},j4:function(){return c}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e+t)),i=(0,s.H)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=(0,s.j)(r.Add,o,i),c={kernelName:r.Add,backendName:"cpu",kernelFunc:u}},58607:function(e,t,n){"use strict";n.d(t,{W:function(){return a},i:function(){return s}});var r=n(83921);function a(e,t,n,a,s){const o=r.util.sizeFromShape(a),i=r.util.makeZerosTypedArray(s,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=o>0?t[r]:1)}return i}function s(e,t,n,a=!1){const s=e.shape[0],o=e.shape[1],i=(0,r.buffer)([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<o;s++){const o=e.get(r,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?i.set(1,r,o):t.size>0?i.set(i.get(r,o)+t.get(r,s),r,o):i.set(i.get(r,o)+1,r,o))}return i}},29258:function(e,t,n){"use strict";n.d(t,{p:function(){return c},M:function(){return l}});var r=n(83921),a=n(33533),s=n(24391),o=n(26961),i=n(41775),u=n(82186);function c(e){const{inputs:t,backend:n,attrs:l}=e,{x:d}=t,{dtype:p}=l;if("complex64"===p){if("complex64"===d.dtype)return(0,i.y)({inputs:{x:d},backend:n});const e=(0,s.l)(n,d.shape,d.dtype),t=c({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=(0,o.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=(0,u.k)({inputs:{input:d},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(d.dtype,p)){const e=(0,i.y)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}if("int32"===p){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===p){const e=n.data.get(d.dataId).values,t=r.util.toTypedArray([0],d.dtype),[s,o]=(0,a.b)(((e,t)=>e!==t?1:0))(d.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",s)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${p}`)}const l={kernelName:r.Cast,backendName:"cpu",kernelFunc:c}},34769:function(e,t,n){"use strict";n.d(t,{__:function(){return o},y2:function(){return u}});var r=n(83921),a=n(18029),s=n(76738);const o=(0,a.a)((e=>Math.ceil(e))),i=(0,s.O)(r.Ceil,o),u={kernelName:r.Ceil,backendName:"cpu",kernelFunc:i}},26961:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}n.d(t,{P:function(){return r},z:function(){return a}});const a={kernelName:n(83921).Complex,backendName:"cpu",kernelFunc:r}},48926:function(e,t,n){"use strict";n.d(t,{j:function(){return a}});var r=n(83921);function a(e,t,n,a){const s=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const o="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=o[i++]}a+=e.shape[1]}))}return s}},7679:function(e,t,n){"use strict";n.d(t,{tW:function(){return o},Dg:function(){return i},Kx:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e===t?1:0)),i=(0,s.j)(r.Equal,o,null,"bool"),u={kernelName:r.Equal,backendName:"cpu",kernelFunc:i}},31211:function(e,t,n){"use strict";n.d(t,{Ro:function(){return o},Qq:function(){return i},SX:function(){return u}});var r=n(83921),a=n(18029),s=n(76738);const o=(0,a.a)((e=>Math.exp(e))),i=(0,s.O)(r.Exp,o,"float32"),u={kernelName:r.Exp,backendName:"cpu",kernelFunc:i}},30969:function(e,t,n){"use strict";n.d(t,{OF:function(){return o},Vu:function(){return u}});var r=n(83921),a=n(18029),s=n(76738);const o=(0,a.a)((e=>Math.expm1(e))),i=(0,s.O)(r.Expm1,o),u={kernelName:r.Expm1,backendName:"cpu",kernelFunc:i}},76574:function(e,t,n){"use strict";n.d(t,{r6:function(){return o},Ao:function(){return u}});var r=n(83921),a=n(18029),s=n(76738);const o=(0,a.a)((e=>Math.floor(e))),i=(0,s.O)(r.Floor,o),u={kernelName:r.Floor,backendName:"cpu",kernelFunc:i}},31820:function(e,t,n){"use strict";n.d(t,{m:function(){return a}});var r=n(83921);function a(e,t,n,a,s,o,i,u,c){const l=(0,r.buffer)([a,o],n);for(let r=0;r<a;r++){const n=[];let a=0;for(let t=0;t<s;t++){const o=e[r*s+t];a+=o*i[t],n.push(o)}if(a<0||a>=c/o)throw new Error(`Invalid indices: ${n} does not index into ${u}`);for(let e=0;e<o;e++)l.values[r*o+e]=t.get(...t.indexToLoc(a*o+e))}return l}},54468:function(e,t,n){"use strict";n.d(t,{i:function(){return a}});var r=n(83921);function a(e,t,n){const a=(0,r.buffer)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const u=e.locToIndex(n);a.values[r]=e.values[u]}return a}},36272:function(e,t,n){"use strict";n.d(t,{o:function(){return o},Ce:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e>t?1:0)),i=(0,s.j)(r.Greater,o,null,"bool"),u={kernelName:r.Greater,backendName:"cpu",kernelFunc:i}},26259:function(e,t,n){"use strict";n.d(t,{HL:function(){return o},V:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e>=t?1:0)),i=(0,s.j)(r.GreaterEqual,o,null,"bool"),u={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:i}},41775:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{y:function(){return r},I:function(){return a}});const a={kernelName:n(83921).Identity,backendName:"cpu",kernelFunc:r}},88405:function(e,t,n){"use strict";n.d(t,{rO:function(){return o},zh:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e<t?1:0)),i=(0,s.j)(r.Less,o,null,"bool"),u={kernelName:r.Less,backendName:"cpu",kernelFunc:i}},40635:function(e,t,n){"use strict";n.d(t,{lx:function(){return o},m3:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e<=t?1:0)),i=(0,s.j)(r.LessEqual,o,null,"bool"),u={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:i}},61325:function(e,t,n){"use strict";n.d(t,{b:function(){return a}});var r=n(83921);function a(e,t,n){const a=(t-e)/(n-1),s=r.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let r=1;r<s.length;r++)s[r]=s[r-1]+a;return s}},55223:function(e,t,n){"use strict";n.d(t,{vX:function(){return o},xM:function(){return u}});var r=n(83921),a=n(18029),s=n(76738);const o=(0,a.a)((e=>Math.log(e))),i=(0,s.O)(r.Log,o),u={kernelName:r.Log,backendName:"cpu",kernelFunc:i}},55126:function(e,t,n){"use strict";n.d(t,{B:function(){return a}});var r=n(83921);function a(e,t,n,a){const s=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let r=0;r<s.length;++r){const n=r*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}s[r]=a}return s}},71717:function(e,t,n){"use strict";n.d(t,{wS:function(){return o},eJ:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>Math.max(e,t))),i=(0,s.j)(r.Maximum,o),u={kernelName:r.Maximum,backendName:"cpu",kernelFunc:i}},612:function(e,t,n){"use strict";n.d(t,{vP:function(){return o},u0:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>Math.min(e,t))),i=(0,s.j)(r.Minimum,o),u={kernelName:r.Minimum,backendName:"cpu",kernelFunc:i}},1917:function(e,t,n){"use strict";n.d(t,{$3:function(){return o},Jp:function(){return u},f$:function(){return c}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e*t)),i=(0,s.H)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=(0,s.j)(r.Multiply,o,i),c={kernelName:r.Multiply,backendName:"cpu",kernelFunc:u}},70854:function(e,t,n){"use strict";n.d(t,{uC:function(){return o},AF:function(){return i}});var r=n(83921),a=n(18166),s=n(1917);function o(e,t,n){const a=r.util.createScalarValue(-1,n);return(0,s.$3)([],t,a,e,n)}const i={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,a.H)(r,"neg");const s=n.data.get(r.dataId).values,[i,u]=o(s,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,i)}}},98584:function(e,t,n){"use strict";n.d(t,{Gj:function(){return o},nP:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e!==t?1:0)),i=(0,s.j)(r.NotEqual,o,null,"bool"),u={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:i}},29560:function(e,t,n){"use strict";n.d(t,{Qg:function(){return o},Iz:function(){return i}});var r=n(83921),a=n(18166),s=n(44802);function o(e,t,n,a){const[s,o]=r.backend_util.computeOutAndReduceShapes(e,a),i=(0,r.upcastType)(t,"int32"),u=r.util.makeZerosTypedArray(r.util.sizeFromShape(s),i),c=r.util.sizeFromShape(o);for(let r=0;r<u.length;++r){const e=r*c;let t=1;for(let r=0;r<c;++r)t*=n[e+r];u[r]=t}return{outVals:u,outShape:s,outDtype:i}}const i={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:u}=t,{axis:c,keepDims:l}=i;(0,a.H)(u,"prod");const d=u.shape.length,p=r.util.parseAxisParam(c,u.shape),h=r.backend_util.getAxesPermutation(p,d);let f=p,m=u;const g=[];null!=h&&(m=(0,s.p)({inputs:{x:u},backend:n,attrs:{perm:h}}),g.push(m),f=r.backend_util.getInnerMostAxes(f.length,d));const y=n.data.get(m.dataId).values,{outVals:b,outShape:x,outDtype:v}=o(m.shape,m.dtype,y,f);let k=x;return l&&(k=r.backend_util.expandShapeToKeepDim(x,p)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(k,v,b)}}},99230:function(e,t,n){"use strict";n.d(t,{b:function(){return a}});var r=n(83921);function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),o=r.util.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),o[0]=e;for(let r=1;r<o.length;r++)o[r]=o[r-1]+n;return o}},82186:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,{k:function(){return r},O:function(){return a}});const a={kernelName:n(83921).Real,backendName:"cpu",kernelFunc:r}},7742:function(e,t,n){"use strict";n.d(t,{zd:function(){return o},FY:function(){return u}});var r=n(83921),a=n(18029),s=n(76738);const o=(0,a.a)((e=>1/Math.sqrt(e))),i=(0,s.O)(r.Rsqrt,o),u={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:i}},40108:function(e,t,n){"use strict";n.d(t,{VY:function(){return o},XD:function(){return i},BP:function(){return u}});var r=n(83921),a=n(18029),s=n(76738);const o=(0,a.a)((e=>1/(1+Math.exp(-e)))),i=(0,s.A)(r.Sigmoid,(e=>1/(1+Math.exp(-e)))),u={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:i}},82578:function(e,t,n){"use strict";n.d(t,{rT:function(){return s},tP:function(){return o},C6:function(){return i}});var r=n(83921),a=n(18166);function s(e,t,n,a,s){const o=r.slice_util.isSliceContinous(a,t,n),i=r.util.sizeFromShape(n),u=r.util.computeStrides(a);if(o){const n=r.slice_util.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const c="string"===s?r.backend_util.fromUint8ToStringArray(e):e,l=(0,r.buffer)(a,s,c),d=(0,r.buffer)(n,s);for(let r=0;r<d.size;++r){const e=d.indexToLoc(r),n=e.map(((e,n)=>e+t[n]));d.set(l.get(...n),...e)}return"string"===s?r.backend_util.fromStringArrayToUint8(d.values):d.values}function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t,{begin:u,size:c}=o;(0,a.H)(i,"slice");const[l,d]=r.slice_util.parseSliceParams(i,u,c);r.slice_util.assertParamsValid(i,l,d);const p=s(n.data.get(i.dataId).values,l,d,i.shape,i.dtype);return n.makeTensorInfo(d,i.dtype,p)}const i={kernelName:r.Slice,backendName:"cpu",kernelFunc:o}},42123:function(e,t,n){"use strict";n.d(t,{c:function(){return a}});var r=n(83921);function a(e,t,n,a,s,o,i){const u=t[0],c=o[0],l=new Array(c),d=new Array(u),p=t[1];if(0===c){if(0!==u)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[r.util.getArrayFromDType(n,0),[0,p],r.util.getArrayFromDType(s,0),l,d]}let h=!0,f=0;const m=new Array(c).fill(0);for(let y=0;y<u;++y){const t=e[y*p];if(t<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=c)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,c));++m[t],h=h&&t>=f,f=t}let g=!0;for(let r=0;r<c;++r){const e=0===m[r];l[r]=e,g=g&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(g&&h){const t=e,n=a;for(let e=0;e<u;++e)d[e]=e;return[t,[u,p],n,l,d]}{const t=m[c-1],o=r.util.getArrayFromDType(n,t*p),h=r.util.getArrayFromDType(s,t),f=new Array(c).fill(0);for(let n=0;n<u;++n){const t=e[n*p],r=f[t],s=(0===t?0:m[t-1])+r;f[t]++;for(let a=0;a<p;++a)o[s*p+a]=e[n*p+a];h[s]=a[n],d[n]=s}for(let e=0;e<c;++e){if(0===f[e]){const t=0===e?0:m[e-1];o[t*p+0]=e;for(let e=1;e<p;++e)o[t*p+e]=0;h[t]=i}}return[o,[t,p],h,l,d]}}},3849:function(e,t,n){"use strict";n.d(t,{U:function(){return a}});var r=n(83921);function a(e,t,n,a,s){const o=r.util.sizeFromShape(a),i=t[0],u=s.length,c=[];let l=1,d=-1;for(let g=0;g<u;++g){const e=s[g];if(-1===e){if(-1!==d)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,c.push(1)}else{if(e<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));l*=e,c.push(e)}}if(-1!==d){if(l<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/l);if(l*e!==o)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,c));c[d]=e}if(r.util.sizeFromShape(c)!==o)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,c));const p=a.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*a[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*c[e+1]}const m=r.util.getArrayFromDType(n,i*u);for(let r=0;r<i;++r){let t=0;for(let n=0;n<p;++n)t+=e[r*p+n]*h[n];for(let e=0;e<u;++e)m[r*u+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,u],c]}},13989:function(e,t,n){"use strict";n.d(t,{V:function(){return a}});var r=n(83921);function a(e,t,n,a,s,o=!1,i=0){const u=a.length,c=[t[0],e.length/t[0]],l=c[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=t.slice();p[0]=d;const h=p.reduce(((e,t)=>e*t),1),f=r.util.getArrayFromDType(n,h);if(0===u)return d>0&&f.fill(i),[f,p];if(d<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<u){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(i,y*l,b*l);for(let n=m;n<g;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],c[0]));for(let n=0;n<l;n++)f[b*l+n]+=e[t*l+n]}if(o)for(let e=0;e<l;e++)f[b*l+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<d&&f.fill(i,y*l,d*l),[f,p]}},10440:function(e,t,n){"use strict";n.d(t,{zT:function(){return o},cz:function(){return u}});var r=n(83921),a=n(18029),s=n(76738);const o=(0,a.a)((e=>Math.sqrt(e))),i=(0,s.A)(r.Sqrt,(e=>Math.sqrt(e))),u={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:i}},40212:function(e,t,n){"use strict";n.d(t,{Hz:function(){return o},MS:function(){return u}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>{const n=e-t;return n*n})),i=(0,s.j)(r.SquaredDifference,o),u={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:i}},62210:function(e,t,n){"use strict";n.d(t,{t:function(){return a}});var r=n(83921);function a(e,t,n,a){const s=(0,r.buffer)(e,t.dtype);for(let r=0;r<s.size;r++){const e=s.indexToLoc(r),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];s.set(t.get(...o),...e)}return s}},66841:function(e,t,n){"use strict";n.d(t,{A:function(){return s}});var r=n(83921);class a{constructor(e,t,n,a,s,o){this.separator=r.util.encodeString(e),this.nGramWidths=t,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let o=0;o<a;++o){const i=this.getPadWidth(s),u=Math.max(0,i-o),c=Math.max(0,i-(a-(o+1))),l=s-(u+c),d=t+(u>0?0:o-i);let p=0;p+=u*this.leftPad.length;for(let t=0;t<l;++t)p+=e[d+t].length;p+=c*this.rightPad.length;p+=(u+c+l-1)*this.separator.length,n[r+o]=new Uint8Array(p);const h=n[r+o];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,o=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=s;++t)o[t]=0;return[e,o]}o[0]=0;for(let r=1;r<=s;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),o[r]=o[r-1]+n}const i=new Array(o[s]);for(let r=0;r<s;++r){const n=t[r];let a=o[r];if(this.nGramWidths.forEach((s=>{const o=t[r+1]-t[r],u=this.getNumNGrams(o,s);this.createNGrams(e,n,i,a,u,s),a+=u})),this.preserveShort&&a===o[r]){const s=t[r+1]-t[r];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,n,i,a,u,o)}}return[i,o]}}function s(e,t,n,r,s,o,i,u){return new a(n,r,s,o,i,u).compute(e,t)}},38639:function(e,t,n){"use strict";n.d(t,{Q:function(){return s}});var r=n(83921);function a(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function s(e,t,n){const s=e.length,o=[];let i=0,u=0;const c=new Array(s);for(let r=0;r<s;++r){const s=o.length;a(e[r],t,n,o);const l=o.length-s;c[r]=l,i+=l,u=Math.max(u,l)}const l=r.util.getArrayFromDType("int32",2*i),d=new Array(i),p=[s,u];let h=0;for(let r=0;r<s;++r)for(let e=0;e<c[r];++e)l[2*h]=r,l[2*h+1]=e,d[h]=o[h],++h;return[l,d,p]}},26626:function(e,t,n){"use strict";n.d(t,{h:function(){return a}});var r=n(83921);function a(e,t){const n=r.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},71649:function(e,t,n){"use strict";n.d(t,{VY:function(){return o},lu:function(){return u},GR:function(){return c}});var r=n(83921),a=n(33533),s=n(46205);const o=(0,a.b)(((e,t)=>e-t)),i=(0,s.H)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=(0,s.j)(r.Sub,o,i),c={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},27723:function(e,t,n){"use strict";n.d(t,{R:function(){return a}});var r=n(83921);function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,r.buffer)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}},69556:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(83921);const a=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function s(e,t,n=0,o=e.length-1){for(;o>n;){if(o-n>600){const r=o-n+1,a=t-n+1,i=Math.log(r),u=.5*Math.exp(2*i/3),c=.5*Math.sqrt(i*u*(r-u)/r)*Math.sign(a-r/2);s(e,t,Math.max(n,Math.floor(t-a*u/r+c)),Math.min(o,Math.floor(t+(r-a)*u/r+c)))}const i=e[t];let u=n,c=o;for(r.util.swap(e,n,t),a(e[o],i)>0&&r.util.swap(e,n,o);u<c;){for(r.util.swap(e,u,c),u++,c--;a(e[u],i)<0;)u+=1;for(;a(e[c],i)>0;)c-=1}0===a(e[n],i)?r.util.swap(e,n,c):(c+=1,r.util.swap(e,c,o)),c<=t&&(n=c+1),t<=c&&(o=c-1)}}function o(e,t,n,o,i){const u=t[t.length-1],[c,l]=[e.length/u,u],d=r.util.getTypedArrayFromDType(n,c*o),p=r.util.getTypedArrayFromDType("int32",c*o);for(let r=0;r<c;r++){const t=r*l,n=e.subarray(t,t+l);let u=new Array(n.length);n.forEach(((e,t)=>u[t]={value:e,index:t})),o<u.length&&(s(u,o),u=u.slice(0,o)),i&&u.sort(a);const c=r*o,h=d.subarray(c,c+o),f=p.subarray(c,c+o);for(let e=0;e<o;e++)h[e]=u[e].value,f[e]=u[e].index}const h=t.slice();return h[h.length-1]=o,[(0,r.buffer)(h,n,d),(0,r.buffer)(h,"int32",p)]}},44802:function(e,t,n){"use strict";n.d(t,{p:function(){return o},b:function(){return i}});var r=n(83921),a=n(18166),s=n(77107);function o(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:i}=n;(0,a.H)(o,"transpose");const u=o.shape.length,c=new Array(u);for(let a=0;a<c.length;a++)c[a]=o.shape[i[a]];const l=r.data.get(o.dataId).values,d=(0,s.H)(l,o.shape,o.dtype,i,c);return{dataId:r.write(d,c,o.dtype),shape:c,dtype:o.dtype}}const i={kernelName:r.Transpose,backendName:"cpu",kernelFunc:o}},77107:function(e,t,n){"use strict";n.d(t,{H:function(){return a}});var r=n(83921);function a(e,t,n,a,s){const o=t.length,i=r.util.sizeFromShape(t),u=r.util.computeStrides(t),c=r.util.computeStrides(s),l=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(s));for(let d=0;d<i;++d){const t=r.util.indexToLoc(d,o,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];l[r.util.locToIndex(n,o,c)]=e[d]}return l}},75638:function(e,t,n){"use strict";n.d(t,{S:function(){return a}});var r=n(83921);function a(e,t,n,a){const s=r.util.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let r=0;r<s;r++)o[0]*=n[r];o[1]=n[s];for(let r=s+1;r<n.length;r++)o[2]*=n[r];const i={},u=new Int32Array(n[s]),c=new r.TensorBuffer(o,a,e),l=[],d=1===o[0]&&1===o[2];for(let r=0;r<n[s];r++){let t;if(d)t=e[r].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(c.get(t,r,n));t=e.join(",")}if(void 0!==i[t])u[r]=i[t];else{const e=Object.keys(i).length;i[t]=e,u[r]=e,l.push(r)}}const p=o.slice();p[1]=Object.keys(i).length;const h=new r.TensorBuffer(p,a);l.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(c.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=p[1],{outputValues:h.values,outputShape:f,indices:u}}},45226:function(e,t,n){"use strict";n.r(t),n.d(t,{simpleAbsImpl:function(){return r.bk},addImpl:function(){return a.EH},bincountImpl:function(){return s.W},bincountReduceImpl:function(){return s.i},ceilImpl:function(){return o.__},concatImpl:function(){return i.j},equalImpl:function(){return u.tW},expImpl:function(){return c.Ro},expm1Impl:function(){return l.OF},floorImpl:function(){return d.r6},gatherNdImpl:function(){return p.m},gatherV2Impl:function(){return h.i},greaterImpl:function(){return f.o},greaterEqualImpl:function(){return m.HL},lessImpl:function(){return g.rO},lessEqualImpl:function(){return y.lx},linSpaceImpl:function(){return b.b},logImpl:function(){return x.vX},maxImpl:function(){return v.B},maximumImpl:function(){return k.wS},minimumImpl:function(){return w.vP},multiplyImpl:function(){return I.$3},negImpl:function(){return N.uC},notEqualImpl:function(){return S.Gj},prodImpl:function(){return T.Qg},rangeImpl:function(){return _.b},rsqrtImpl:function(){return E.zd},sigmoidImpl:function(){return C.VY},sliceImpl:function(){return A.rT},sparseFillEmptyRowsImpl:function(){return $.c},sparseReshapeImpl:function(){return R.U},sparseSegmentReductionImpl:function(){return F.V},sqrtImpl:function(){return O.zT},squaredDifferenceImpl:function(){return D.Hz},stridedSliceImpl:function(){return M.t},stringNGramsImpl:function(){return B.A},stringSplitImpl:function(){return P.Q},stringToHashBucketFastImpl:function(){return L.h},subImpl:function(){return V.VY},tileImpl:function(){return W.R},topKImpl:function(){return z.W},transposeImpl:function(){return U.H},uniqueImpl:function(){return G.S}});var r=n(60224),a=n(32779),s=n(58607),o=n(34769),i=n(48926),u=n(7679),c=n(31211),l=n(30969),d=n(76574),p=n(31820),h=n(54468),f=n(36272),m=n(26259),g=n(88405),y=n(40635),b=n(61325),x=n(55223),v=n(55126),k=n(71717),w=n(612),I=n(1917),N=n(70854),S=n(98584),T=n(29560),_=n(99230),E=n(7742),C=n(40108),A=n(82578),$=n(42123),R=n(3849),F=n(13989),O=n(10440),D=n(40212),M=n(62210),B=n(66841),P=n(38639),L=n(26626),V=n(71649),W=n(27723),z=n(69556),U=n(77107),G=n(75638)},33533:function(e,t,n){"use strict";n.d(t,{b:function(){return a}});var r=n(83921);function a(e){return(t,n,a,s,o)=>{const i=r.backend_util.assertAndGetBroadcastShape(t,n),u=i.length,c=r.util.computeStrides(i),l=r.util.sizeFromShape(i),d=r.util.getTypedArrayFromDType(o,l),p=t.length,h=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),g=r.backend_util.getBroadcastDims(t,i),y=r.backend_util.getBroadcastDims(n,i);if(g.length+y.length===0)for(let r=0;r<d.length;++r)d[r]=e(a[r%a.length],s[r%s.length]);else for(let b=0;b<d.length;++b){const t=r.util.indexToLoc(b,u,c),n=t.slice(-p);g.forEach((e=>n[e]=0));const o=r.util.locToIndex(n,p,f),i=t.slice(-h);y.forEach((e=>i[e]=0));const l=r.util.locToIndex(i,h,m);d[b]=e(a[o],s[l])}return[d,i]}}},46205:function(e,t,n){"use strict";n.d(t,{j:function(){return i},H:function(){return u}});var r=n(83921),a=n(18166),s=n(29258),o=n(26961);function i(e,t,n,i){return null==n?({inputs:n,backend:s})=>{const{a:o,b:u}=n,c=s;(0,a.H)([o,u],e);const l=c.data.get(o.dataId).values,d=c.data.get(u.dataId).values,p="string"===o.dtype?r.backend_util.fromUint8ToStringArray(l):l,h="string"===o.dtype?r.backend_util.fromUint8ToStringArray(d):d,f=i||o.dtype,[m,g]=t(o.shape,u.shape,p,h,f);return c.makeTensorInfo(g,f,m)}:({inputs:e,backend:r})=>{const{a:a,b:u}=e,c=r;if("complex64"===a.dtype||"complex64"===u.dtype){const e=(0,s.p)({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,i=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(i.dataId).values,p=(0,s.p)({inputs:{x:u},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(p.dataId),f=h.complexTensorInfos.real,m=h.complexTensorInfos.imag,g=c.data.get(f.dataId).values,y=c.data.get(m.dataId).values,[b,x,v]=n(a.shape,u.shape,l,d,g,y),k=c.makeTensorInfo(v,"float32",b),w=c.makeTensorInfo(v,"float32",x),I=(0,o.P)({inputs:{real:k,imag:w},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(p),c.disposeIntermediateTensorInfo(k),c.disposeIntermediateTensorInfo(w),I}{const e=c.data.get(a.dataId).values,n=c.data.get(u.dataId).values,r=i||a.dtype,[s,o]=t(a.shape,u.shape,e,n,r);return c.makeTensorInfo(o,r,s)}}}function u(e){return(t,n,a,s,o,i)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),c=r.util.sizeFromShape(u),l=u.length,d=r.util.computeStrides(u),p=r.util.getTypedArrayFromDType("float32",c),h=r.util.getTypedArrayFromDType("float32",c),f=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),g=r.backend_util.mergeRealAndImagArrays(a,s),y=r.backend_util.mergeRealAndImagArrays(o,i),b=t.length,x=r.util.computeStrides(t),v=n.length,k=r.util.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<p.length;r++){const t=r%g.length,n=r%y.length,a=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);p[r]=a.real,h[r]=a.imag}else for(let w=0;w<p.length;w++){const t=r.util.indexToLoc(w,l,d),n=t.slice(-b);f.forEach((e=>n[e]=0));const a=r.util.locToIndex(n,b,x),s=t.slice(-v);m.forEach((e=>s[e]=0));const o=r.util.locToIndex(s,v,k),i=e(g[2*a],g[2*a+1],y[2*o],y[2*o+1]);p[w]=i.real,h[w]=i.imag}return[p,h,u]}}},18029:function(e,t,n){"use strict";n.d(t,{a:function(){return a}});var r=n(83921);function a(e){return(t,n,a)=>{const s=r.util.getTypedArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)s[r]=e(t[r],a);return s}}},76738:function(e,t,n){"use strict";n.d(t,{A:function(){return s},O:function(){return o}});var r=n(83921),a=n(18166);function s(e,t,n){return({inputs:s,attrs:o,backend:i})=>{const{x:u}=s;if((0,a.H)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=i,l=c.data.get(u.dataId).values,d=r.util.sizeFromShape(u.shape),p=n||u.dtype,h=r.util.getArrayFromDType(p,d);for(let e=0;e<d;++e)h[e]=t(l[e],o);return c.makeTensorInfo(u.shape,p,h)}}function o(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:i}=r;if((0,a.H)(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=o,c=u.data.get(i.dataId).values,l=n||i.dtype,d=t(c,l,s);return u.makeTensorInfo(i.shape,l,d)}}},24391:function(e,t,n){"use strict";n.d(t,{l:function(){return s}});var r=n(83921),a=n(26961);function s(e,t,n="float32"){if("complex64"===n){const n=s(e,t,"float32"),r=s(e,t,"float32");return(0,a.P)({inputs:{real:n,imag:r},backend:e})}const o=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,o)}},29610:function(e,t,n){"use strict";n.d(t,{A:function(){return a}});var r=n(83921);function a(){let e,t,n,a,s,o,i,u,c,l;return 2===(0,r.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",s="texture",o="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",s="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}},50603:function(e,t,n){"use strict";n.r(t),n.d(t,{GPGPUContext:function(){return je},MathBackendWebGL:function(){return Zt},forceHalfFloat:function(){return en},gpgpu_util:function(){return a},setWebGLContext:function(){return u},version_webgl:function(){return Jt},webgl:function(){return tn},webgl_util:function(){return r}});var r={};n.r(r),n.d(r,{assertNotComplex:function(){return de},bindCanvasToFramebuffer:function(){return L},bindColorTextureToFramebuffer:function(){return V},bindTextureToProgramUniformSampler:function(){return P},bindTextureUnit:function(){return O},bindVertexBufferToProgramAttribute:function(){return F},callAndCheck:function(){return y},canBeRepresented:function(){return b},createFragmentShader:function(){return w},createFramebuffer:function(){return R},createProgram:function(){return N},createStaticIndexBuffer:function(){return E},createStaticVertexBuffer:function(){return _},createTexture:function(){return A},createVertexShader:function(){return k},getBatchDim:function(){return j},getExtensionOrThrow:function(){return v},getFramebufferErrorMessage:function(){return U},getMaxTexturesInShader:function(){return re},getNumChannels:function(){return C},getProgramUniformLocation:function(){return B},getProgramUniformLocationOrThrow:function(){return M},getRowsCols:function(){return q},getShapeAs3D:function(){return X},getTextureShapeFromLogicalShape:function(){return K},getWebGLDisjointQueryTimerVersion:function(){return ae},getWebGLErrorMessage:function(){return x},getWebGLMaxTextureSize:function(){return ee},hasExtension:function(){return se},isCapableOfRenderingToFloatTexture:function(){return ie},isDownloadFloatTextureEnabled:function(){return ue},isReshapeFree:function(){return Q},isWebGLFenceEnabled:function(){return le},isWebGLVersionEnabled:function(){return oe},linkProgram:function(){return S},resetMaxTextureSize:function(){return te},resetMaxTexturesInShader:function(){return ne},unbindColorTextureFromFramebuffer:function(){return W},unbindTextureUnit:function(){return D},validateFramebuffer:function(){return z},validateProgram:function(){return T},validateTextureSize:function(){return $}});var a={};n.r(a),n.d(a,{bindVertexProgramAttributeStreams:function(){return Pe},createBufferFromOutputTexture:function(){return We},createFloat16MatrixTexture:function(){return $e},createFloat16PackedMatrixTexture:function(){return Be},createFloat32MatrixTexture:function(){return Ce},createIndexBuffer:function(){return Te},createPackedMatrixTexture:function(){return De},createUnsignedBytesMatrixTexture:function(){return Fe},createVertexBuffer:function(){return Se},createVertexShader:function(){return Ne},downloadByteEncodedFloatMatrixFromOutputTexture:function(){return Ue},downloadFloat32MatrixFromBuffer:function(){return ze},downloadMatrixFromPackedOutputTexture:function(){return He},downloadPackedMatrixFromBuffer:function(){return Ge},getInternalFormatForFloat16MatrixTexture:function(){return Ae},getInternalFormatForFloat16PackedMatrixTexture:function(){return Me},getInternalFormatForFloat32MatrixTexture:function(){return Ee},getInternalFormatForPackedMatrixTexture:function(){return Oe},getInternalFormatForUnsignedBytesMatrixTexture:function(){return Re},uploadDenseMatrixToTexture:function(){return Le},uploadPixelDataToTexture:function(){return Ve}});var s=n(83921);const o={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function u(e,t){o[e]=t}function c(e){if(!(e in o)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete o[e]}),!1),1===e)return t.getContext("webgl",i)||t.getContext("experimental-webgl",i);return t.getContext("webgl2",i)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;o[e]=t}const t=o[e];return null==t||t.isContextLost()?(delete o[e],c(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),o[e])}var l,d,p;function h(e,t){return[t,e]}function f(e){const t=s.util.sizeFromShape(e),n=Math.ceil(t/4);return s.util.sizeToSquarishShape(n)}function m(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function g(e,t){const n=e;let r,a,o,i,u,c,l,d,p,h;return 2===(0,s.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,o=n.RGBA16F,i=n.RGBA32F,u=n.RED,l=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT,c=n.RGBA8):(r=e.RGBA,a=e.RGBA,o=e.RGBA,i=n.RGBA,u=e.RGBA,l=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,c=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function y(e,t){const n=t();return(0,s.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+x(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(l||(l={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(d||(d={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(p||(p={}));function b(e){return!!((0,s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function x(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function v(e,t){return G(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function k(e,t){const n=G(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function w(e,t){const n=G(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=I.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),o=a.length.toString().length+2,i=a.map(((e,t)=>s.util.rightPad((t+1).toString(),o)+e));let u=0;for(let s=0;s<i.length;s++)u=Math.max(i[s].length,u);const c=i.slice(0,r-1),l=i.slice(r-1,r),d=i.slice(r);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${s.util.rightPad(l[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const I=/ERROR: [0-9]+:([0-9]+):/g;function N(e){return G(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function S(e,t){if(y(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function T(e,t){if(y(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function _(e,t){const n=G(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function E(e,t){const n=G(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function C(){return 2===(0,s.env)().getNumber("WEBGL_VERSION")?1:4}function A(e){return G(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function $(e,t){const n=(0,s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function R(e){return G(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function F(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),y(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o))),y(e,(()=>e.enableVertexAttribArray(i))),!0)}function O(e,t,n){H(e,n),y(e,(()=>e.activeTexture(e.TEXTURE0+n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function D(e,t){H(e,t),y(e,(()=>e.activeTexture(e.TEXTURE0+t))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function M(e,t,n){return G(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function B(e,t,n){return e.getUniformLocation(t,n)}function P(e,t,n,r){y(e,(()=>O(e,t,r))),y(e,(()=>e.uniform1i(n,r)))}function L(e){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),y(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function V(e,t,n){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function W(e,t){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function z(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+U(e,t))}function U(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function G(e,t,n){const r=y(e,(()=>t()));if(null==r)throw new Error(n);return r}function H(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function j(e,t=2){return s.util.sizeFromShape(e.slice(0,e.length-t))}function q(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function X(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[j(e),...q(e)]),t}function K(e,t=!1){let n=(0,s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?s.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=s.util.squeezeShape(e);e=t.newShape}let r=s.util.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=j(e);let n=2,a=2;return e.length&&([n,a]=q(e)),r=t*(n/2)*(a/2),s.util.sizeToSquarishShape(r).map((e=>2*e))}return s.util.sizeToSquarishShape(r)}function Y(e){return e%2===0}function Q(e,t){if(e=e.slice(-2),t=t.slice(-2),s.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Y(n)&&Y(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Y(e[0])&&Y(t[0])}let Z,J;function ee(e){if(null==Z){const t=c(e);Z=t.getParameter(t.MAX_TEXTURE_SIZE)}return Z}function te(){Z=null}function ne(){J=null}function re(e){if(null==J){const t=c(e);J=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,J)}function ae(e){if(0===e)return 0;let t;const n=c(e);return t=se(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:se(n,"EXT_disjoint_timer_query")?1:0,t}function se(e,t){return null!=e.getExtension(t)}function oe(e){try{if(null!=c(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function ie(e){if(0===e)return!1;const t=c(e);if(1===e){if(!se(t,"OES_texture_float"))return!1}else if(!se(t,"EXT_color_buffer_float"))return!1;return ce(t)}function ue(e){if(0===e)return!1;const t=c(e);if(1!==e){if(se(t,"EXT_color_buffer_float"))return ce(t);const e="EXT_color_buffer_half_float";if(se(t,e)){const n=t.getExtension(e);return function(e,t){const n=g(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!se(t,"OES_texture_float"))return!1;if(!se(t,"WEBGL_color_buffer_float"))return!1;return ce(t)}function ce(e){const t=g(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function le(e){if(2!==e)return!1;return null!=c(e).fenceSync}function de(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const pe=(0,s.env)();pe.registerFlag("HAS_WEBGL",(()=>pe.getNumber("WEBGL_VERSION")>0)),pe.registerFlag("WEBGL_VERSION",(()=>oe(2)?2:oe(1)?1:0)),pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),pe.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===pe.get("WEBGL_VERSION"))),pe.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),pe.registerFlag("WEBGL_PACK",(()=>pe.getBool("HAS_WEBGL"))),pe.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_PACK_CLIP",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_PACK_REDUCE",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_LAZILY_UNPACK",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_CONV_IM2COL",(()=>pe.getBool("WEBGL_PACK"))),pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>ee(pe.getNumber("WEBGL_VERSION")))),pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>re(pe.getNumber("WEBGL_VERSION")))),pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=pe.getNumber("WEBGL_VERSION");return 0===e?0:ae(e)})),pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.device_util.isMobile())),pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ie(pe.getNumber("WEBGL_VERSION")))),pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!pe.getBool("WEBGL_FORCE_F16_TEXTURES")&&pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>ue(pe.getNumber("WEBGL_VERSION")))),pe.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>le(pe.getNumber("WEBGL_VERSION")))),pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),pe.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>s.device_util.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),pe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),pe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),pe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),pe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var he=n(29610),fe=n(55156);function me(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],o=a.shape;if(!s.util.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!s.util.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)}))}function ge(e){return(0,s.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var ye=n(38110);class be{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=l.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,he.A)();this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ye.Kn(["r","c","d"],e):ye.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class xe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=l.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,he.A)();this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ye.Kn(["r","c","d"],e):ye.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ve{constructor(e){this.variableNames=["A"],this.outTexUsage=d.DOWNLOAD;const t=(0,he.A)();this.outputShape=e,this.userCode=`\n      ${ye.ye}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ke{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=d.DOWNLOAD;const t=(0,he.A)();this.outputShape=e,this.userCode=`\n      ${ye.ye}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class we{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,he.A)();this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?ye.nc():ye.ku(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class Ie{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,he.A)();this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const a=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?ye.nc():ye.ku(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function Ne(e){const t=(0,he.A)();return k(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Se(e){return _(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Te(e){return E(e,new Uint16Array([0,1,2,2,1,3]))}function _e(e,t,n,r,a,o){$(t,n);const i=A(e),u=e.TEXTURE_2D;return y(e,(()=>e.bindTexture(u,i))),y(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),y(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,s.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texImage2D(u,0,r,t,n,0,a,o,null))):y(e,(()=>e.texStorage2D(u,1,r,t,n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function Ee(e){return e.internalFormatFloat}function Ce(e,t,n,r){const[a,s]=h(t,n);return _e(e,a,s,Ee(r),r.textureFormatFloat,e.FLOAT)}function Ae(e){return e.internalFormatHalfFloat}function $e(e,t,n,r){const[a,s]=h(t,n);return _e(e,a,s,Ae(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Re(e){return e.downloadTextureFormat}function Fe(e,t,n,r){const[a,s]=h(t,n);return _e(e,a,s,Re(r),e.RGBA,e.UNSIGNED_BYTE)}function Oe(e){return e.internalFormatPackedFloat}function De(e,t,n,r){const[a,s]=m(t,n);return _e(e,a,s,Oe(r),e.RGBA,e.FLOAT)}function Me(e){return e.internalFormatPackedHalfFloat}function Be(e,t,n,r){const[a,s]=m(t,n);return _e(e,a,s,Me(r),e.RGBA,r.textureTypeHalfFloat)}function Pe(e,t,n){y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return F(e,t,"clipSpacePos",n,3,20,0)&&F(e,t,"uv",n,2,20,12)}function Le(e,t,n,r,a,o){let i,u,c;y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),u=e.UNSIGNED_BYTE,c=e.RGBA):(i=new Float32Array(n*r*4),u=e.FLOAT,c=o.internalFormatPackedFloat),i.set(a),2===(0,s.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,u,i))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,r,0,e.RGBA,u,i))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Ve(e,t,n){y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,s.env)().getNumber("WEBGL_VERSION")?(y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))),e.flush()):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,s.env)().getNumber("WEBGL_VERSION")?(y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))),e.flush()):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function We(e,t,n,r){const a=e.createBuffer();y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return y(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function ze(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function Ue(e,t,n,r){const[a,s]=h(t,n),o=new Uint8Array(t*n*4);return y(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function Ge(e,t,n,r,a,s,o,i){const u=e,c=new Float32Array(function(e,t){const[n,r]=m(e,t);return n*r*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function He(e,t,n){const r=new Float32Array(t*n*4);return y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class je{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,s.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,u(t,e)):this.gl=c(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,s.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=v(this.gl,e),se(this.gl,t))this.textureHalfFloatExtension=v(this.gl,t);else if((0,s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),se(this.gl,r))this.colorBufferHalfFloatExtension=v(this.gl,r);else if((0,s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",se(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!se(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Se(this.gl),this.indexBuffer=Te(this.gl),this.framebuffer=R(this.gl),this.textureConfig=g(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;y(e,(()=>e.finish())),y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.deleteFramebuffer(this.framebuffer))),y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),y(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Ce(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),$e(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Fe(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Ve(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),Le(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Be(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),De(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(W(this.gl,this.framebuffer),this.outputTexture=null),y(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>Ue(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Ge(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return ze(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=We(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,s.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>He(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=Ne(t));const n=N(t);return y(t,(()=>t.attachShader(n,this.vertexShader))),y(t,(()=>t.attachShader(n,e))),S(t,n),this.debug&&T(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=Pe(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&y(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&T(this.gl,this.program),y(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?M(this.gl,e,t):B(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),y(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),P(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=m(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&T(this.gl,this.program),z(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),y(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),y(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=v(this.gl,2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await s.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||s.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),V(this.gl,e,this.framebuffer),this.debug&&z(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(V(this.gl,this.outputTexture,this.framebuffer),this.debug&&z(this.gl)):W(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;V(r,e,this.framebuffer),this.debug&&z(r),this.outputTexture=e,y(r,(()=>r.viewport(0,0,t,n))),y(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),y(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var qe=n(45226);const{addImpl:Xe,bincountImpl:Ke,bincountReduceImpl:Ye,ceilImpl:Qe,concatImpl:Ze,equalImpl:Je,expImpl:et,expm1Impl:tt,floorImpl:nt,gatherNdImpl:rt,gatherV2Impl:at,greaterImpl:st,greaterEqualImpl:ot,lessImpl:it,lessEqualImpl:ut,linSpaceImpl:ct,logImpl:lt,maxImpl:dt,maximumImpl:pt,minimumImpl:ht,multiplyImpl:ft,negImpl:mt,notEqualImpl:gt,prodImpl:yt,rangeImpl:bt,rsqrtImpl:xt,sigmoidImpl:vt,simpleAbsImpl:kt,sliceImpl:wt,sparseFillEmptyRowsImpl:It,sparseReshapeImpl:Nt,sparseSegmentReductionImpl:St,sqrtImpl:Tt,stridedSliceImpl:_t,stringNGramsImpl:Et,stringSplitImpl:Ct,stringToHashBucketFastImpl:At,subImpl:$t,tileImpl:Rt,topKImpl:Ft,transposeImpl:Ot,uniqueImpl:Dt}=qe;function Mt(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Bt(e,t){return 1===t?[e]:Mt(e,t)}class Pt{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ge(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Bt("rc",this.rank),t=(0,fe.kW)(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc),\n              rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1),\n              0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Lt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?ye.al(["r","c","d"],"inputShape"):ye.RW(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?ye.nc():ye.ku(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Vt{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=zt(t,n),a=Ut(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Wt(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let o;return r===p.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===p.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===p.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===p.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===p.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=zt(n,r),o=Ut(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=Wt(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,s.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[o],l=c.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Wt(e,t,n,r,a){const s=function(e,t){switch(e){case p.PACKED_2X2_FLOAT32:return Oe(t);case p.PACKED_2X2_FLOAT16:return Me(t);case p.UNPACKED_FLOAT32:return Ee(t);case p.UNPACKED_FLOAT16:return Ae(t);case p.PACKED_4X1_UNSIGNED_BYTE:return Re(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(a){const[t,n]=m(e[0],e[1]);o=t*n}else{const[t,n]=h(e[0],e[1]);o=t*n}return o*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s)}function zt(e,t){if(e===d.UPLOAD)return p.PACKED_2X2_FLOAT32;if(e===d.RENDER||null==e)return function(e){return(0,s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?p.PACKED_2X2_FLOAT32:p.UNPACKED_FLOAT32:e?p.PACKED_2X2_FLOAT16:p.UNPACKED_FLOAT16}(t);if(e===d.DOWNLOAD||e===d.PIXELS)return p.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Ut(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Gt{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Ht="return abs(x);";const jt="return x;";class qt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Xt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length);const t=e.length,n=Bt("rc",t),r=(0,fe.kW)(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const Kt=s.kernel_impls.whereImpl,Yt={};const Qt=(0,s.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Zt extends s.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=c((0,s.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,s.env)().getNumber("WEBGL_VERSION"))in Yt||(Yt[t]={}),Yt[t]),this.gpgpu=new je(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new Vt(this.gpgpu),this.numMBBeforeWarning=null==(0,s.env)().global.screen?1024:(0,s.env)().global.screen.height*(0,s.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.DataStorage(this,(0,s.engine)())}nextDataId(){return Zt.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,s.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:d.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if((0,s.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:d.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:o,shape:i,isPacked:u}=t;if(null!=o){let t;t=u?new qt(i,jt):new Gt(i,jt);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=s.util.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);d=s.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=s.util.now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:o,complexTensorInfos:i,isPacked:u}=t;if(null!=a){let t;t=u?new qt(r,jt):new Gt(r,jt);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,s.env)().getBool("DEBUG")&&!(0,s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,d=null;if("complex64"!==o&&(0,s.env)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);d=this.gpgpu.createBufferFromTexture(t.texture,...f(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=s.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)l=this.getValuesFromTexture(e);else{const e=s.util.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=d){const e=this.gpgpu.gl;y(e,(()=>e.deleteBuffer(d)))}const p=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,s.engine)().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>s.util.decodeString(e)))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!b(n)){if((0,s.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=s.util.sizeFromShape(t);if((0,s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...f(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const o=(0,s.env)().getBool("WEBGL_PACK")&&!0===r,i=o?X(t):t,u=o?new ke(i):new ve(i),c=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=s.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=s.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=s.util.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.util.now(),endMs:null}}endTimer(e){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=s.util.now(),e)}async getQueryTime(e){if((0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Qt){return(0,s.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&s.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){s.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Kt(e.shape,t)}packedUnaryOp(e,t,n){const r=new qt(e.shape,t),a=this.compileAndRun(r,[e],n);return(0,s.engine)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=kt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Ht,e.dtype);const t=new Gt(e.shape,Ht),n=this.compileAndRun(t,[e]);return(0,s.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&s.util.isString(n[0])){const a=n.map((e=>s.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,s.engine)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new Xt(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Pt(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[j(e.shape),...q(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[j(t),...q(t)],s=new Lt(a,n),o=[n],i=this.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=X(r);let o;const i=f(s);o=n?new xe(s):new be(s);const u=[i];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:s,dtype:a,dataId:e}],a,u,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===l.DENSE){const t=f(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===s.util.sizeFromShape(o.shape))return i.values=s.util.getTypedArrayFromDType(o.dtype,0),o;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&s.util.sizeFromShape(t.shape)<=(0,s.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Q(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const d={shape:o.shape,texData:i,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:i,uniformShape:u,keptDims:c}=fe.Tt(e.packedInputs,t.shape,o);let l="",d="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=s.util.computeStrides(u);p=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;const h=t.shape.length,f=2===u.length&&s.util.arraysEqual(t.shape,o),m=1===s.util.sizeFromShape(t.shape),g=s.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&h===n.shape.length&&s.util.arraysEqual(o,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${o[0]>1}_${o[1]>1}`;r+=`${h}_${y}_${i?c:""}_${u.length}_${m}_${g}_${f}_${l}_${d}_${p}_${b}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let o=e.constructor.name;return o+="_"+r+"_"+a+`${(0,s.env)().getNumber("WEBGL_VERSION")}`,o}(e,c,d),h=this.getAndSaveBinary(p,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),o=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=fe.Vm(a,i,t),c=w(e.gl,u),l=e.createProgram(c);let d=null;const p=e.getUniformLocation(l,"NAN",!1);1===(0,s.env)().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(l,"INFINITY",!1));const h=!1,f={},m={},g={};for(let s=0;s<t.variableNames.length;s++){const n=t.variableNames[s];f[n]=e.getUniformLocation(l,n,h),f[`offset${n}`]=e.getUniformLocation(l,`offset${n}`,h),t.enableShapeUniforms&&(m[`${n}Shape`]=e.getUniformLocation(l,`${n}Shape`,h),g[`${n}TexShape`]=e.getUniformLocation(l,`${n}TexShape`,h))}let y,b,x;t.enableShapeUniforms&&(y=e.getUniformLocation(l,"outShape",h),x=e.getUniformLocation(l,"outShapeStrides",h),b=e.getUniformLocation(l,"outTexShape",h));const v=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{v[n]=e.getUniformLocation(l,t.name,h)})),{program:t,fragmentShader:c,source:u,webGLProgram:l,uniformLocations:f,customUniformLocations:v,inShapeInfos:o,outShapeInfo:i,infLoc:d,nanLoc:p,inShapesLocations:m,inTexShapesLocations:g,outShapeLocation:y,outShapeStridesLocation:x,outTexShapeLocation:b}}(this.gpgpu,e,c,d))),m=null!=this.activeTimers;let g;m&&(g=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(me(t.inShapeInfos,n),me([t.outShapeInfo],[r]));const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o,i[0],i[1]):e.setOutputMatrixTexture(o,i[0],i[1]),e.setProgram(t.webGLProgram),1===(0,s.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],o=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],u=t.inShapesLocations[`${a}Shape`],c=t.inTexShapesLocations[`${a}TexShape`];if(u){const{uniformShape:r}=fe.Tt(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(c&&e.gl.uniform2i(c,n.texData.texShape[0],n.texData.texShape[1]),null!=o)if(n.isUniform)if(s.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(o,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,o,r)}));const u=t.outShapeLocation;if(u)switch(r.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=s.util.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],o=a[r];if("float"===n.type)e.gl.uniform1fv(s,o);else if("vec2"===n.type)e.gl.uniform2fv(s,o);else if("vec3"===n.type)e.gl.uniform3fv(s,o);else if("vec4"===n.type)e.gl.uniform4fv(s,o);else if("int"===n.type)e.gl.uniform1iv(s,o);else if("ivec2"===n.type)e.gl.uniform2iv(s,o);else if("ivec3"===n.type)e.gl.uniform3iv(s,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,o)}})),e.executeProgram()}(this.gpgpu,h,c,d,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=(0,s.env)().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const e=s.util.now();e-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,s.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,s.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.tidy)((()=>{if(!(0,s.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,s.env)().getBool("DEBUG");(0,s.env)().set("DEBUG",!1);const t=this.abs((0,s.scalar)(1e-8)).dataSync()[0];if((0,s.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:o,usage:i,isPacked:u}=t;if(null!=o)return;const c=null!=this.activeTimers;let l;c&&(l=s.util.now());let p=t.texShape;if(null==p&&(p=K(n,u),t.texShape=p),null!=a){const e=X(n);let o,i=p[1],h=p[0];const f=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!u&&f||([i,h]=m(p[0],p[1])),o=u?new Ie(e,f):new we(e,f);const g=f?[h,i]:p,y=this.makeTensorInfo(g,r),b=this.texData.get(y.dataId);b.usage=f?d.PIXELS:d.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),i,h,a);const x=[[h,i]],v=!0,k=this.runWebGLProgram(o,[y],r,x,v),w=this.texData.get(k.dataId);t.texture=w.texture,t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(k.dataId),t.values=null,c&&(this.uploadWaitMs+=s.util.now()-l)}else{const e=this.acquireTexture(p,i,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*s.util.bytesPerElement(t)}}Zt.nextDataId=0;const Jt="3.12.0";function en(){(0,s.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}s.device_util.isBrowser()&&(0,s.registerBackend)("webgl",(()=>new Zt),2);const tn={forceHalfFloat:en};class nn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ge(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class rn{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=ge(a);let o="";if(r)if(0===a||1===s.util.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(o=`\n          ${(0,fe.kW)(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Bt("coords",a);this.enableShapeUniforms?o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function an(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const sn={kernelName:s.Identity,backendName:"webgl",kernelFunc:an};function on(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=an({inputs:{x:r},backend:n}),u=an({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const un={kernelName:s.Complex,backendName:"webgl",kernelFunc:on},cn="return (a < 0.) ? b * a : a;",ln="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const dn={kernelName:s.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:o}=r,i=n.makeTensorInfo([],"float32",s.util.createScalarValue(o,"float32")),u=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rn(ln,a.shape,i.shape):new nn(cn,a.shape,i.shape),c=n.runWebGLProgram(u,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),c}},pn="return (a < 0.) ? b * a : a;",hn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const fn={kernelName:s.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rn(hn,r.shape,a.shape):new nn(pn,r.shape,a.shape);return n.runWebGLProgram(o,[r,a],"float32")}};function mn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:o})=>{const{x:i}=a,u=o,c=r||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=n){const e=u.texData.get(i.dataId),t=n(e.values,c);return u.makeTensorInfo(i.shape,c,t)}let l;return l=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new qt(i.shape,t):new Gt(i.shape,e),u.runWebGLProgram(l,[i],c)}}function gn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:o}){return({inputs:i,backend:u})=>{const{a:c,b:l}=i,d=u;if(r&&"complex64"===c.dtype){const t=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:c.shape},o={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new nn(e,c.shape,l.shape);return d.runWebGLProgram(i,[a,o],(0,s.upcastType)(n.dtype,r.dtype))})),o=on({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),o}const p=o||(0,s.upcastType)(c.dtype,l.dtype);if(("string"===c.dtype||"string"===l.dtype||d.shouldExecuteOnCPU([c,l]))&&null!=a){const e=d.texData.get(c.dataId).values,t=d.texData.get(l.dataId).values,n="string"===c.dtype?s.backend_util.fromUint8ToStringArray(e):e,r="string"===c.dtype?s.backend_util.fromUint8ToStringArray(t):t,[o,i]=a(c.shape,l.shape,n,r,p),u=d.makeTensorInfo(i,p);return d.texData.get(u.dataId).values=o,u}let h;return h=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new rn(t,c.shape,l.shape,n):new nn(e,c.shape,l.shape),d.runWebGLProgram(h,[c,l],p)}}function yn(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?hn:pn;if("leakyrelu"===e)return t?ln:cn;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class bn{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ge(this.outputShape.length);const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const xn="return areal * breal - aimag * bimag;",vn="return areal * bimag + aimag * breal;";class kn{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const wn="return a * b;";function In(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,o=s.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new kn(xn,r.shape,a.shape),o=new kn(vn,r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,i,"float32"),c=n.runWebGLProgram(o,i,"float32"),l=on({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,i]=ft(r.shape,a.shape,e.values,t.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=s,u}let i;return i=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rn(wn,r.shape,a.shape):new nn(wn,r.shape,a.shape),n.runWebGLProgram(i,[r,a],o)}const Nn={kernelName:s.Multiply,backendName:"webgl",kernelFunc:In};function Sn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:o}=r,i=n,u=s.util.sizeFromShape(a.shape),c=s.util.inferFromImplicitShape(o,u),l=s.util.sizeFromShape(c);s.util.assert(u===l,(()=>`The new shape (${c}) has ${l} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const d=i.texData.get(a.dataId);return!d.isPacked||Q(a.shape,c)||null!==d.texture&&Q(d.shape,c)?(i.incRef(a.dataId),{dataId:a.dataId,shape:c,dtype:a.dtype}):function(e,t,n){const r=[j(e.shape),...q(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[j(t),...q(t)],o=new Lt(s,r),i=[r],u=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,c,i)}const Tn={kernelName:s.Reshape,backendName:"webgl",kernelFunc:Sn};class _n{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c=`sumValue += dot(values * ${s.util.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class En{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Cn(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=s.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let o=e;for(let s=0;s<a.length;s++){const{inSize:i,windowSize:u,outSize:c}=a[s];let l,d;l="mean"===n?0===s?new _n({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new _n({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):new En({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),d=o,o=r.runWebGLProgram(l,[o],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return o}class An{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=(0,fe.kW)(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class $n{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=(0,fe.kW)(this.rank),a=Mt("rc",this.rank),s=new Array(this.rank);for(let c=0;c<t.length;c++)s[t[c]]=a[c];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Rn(e,t,n){const r=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $n(e.shape,t):new An(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Fn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r;return function(e,t,n,r){const a=t,o=e.shape.length,i=s.util.parseAxisParam(a,e.shape);let u=i;const c=s.backend_util.getAxesPermutation(u,o),l=null!=c;let d=e;l&&(d=Rn(e,c,r),u=s.backend_util.getInnerMostAxes(u.length,o)),s.backend_util.assertAxesAreInnerMostDims("sum",u,o);const[p,h]=s.backend_util.computeOutAndReduceShapes(d.shape,u);let f=p;n&&(f=s.backend_util.expandShapeToKeepDim(p,i));const m=s.util.sizeFromShape(h),g=Sn({inputs:{x:d},attrs:{shape:[s.util.sizeFromShape(e.shape)/m,m]},backend:r}),y=Cn(g,(0,s.sumOutType)(e.dtype),"sum",r),b=Sn({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),l&&r.disposeIntermediateTensorInfo(d),b}(a,o,i,n)}const On={kernelName:s.Sum,backendName:"webgl",kernelFunc:Fn};function Dn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=a.shape[s[l]];let c;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=Ot(e,a.shape,a.dtype,s,u);c=o.makeTensorInfo(u,a.dtype);o.texData.get(c.dataId).values=t}else c=Rn(a,s,o);return c}const Mn={kernelName:s.Transpose,backendName:"webgl",kernelFunc:Dn};function Bn({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:c=null}){const l=e.shape.length,d=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],h=r?t.shape[d-1]:t.shape[d-2],f=n?e.shape[l-1]:e.shape[l-2],m=r?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=s.util.sizeFromShape(g),x=s.util.sizeFromShape(y),v=s.broadcast_util.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);s.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[b,p,f]:[b,f,p],w=r?[x,m,h]:[x,h,m],I=Sn({inputs:{x:e},backend:a,attrs:{shape:k}}),N=Sn({inputs:{x:t},backend:a,attrs:{shape:w}}),S=[I,N],T=Math.max(b,x),_=n?I.shape[1]:I.shape[2],E=null!=o,C=null!=i,A="leakyrelu"===c,$=null!=c?yn(c,!0):null;let R;if((1===f||1===m)&&_>1e3&&!1===(E||C||A||null!=$)){let e=I,t=N;n&&(e=Dn({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=Dn({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const s=1===m;let o=e;1!==m&&(o=Sn({inputs:{x:e},backend:a,attrs:{shape:[T,_,1]}}),S.push(o));const i=1===m?2:1;let u=t;s&&(u=Sn({inputs:{x:t},backend:a,attrs:{shape:[T,1,_]}}),S.push(u));const c=In({inputs:{a:o,b:u},backend:a});R=Fn({inputs:{x:c},backend:a,attrs:{axis:i,keepDims:!0}}),S.push(c)}else{const c=(0,s.upcastType)(e.dtype,t.dtype),l=new bn(k,w,[T,f,m],n,r,E,$,C,A),d=[I,N];if(null!=o&&d.push(o),C&&d.push(i),A){const e=a.makeTensorInfo([],"float32",s.util.createScalarValue(u,"float32"));d.push(e),S.push(e)}R=a.runWebGLProgram(l,d,c)}const F=Sn({inputs:{x:R},backend:a,attrs:{shape:v}});S.push(R);for(const s of S)a.disposeIntermediateTensorInfo(s);return F}const Pn={kernelName:s._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return Bn({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}},Ln="return abs(x);";const Vn={kernelName:s.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=kt(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qt(r.shape,Ln):new Gt(r.shape,Ln),n.runWebGLProgram(a,[r],r.dtype)}},Wn=mn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),zn={kernelName:s.Acos,backendName:"webgl",kernelFunc:Wn},Un=mn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Gn={kernelName:s.Acosh,backendName:"webgl",kernelFunc:Un},Hn="return a + b;",jn=gn({opSnippet:Hn,packedOpSnippet:Hn,supportsComplex:!0,cpuKernelImpl:Xe}),qn={kernelName:s.Add,backendName:"webgl",kernelFunc:jn};class Xn{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Kn{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Yn={kernelName:s.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return an({inputs:{x:a[0]},backend:r});if(a.length>(0,s.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const o=a.map((e=>e.dtype)).reduce(((e,t)=>(0,s.upcastType)(e,t))),i=a.map((e=>e.shape)),u=(0,s.env)().getBool("WEBGL_PACK")?new Kn(a[0].shape,i):new Xn(a[0].shape,i);return r.runWebGLProgram(u,a,o)}};const Qn={kernelName:s.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=a.shape.length,c=s.util.parseAxisParam(o,a.shape);let l=c;const d=s.backend_util.getAxesPermutation(l,u);let p=a;null!=d&&(p=Dn({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s.backend_util.getInnerMostAxes(l.length,u)),s.backend_util.assertAxesAreInnerMostDims("all",l,u);const[h,f]=s.backend_util.computeOutAndReduceShapes(p.shape,l),m=Sn({inputs:{x:p},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=Cn(m,m.dtype,"all",n);let y;if(i){y=Sn({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,c)}})}else y=Sn({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}};const Zn={kernelName:s.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=a.shape.length,c=s.util.parseAxisParam(o,a.shape);let l=c;const d=s.backend_util.getAxesPermutation(l,u);let p=a;null!=d&&(p=Dn({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s.backend_util.getInnerMostAxes(l.length,u)),s.backend_util.assertAxesAreInnerMostDims("any",l,u);const[h,f]=s.backend_util.computeOutAndReduceShapes(p.shape,l),m=Sn({inputs:{x:p},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=Cn(m,m.dtype,"any",n);let y;if(i){y=Sn({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,c)}})}else y=Sn({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}};class Jn{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class er{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],o=Math.ceil(a/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=(0,fe.kW)(u),l=Bt("coords",u);let d,p;if(1===o){p=u+1;const e=(0,fe.kW)(p);d=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[u-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[u-2]};`}else p=u,d=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map((e=>"int "+e)),g=Bt("sourceLocR",p-1).concat("inIdx.r"),y=Bt("sourceLocG",p-1).concat("inIdx.g"),b=Bt("sourceLocB",p-1).concat("inIdx.b"),x=Bt("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",k=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function tr(e,t,n,r=null){let a=t.shape[0],o=t.shape[1];null!=r&&(a=r.shape[0],o=r.shape[1]);const i=s.backend_util.computeOptimalWindowSize(o),u={windowSize:i,inSize:o,batchSize:a,outSize:Math.ceil(o/i)},c=new Jn(u,n,null==r),l=[t];null!=r&&l.push(r);const d=e.runWebGLProgram(c,l,"int32");if(1===d.shape[1])return d;const p=tr(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function nr(e,t,n,r=null){const a=null!=r?r.shape:t.shape,o=a[a.length-1],i=s.backend_util.computeOptimalWindowSize(o),u=new er(a,i,n,null==r),c=null==r?[t]:[t,r],l=e.runWebGLProgram(u,c,"int32");if(l.shape.length===t.shape.length){const r=nr(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function rr(e,t,n,r){const a=[n];if(s.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!(0,s.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let i=t;null!==o&&o.isPacked&&(i=e.unpackTensor(t),n.push(i));const[u,c]=s.backend_util.computeOutAndReduceShapes(i.shape,a),l=s.util.sizeFromShape(c),d=Sn({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(d);const p=tr(e,d,r);n.push(p);const h=Sn({inputs:{x:p},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return nr(e,t,r)}const ar={kernelName:s.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let i=s.util.parseAxisParam(o,a.shape);const u=s.backend_util.getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=Dn({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=s.backend_util.getInnerMostAxes(i.length,c.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],c.shape.length);const d=rr(n,c,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const sr={kernelName:s.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let i=s.util.parseAxisParam(o,a.shape);const u=s.backend_util.getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=Dn({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=s.backend_util.getInnerMostAxes(i.length,c.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],c.shape.length);const d=rr(n,c,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},or=mn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ir={kernelName:s.Asin,backendName:"webgl",kernelFunc:or},ur=mn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),cr={kernelName:s.Asinh,backendName:"webgl",kernelFunc:ur},lr=mn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),dr={kernelName:s.Atan,backendName:"webgl",kernelFunc:lr},pr=gn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),hr={kernelName:s.Atan2,backendName:"webgl",kernelFunc:pr},fr=mn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),mr={kernelName:s.Atanh,backendName:"webgl",kernelFunc:fr};class gr{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class yr{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const k=4*Math.floor(s/4),w=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const br={kernelName:s.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;de(a,"avgPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=s.backend_util.computePool2DInfo(a.shape,o,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&s.util.arraysEqual(l.inShape,l.outShape))return an({inputs:{x:a},backend:n});const d=new gr(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};const xr={kernelName:s.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c,dataFormat:l}=r,d=s.backend_util.computePool3DInfo(a.shape,o,i,[1,1,1],u,c,l),p=new yr(d,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class vr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wr={kernelName:s.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,p=s.backend_util.computePool3DInfo(i.shape,u,c,[1,1,1],l,d),h=new kr(p);return n.runWebGLProgram(h,[a],i.dtype)}};const Ir={kernelName:s.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o;de([a,o],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=r,d=s.backend_util.computePool2DInfo(i.shape,u,c,1,l),p=new vr(d);return n.runWebGLProgram(p,[a],i.dtype)}};const Nr={kernelName:s.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:o,transposeB:i}=r;return Bn({a:a,b:s,transposeA:o,transposeB:i,backend:n})}};class Sr{constructor(e,t,n,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(e,t),s.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(s.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=a&&(s.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Tr{constructor(e,t,n,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(e,t),s.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(s.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(s.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const _r={kernelName:s.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:o,offset:i,scale:u}=e;s.util.assert(a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.util.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.util.assert(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[r,a,o];let d=null;null!=i&&(d=i.shape,l.push(i));let p=null;null!=u&&(p=u.shape,l.push(u));const h=(0,s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Tr(r.shape,a.shape,o.shape,d,p,c):new Sr(r.shape,a.shape,o.shape,d,p,c);return t.runWebGLProgram(h,l,l[0].dtype)}};class Er{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=(0,fe.kW)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Cr.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Cr[t]} = start[${t}] + coords.${Cr[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Cr=["x","y","z","w","u","v"];class Ar{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=(0,fe.kW)(this.rank),n=Bt("coords",this.rank),r=Bt("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function $r(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,size:i}=r,[u,c]=s.slice_util.parseSliceParams(a,o,i);if(s.slice_util.assertParamsValid(a,u,c),0===s.util.sizeFromShape(c))return n.makeTensorInfo(c,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=wt(e.values,u,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),d=s.slice_util.isSliceContinous(a.shape,u,c);if(l||!d){const e=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ar(c):new Er(c),t=[u];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),o=r.makeTensorInfo(n,e.dtype),i=r.texData.get(o.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let u=s.slice_util.computeFlatOffset(t,s.util.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),i.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const c=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,c+1),o}(a,u,c,n)}const Rr={kernelName:s.Slice,backendName:"webgl",kernelFunc:$r},Fr={kernelName:s.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,crops:i}=r;s.util.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),c=s.backend_util.getReshaped(a.shape,o,u),l=s.backend_util.getPermuted(c.length,o.length),d=s.backend_util.getReshapedPermuted(a.shape,o,u),p=s.backend_util.getSliceBeginCoords(i,o.length),h=s.backend_util.getSliceSize(d,i,o.length),f=[],m=Sn({inputs:{x:a},backend:n,attrs:{shape:c}}),g=Dn({inputs:{x:m},backend:n,attrs:{perm:l}}),y=Sn({inputs:{x:g},backend:n,attrs:{shape:d}}),b=$r({inputs:{x:y},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const Or={kernelName:s.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),u=n.readSync(s.dataId),c=Ke(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,c)}};const Dr={kernelName:s.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=s.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},Mr=gn({opSnippet:"return float(a != b);",cpuKernelImpl:gt,dtype:"bool"}),Br={kernelName:s.NotEqual,backendName:"webgl",kernelFunc:Mr};function Pr(e){const{inputs:t,backend:n}=e,{input:r}=t;return an({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Lr={kernelName:s.Real,backendName:"webgl",kernelFunc:Pr};const Vr={kernelName:s.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:o}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===o.dtype)return an({inputs:{x:o},backend:r});const t=s.zeros(o.shape),n=e({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),a=on({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===o.dtype){const t=Pr({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!s.util.hasEncodingLoss(o.dtype,i)){const e=an({inputs:{x:o},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new Gt(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",s.util.getTypedArrayFromDType("bool",1)),t=Mr({inputs:{a:o,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}},Wr="return ceil(x);",zr=mn({opSnippet:Wr,packedOpSnippet:Wr,cpuKernelImpl:Qe}),Ur={kernelName:s.Ceil,backendName:"webgl",kernelFunc:zr};class Gr{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Hr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const jr={kernelName:s.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:o,clipValueMax:i}=r;let u;u=(0,s.env)().getBool("WEBGL_PACK_CLIP")?new Hr(a.shape):new Gr(a.shape);const c=[[o],[i]];return n.runWebGLProgram(u,[a],a.dtype,c)}};class qr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Xr(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Kr={kernelName:s.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new qr(r.shape),o=[Xr(r,a.complexTensorInfos.real),Xr(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class Yr{constructor(e){this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){const e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Qr{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=(0,fe.kW)(r),o=Bt("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let s=1;s<u.length;s++)u[s]=u[s-1]+e[s][t];const c=i[t],l=i.slice(-2),d=i.join();let p=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let s=1;s<u.length;s++){const e=u[s-1];p+=`\n        if (${c} < ${u[s]}  && ${c} >= ${u[s-1]}) {\n          return getChannel(\n            getT${s}(${Zr(i,c,e)}),\n            vec2(${Zr(l,c,e)}));\n        }`}const h=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${h}(${Zr(i,c,f)}),\n          vec2(${Zr(l,c,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function Zr(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Jr(e){const{inputs:t,backend:n}=e,{input:r}=t;return an({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const ea={kernelName:s.Imag,backendName:"webgl",kernelFunc:Jr};function ta(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Pr({inputs:{input:e},backend:n}))),a=e.map((e=>Jr({inputs:{input:e},backend:n}))),s=ta(r,t,n),o=ta(a,t,n),i=on({inputs:{real:s,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=s.util.sizeFromShape(e.shape.slice(t));return Sn({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),o=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=s.backend_util.computeOutShape(a.map((e=>e.shape)),1),u=1===a[0].shape[0],c=Ze(o,i,r,u),l=s.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(l,r,c);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>(0,s.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=ta(e.slice(0,r),t,n),s=ta(e.slice(r),t,n),o=ta([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}if((0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new Qr(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:o,outShape:i}=function(e,t,n){const r=s.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Sn({inputs:{x:e},attrs:{shape:[-1,s.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),u=new Yr(o.map((e=>e.shape))),c=n.runWebGLProgram(u,o,r);o.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=Sn({inputs:{x:c},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(c),l}function na(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,o=s.util.parseAxisParam(a,t[0].shape)[0],i=s.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===s.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>s.util.sizeFromShape(e.shape)>0));if(1===u.length)return an({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));return s.backend_util.assertParamsConsistent(c,o),ta(u,o,n)}const ra={kernelName:s.Concat,backendName:"webgl",kernelFunc:na};class aa{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${k}\n        ${v}\n        setOutput(result);\n      }\n    `}}class sa{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oa{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ge(this.outputShape.length);const{dataFormat:n}=t,r=(0,he.A)(),a="channelsLast"===n,s=a?0:1,o=a?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let c=0;c<=1;c++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.y + ${e};\n          pos = rc.x + ${c};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*c+e}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*c+e}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function ia({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const c=e.shape,l=r.texData.get(e.dataId),d=n.inChannels,p=c[0]*c[1]*c[2],h=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if(!((1===p||1===h)&&d>1e3)&&l.isPacked&&f&&null!=l.texture&&c[2]%2!==0&&s.util.arraysEqual(l.shape.slice(-3),c.slice(-3))){const d=c[0]*c[1]*(c[2]+1),p={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,s.util.assert(Q(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const f=Sn({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const y=Bn({a:p,b:f,backend:r,transposeA:false,transposeB:false,bias:a,activation:u,preluActivationWeights:o,leakyreluAlpha:i}),b=r.texData.get(y.dataId);s.util.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=h,b.shape=n.outShape,m=an({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const s=Sn({inputs:{x:e},backend:r,attrs:{shape:[1,f?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],n.inChannels]}}),l=Sn({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Bn({a:s,b:l,transposeA:false,transposeB:false,backend:r,bias:a,activation:u,preluActivationWeights:o,leakyreluAlpha:i});m=Sn({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),g.push(s),g.push(l),g.push(d)}for(const s of g)r.disposeIntermediateTensorInfo(s);return m}function ua({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,g=c*l*d,y=h*p,b=[g,y],x=[],v=Sn({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),k=Sn({inputs:{x:t},backend:r,attrs:{shape:[1,g,s.util.sizeFromShape(t.shape)/g]}});x.push(v),x.push(k);const w=new oa(b,n),I=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],N=r.runWebGLProgram(w,[v],"float32",I),S=Sn({inputs:{x:N},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(N),x.push(S);const T=null!=a,_=null!=o,E="leakyrelu"===u,C=u?yn(u,!0):null,A=new bn(S.shape,k.shape,[1,y,n.outChannels],!0,!1,T,C,_,E),$=[S,k];if(a&&$.push(a),_&&$.push(o),E){const e=r.makeTensorInfo([],"float32",s.util.createScalarValue(i,"float32"));$.push(e),x.push(e)}const R=r.runWebGLProgram(A,$,"float32"),F=Sn({inputs:{x:R},backend:r,attrs:{shape:m?[1,h,p,n.outChannels]:[1,n.outChannels,h,p]}});x.push(R);for(const s of x)r.disposeIntermediateTensorInfo(s);return F}const ca={kernelName:s.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=r,p=s.backend_util.convertConv2DDataFormat(c),h=s.backend_util.computeConv2DInfo(a.shape,o.shape,i,l,u,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if((0,s.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=ua({x:a,filter:o,convInfo:h,backend:n});else{const e=new aa(h);f=n.runWebGLProgram(e,[a,o],"float32")}else f=ia({x:a,filter:o,convInfo:h,backend:n});const m=Sn({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class la{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class da{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pa{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ha{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fa={kernelName:s.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=r,p=s.backend_util.convertConv2DDataFormat(c),h=s.backend_util.computeConv2DInfo(a.shape,d,i,1,u,l,!1,p),f=new la(h);return n.runWebGLProgram(f,[a,o],"float32")}};const ma={kernelName:s.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{inputShape:i,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=r,p=s.backend_util.convertConv2DDataFormat(l),h=s.backend_util.computeConv2DInfo(i,o.shape,u,1,c,d,!1,p),f=new da(h);return n.runWebGLProgram(f,[a,o],"float32")}};const ga={kernelName:s.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dilations:c}=r,l=s.backend_util.computeConv3DInfo(a.shape,o.shape,i,c,u),d=new sa(l);return n.runWebGLProgram(d,[a,o],"float32")}};const ya={kernelName:s.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:u,filterShape:c}=r,l=s.backend_util.computeConv3DInfo(a.shape,c,i,1,u),d=new pa(l);return n.runWebGLProgram(d,[a,o],"float32")}};const ba={kernelName:s.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{pad:i,strides:u,inputShape:c}=r,l=s.backend_util.computeConv3DInfo(c,o.shape,u,1,i),d=new ha(l);return n.runWebGLProgram(d,[a,o],"float32")}},xa=mn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),va={kernelName:s.Cos,backendName:"webgl",kernelFunc:xa},ka=mn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),wa={kernelName:s.Cosh,backendName:"webgl",kernelFunc:ka};class Ia{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const p="bilinear"===r?1:0,[h,f]=[o-1+".0",i-1+".0"],[m,g,y]=l>1?[""+(o-1)/(l-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,v]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Na={kernelName:s.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=r,l=new Ia(a.shape,s.shape,i,u,c);return n.runWebGLProgram(l,[a,s,o],"float32")}};class Sa{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Ta(r,"coords")})`,s=e[e.length-1];let o="",i="";t?(o=n?"end != "+(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${s}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${(0,fe.kW)(r)} coords = getOutputCoords();\n        int end = ${_a(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${_a(r,"coords")} = idx;\n          val += getX(${Ta(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Ta(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function _a(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Ea={kernelName:s.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,exclusive:i,reverse:u}=r,c=a.shape.length,l=s.backend_util.getAxesPermutation([o],c);let d=a;null!=l&&(d=Dn({inputs:{x:a},backend:n,attrs:{perm:l}}));const p=s.backend_util.getInnerMostAxes(1,c)[0];if(p!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${o}`);const h=d.shape[p];let f=an({inputs:{x:d},backend:n});for(let s=0;s<=Math.ceil(Math.log2(h))-1;s++){const e=new Sa(d.shape,!1,u),t=[[s]],r=f;f=n.runWebGLProgram(e,[f],f.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new Sa(d.shape,i,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=Dn({inputs:{x:f},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),e}return f}};const Ca={kernelName:s.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Ke(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Ye(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Aa{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const $a={kernelName:s.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r,i=a.shape[0],u=("NHWC"===o?a.shape[1]:a.shape[2])*s,c=("NHWC"===o?a.shape[2]:a.shape[3])*s,l=("NHWC"===o?a.shape[3]:a.shape[1])/(s*s),d=new Aa("NHWC"===o?[i,u,c,l]:[i,l,u,c],s,o);return n.runWebGLProgram(d,[a],a.dtype)}};class Ra{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ge(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",c="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${l}\n        ${c}\n        setOutput(result);\n      }\n    `}}class Fa{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ge(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,p=d;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<d;s++)h+=`\n          vec4 xTexelC${2*s};\n          int xTexelC${2*s}Ready;\n          vec4 xTexelC${2*s+1};\n          int xTexelC${2*s+1}Ready;\n          vec4 xC${s};`;h+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let s=0;s<d;s++)h+=`\n          xTexelC${2*s} = vec4(0.0);\n          xTexelC${2*s}Ready = 0;\n          xTexelC${2*s+1} = vec4(0.0);\n          xTexelC${2*s+1}Ready = 0;\n          xC${s} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(p+1)/2;y++){const e=2*y;if(h+=`\n          xC = xCCorner + ${e*c};\n          `,1===u){if(e<d&&(i%2===1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,h+=1===c&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<d)){const t=i%2===0?s.util.nearestLargerEven(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,c>1&&(h+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${e}Ready = 1;\n                    }\n                    `),h+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                  `):h+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<d&&(i%2===1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<d&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<d&&(h+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<d&&(h+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<d&&(h+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const Oa={kernelName:s.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dilations:c,dimRoundingMode:l}=r;let d=c;null==d&&(d=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=s.backend_util.computeConv2DInfo(a.shape,o.shape,i,d,u,l,!0);let h;h=(0,s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new Fa(p):new Ra(p);const f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[a,o],"float32",f)}};class Da{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ma{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ba={kernelName:s.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=r,p=s.backend_util.computeConv2DInfo(a.shape,d,i,u,c,l,!0),h=new Da(p);return n.runWebGLProgram(h,[a,o],"float32")}};const Pa={kernelName:s.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=r,p=s.backend_util.computeConv2DInfo(d,o.shape,i,u,c,l,!0),h=new Ma(p);return n.runWebGLProgram(h,[a,o],"float32")}};class La{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Va={kernelName:s.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],o=s.util.sizeFromShape(r.shape),i=Sn({inputs:{x:r},backend:n,attrs:{shape:[o]}}),u=new La(o),c=n.runWebGLProgram(u,[i],i.dtype),l=Sn({inputs:{x:c},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}};class Wa{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const za={kernelName:s.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dilations:c}=r,l=s.backend_util.computeDilation2DInfo(a.shape,o.shape,i,u,"NHWC",c);let d;const p=new Wa(l);d=n.runWebGLProgram(p,[a,o],"float32");const h=Sn({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),h}};const Ua={kernelName:s.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,o=t,{allDims:i,summedDims:u,idDims:c}=s.backend_util.decodeEinsumEquation(a,o.length);s.backend_util.checkEinsumDimSizes(i.length,c,o);const{path:l,steps:d}=s.backend_util.getEinsumComputePath(u,c),p=d.length;let h=null,f=i.length;const m=[];for(let g=0;g<p;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:r}=s.backend_util.getEinsumPermutation(f,c[e]);let a;s.backend_util.isIdentityPermutation(t)?a=o[e]:(a=Dn({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);s.util.arraysEqual(a.shape,i)||(a=Sn({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===h?h=a:(h=In({inputs:{a:a,b:h},backend:n}),m.push(h))}g<p-1&&(l[g]>=0&&(h=Fn({inputs:{x:h},backend:n,attrs:{axis:l[g]-(i.length-f),keepDims:!1}}),m.push(h)),f--)}for(const s of m)s!==h&&n.disposeIntermediateTensorInfo(s);return h}},Ga=mn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ha={kernelName:s.Elu,backendName:"webgl",kernelFunc:Ga},ja={kernelName:s.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new nn("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)}},qa=gn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Je}),Xa={kernelName:s.Equal,backendName:"webgl",kernelFunc:qa},Ka=mn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.backend_util.ERF_P};\n  float a1 = ${s.backend_util.ERF_A1};\n  float a2 = ${s.backend_util.ERF_A2};\n  float a3 = ${s.backend_util.ERF_A3};\n  float a4 = ${s.backend_util.ERF_A4};\n  float a5 = ${s.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Ya={kernelName:s.Erf,backendName:"webgl",kernelFunc:Ka},Qa="return exp(x);",Za=mn({opSnippet:Qa,packedOpSnippet:Qa,cpuKernelImpl:et,dtype:"float32"}),Ja={kernelName:s.Exp,backendName:"webgl",kernelFunc:Za};function es(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:o}=t,i=o.shape.length,u=o.shape.slice();let c=a;return a<0&&(s.util.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),c=i+a+1),u.splice(c,0,1),Sn({inputs:{x:o},backend:r,attrs:{shape:u}})}const ts={kernelName:s.ExpandDims,backendName:"webgl",kernelFunc:es},ns="return exp(x) - 1.0;",rs=mn({opSnippet:ns,packedOpSnippet:ns,cpuKernelImpl:tt}),as={kernelName:s.Expm1,backendName:"webgl",kernelFunc:rs};class ss{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function os(e,t,n){const r=n.texData.get(e.dataId),a=s.util.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=Sn({inputs:{x:e},backend:n,attrs:{shape:[a/o,o]}}),u=i.shape,c=new ss("real",u,t),l=new ss("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=on({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=Sn({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const is={kernelName:s.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return os(r,!1,n)}};class us{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function cs(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:o}=n;if(o=o||s.util.inferDtype(a),"string"===o){const e=s.util.getArrayFromDType(o,s.util.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,o,e)}{const e=new us(r,a),n=[[a]];return t.runWebGLProgram(e,[],o,n)}}const ls={kernelName:s.Fill,backendName:"webgl",kernelFunc:cs};class ds{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ps={kernelName:s.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new ds(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},hs="return floor(x);",fs=mn({opSnippet:hs,packedOpSnippet:hs,cpuKernelImpl:nt}),ms={kernelName:s.Floor,backendName:"webgl",kernelFunc:fs},gs=gn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),ys={kernelName:s.FloorDiv,backendName:"webgl",kernelFunc:gs};class bs{constructor(e){this.variableNames=["A"];const t=(0,he.A)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class xs{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=(0,he.A)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const vs={kernelName:s.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:o}=r,i="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[c,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[l,c],h=[l,c,o];(u||i)&&(null==ks&&(ks=document.createElement("canvas").getContext("2d")),ks.canvas.width=c,ks.canvas.height=l,ks.drawImage(a,0,0,c,l),a=ks.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=d.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,s.env)().getBool("WEBGL_PACK")?new xs(h):new bs(h),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let ks;const ws={kernelName:s.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:i,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,g=s.backend_util.convertConv2DDataFormat(d),y=s.backend_util.computeConv2DInfo(a.shape,o.shape,c,p,l,h,!1,g);let b;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,s.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])b=ua({x:a,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=i,t=null!=u,r="leakyrelu"===f,c=f?yn(f,!1):null,l=new aa(y,e,c,t,r),d=[a,o];if(i&&d.push(i),u&&d.push(u),r){const e=n.makeTensorInfo([],"float32",s.util.createScalarValue(m,"float32"));d.push(e),x.push(e)}b=n.runWebGLProgram(l,d,"float32")}else b=ia({x:a,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=Sn({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};const Is={kernelName:s.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:i,preluActivationWeights:u}=t,{strides:c,pad:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(c,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${g}'`));const y=s.backend_util.computeConv2DInfo(a.shape,o.shape,c,g,l,p,!0),b=(0,s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=h?yn(h,b):null,v=[a,o],k=null!=i,w=null!=u,I="leakyrelu"===h;if(k&&v.push(i),w&&v.push(u),I){const e=n.makeTensorInfo([],"float32",s.util.createScalarValue(f,"float32"));v.push(e),m.push(e)}let N;N=b?new Fa(y,k,x,w,I):new Ra(y,k,x,w,I);const S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(N,v,"float32",S);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class Ns{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=(0,fe.kW)(t.length),a=(0,fe.kW)(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Ss={kernelName:s.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,o=a.shape,i=o[o.length-1],u=s.util.sizeFromShape(r.shape),[c,l,d,p]=s.backend_util.prepareAndValidate(r,a),h=Sn({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),f=Sn({inputs:{x:r},backend:n,attrs:{shape:[s.util.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=rt(e,t,r.dtype,l,i,d,p,r.shape,u);return n.makeTensorInfo(c,r.dtype,s.values)}const m=new Ns(i,p,[l,d]),g=n.runWebGLProgram(m,[f,h],f.dtype),y=Sn({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Ts{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=(0,fe.kW)(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[a]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function _s(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:o}=t,{axis:i,batchDims:u}=r,c=s.util.parseAxisParam(i,a.shape)[0],l=n.readSync(o.dataId),d=a.shape[c];for(let k=0;k<l.length;++k){const e=l[k];s.util.assert(e<=d-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`))}const p=s.backend_util.segment_util.collectGatherOpShapeInfo(a,o,c,u),h=s.util.sizeFromShape(o.shape),f=[],m=Sn({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=Sn({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}});f.push(m),f.push(g);const y=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize];if(n.shouldExecuteOnCPU([a,o])||"string"===a.dtype){const e=n.bufferSync(g),t=n.bufferSync(m),r=at(t,e,y);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p.outputShape,r.dtype,r.values)}const b=new Ts(m.shape,y),x=n.runWebGLProgram(b,[m,g],m.dtype);f.push(x);const v=Sn({inputs:{x:x},backend:n,attrs:{shape:p.outputShape}});return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const Es={kernelName:s.GatherV2,backendName:"webgl",kernelFunc:_s},Cs=gn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:st,dtype:"bool"}),As={kernelName:s.Greater,backendName:"webgl",kernelFunc:Cs},$s=gn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:ot}),Rs={kernelName:s.GreaterEqual,backendName:"webgl",kernelFunc:$s};const Fs={kernelName:s.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return os(r,!0,n)}},Os=mn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Ds={kernelName:s.IsFinite,backendName:"webgl",kernelFunc:Os},Ms=mn({opSnippet:"return float(isinf(x));",dtype:"bool"}),Bs={kernelName:s.IsInf,backendName:"webgl",kernelFunc:Ms},Ps=mn({opSnippet:"return float(isnan(x));",dtype:"bool"}),Ls={kernelName:s.IsNan,backendName:"webgl",kernelFunc:Ps},Vs=gn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:it,dtype:"bool"}),Ws={kernelName:s.Less,backendName:"webgl",kernelFunc:Vs},zs=gn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:ut,dtype:"bool"}),Us={kernelName:s.LessEqual,backendName:"webgl",kernelFunc:zs};const Gs={kernelName:s.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=ct(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},Hs=mn({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:lt}),js={kernelName:s.Log,backendName:"webgl",kernelFunc:Hs},qs=mn({opSnippet:"return log(1.0 + x);"}),Xs={kernelName:s.Log1p,backendName:"webgl",kernelFunc:qs},Ks=gn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ys={kernelName:s.LogicalAnd,backendName:"webgl",kernelFunc:Ks},Qs=mn({opSnippet:"return float(!(x >= 1.0));"}),Zs={kernelName:s.LogicalNot,backendName:"webgl",kernelFunc:Qs},Js=gn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),eo={kernelName:s.LogicalOr,backendName:"webgl",kernelFunc:Js};class to{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class no{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const ro={kernelName:s.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:o,bias:i,alpha:u,beta:c}=r,l=(0,s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new no(a.shape,o,i,u,c):new to(a.shape,o,i,u,c);return n.runWebGLProgram(l,[a],a.dtype)}};class ao{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const so={kernelName:s.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=r,d=new ao(a.shape,i,u,c,l);return n.runWebGLProgram(d,[a,s,o],a.dtype)}};function oo(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:o,keepDims:i}=r,u=a.shape.length,c=s.util.parseAxisParam(o,a.shape);let l=c;const d=s.backend_util.getAxesPermutation(l,u),p=null!=d,h=n.shouldExecuteOnCPU([a]);let f=a;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let n=0;n<t.length;n++)t[n]=a.shape[d[n]];const r=Ot(e,a.shape,a.dtype,d,t);f=n.makeTensorInfo(t,a.dtype);n.texData.get(f.dataId).values=r}else f=Rn(a,d,n);l=s.backend_util.getInnerMostAxes(l.length,u)}s.backend_util.assertAxesAreInnerMostDims("max",l,u);const[m,g]=s.backend_util.computeOutAndReduceShapes(f.shape,l);let y,b=m;if(i&&(b=s.backend_util.expandShapeToKeepDim(m,c)),h){const e=n.texData.get(f.dataId).values,t=dt(e,s.util.sizeFromShape(g),b,a.dtype);y=n.makeTensorInfo(b,a.dtype);n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const a=s.util.sizeFromShape(t),o=Sn({inputs:{x:e},attrs:{shape:[s.util.sizeFromShape(e.shape)/a,a]},backend:r}),i=Cn(o,e.dtype,"max",r),u=Sn({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const io={kernelName:s.Max,backendName:"webgl",kernelFunc:oo},uo=gn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:pt}),co={kernelName:s.Maximum,backendName:"webgl",kernelFunc:uo};const lo={kernelName:s.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;de(a,"maxPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=s.backend_util.computePool2DInfo(a.shape,o,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&s.util.arraysEqual(l.inShape,l.outShape))return an({inputs:{x:a},backend:n});const d=new gr(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};const po={kernelName:s.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=s.backend_util.computePool3DInfo(a.shape,o,i,[1,1,1],u,l,c),p=new yr(d,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class ho{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fo{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const mo={kernelName:s.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,p=s.backend_util.computePool3DInfo(i.shape,u,c,[1,1,1],l,d),h=new yr(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new fo(p),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const go={kernelName:s.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o,output:i}=t,u=o;de([o,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:p}=r,h=s.backend_util.computePool2DInfo(u.shape,c,l,1,d,p),f=new gr(h,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new ho(h),y=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}};const yo={kernelName:s.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:o,pad:i,includeBatchInIndex:u}=t,c=n;s.util.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(o,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const d=s.backend_util.computePool2DInfo(r.shape,a,o,l,i),[p,h]=function(e,t,n,r){let a=new gr(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new gr(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,d,c);return[p,h]}};const bo={kernelName:s.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:o}=t,i=n,u=r.shape.length,c=s.util.parseAxisParam(o,r.shape);let l=c;const d=s.backend_util.getAxesPermutation(l,u),p=null!=d,h=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(h){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let a=0;a<t.length;a++)t[a]=r.shape[d[a]];const n=Ot(e,r.shape,r.dtype,d,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=Rn(r,d,i);f.push(m),l=s.backend_util.getInnerMostAxes(l.length,u)}s.backend_util.assertAxesAreInnerMostDims("sum",l,u);const[g,y]=s.backend_util.computeOutAndReduceShapes(m.shape,l);let b=g;a&&(b=s.backend_util.expandShapeToKeepDim(g,c));const x=function(e,t,n,r){const a=s.util.sizeFromShape(t),o=Sn({inputs:{x:e},attrs:{shape:[s.util.sizeFromShape(e.shape)/a,a]},backend:r}),i=Cn(o,"float32","mean",r),u=Sn({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(m,y,b,i);for(const s of f)i.disposeIntermediateTensorInfo(s);return x}};const xo={kernelName:s.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=a.shape.length,c=s.util.parseAxisParam(o,a.shape);let l=c;const d=s.backend_util.getAxesPermutation(l,u);let p=a;null!=d&&(p=Dn({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s.backend_util.getInnerMostAxes(l.length,a.shape.length)),s.backend_util.assertAxesAreInnerMostDims("min",l,u);const[h,f]=s.backend_util.computeOutAndReduceShapes(p.shape,l),m=Sn({inputs:{x:p},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=Cn(m,m.dtype,"min",n);let y;if(i){y=Sn({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,c)}})}else y=Sn({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}},vo=gn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ht}),ko={kernelName:s.Minimum,backendName:"webgl",kernelFunc:vo};class wo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=(0,fe.kW)(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Io{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=(0,fe.kW)(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Bt("rc",r),u=Bt("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${i[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const No={kernelName:s.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:o}=n,i=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Io(r.shape,a,o):new wo(r.shape,a,o);return t.runWebGLProgram(i,[r],r.dtype)}},So=gn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),To={kernelName:s.Mod,backendName:"webgl",kernelFunc:So};class _o{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Eo=gn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Co={kernelName:s.RealDiv,backendName:"webgl",kernelFunc:Eo},Ao="return a - b;",$o=gn({opSnippet:Ao,packedOpSnippet:Ao,supportsComplex:!0,cpuKernelImpl:$t}),Ro={kernelName:s.Sub,backendName:"webgl",kernelFunc:$o};function Fo(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:o}=r,i=s.util.parseAxisParam([o],a.shape),u=oo({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),c=s.backend_util.expandShapeToKeepDim(u.shape,i),l=Sn({inputs:{x:u},backend:n,attrs:{shape:c}}),d=$o({inputs:{a:a,b:l},backend:n}),p=Za({inputs:{x:d},backend:n}),h=Fn({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=Sn({inputs:{x:h},backend:n,attrs:{shape:c}}),m=Eo({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const Oo={kernelName:s.Softmax,backendName:"webgl",kernelFunc:Fo};const Do={kernelName:s.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,u=i?a:Fo({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new _o(c,l,s),p=[[o]],h=n.runWebGLProgram(d,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),h}},Mo="return -x;";const Bo={kernelName:s.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=mt(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qt(r.shape,Mo):new Gt(r.shape,Mo),n.runWebGLProgram(a,[r],r.dtype)}},Po=s.kernel_impls.nonMaxSuppressionV3Impl;const Lo={kernelName:s.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=r,l=n.readSync(a.dataId),d=n.readSync(o.dataId),{selectedIndices:p}=Po(l,d,i,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Vo=s.kernel_impls.nonMaxSuppressionV4Impl;const Wo={kernelName:s.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r,d=n.readSync(a.dataId),p=n.readSync(o.dataId),{selectedIndices:h,validOutputs:f}=Vo(d,p,i,u,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},zo=s.kernel_impls.nonMaxSuppressionV5Impl;const Uo={kernelName:s.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r,d=n.readSync(a.dataId),p=n.readSync(o.dataId),h=i,f=u,m=c,g=l,{selectedIndices:y,selectedScores:b}=zo(d,p,h,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Go{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Ho={kernelName:s.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:o,onValue:i,offValue:u}=r,c=s.util.sizeFromShape(a.shape),l=new Go(c,o,i,u),d=Sn({inputs:{x:a},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(l,[d],a.dtype);n.disposeIntermediateTensorInfo(d);const h=Sn({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,o]}});return n.disposeIntermediateTensorInfo(p),h}};function jo(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Pr({inputs:{input:r},backend:n}),t=jo({inputs:{x:e},backend:n}),a=Jr({inputs:{input:r},backend:n}),s=jo({inputs:{x:a},backend:n}),o=on({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return cs({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const qo={kernelName:s.ZerosLike,backendName:"webgl",kernelFunc:jo};const Xo={kernelName:s.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Pr({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Jr({inputs:{input:a},backend:r}),o=jo({inputs:{x:s},backend:r}),i=on({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return cs({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const Ko={kernelName:s.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return es({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=na({inputs:t.map((e=>{const t=es({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class Yo{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=(0,fe.kW)(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Qo{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=(0,fe.kW)(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Bt("rc",r),u=Bt("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===r?2:4;f<m;f++)h+=`\n        ${d[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const Zo=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:o,constantValue:i}=r;if(0===s.util.sizeFromShape(a.shape)){return cs({backend:n,attrs:{shape:o.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}const u=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qo(a.shape,o,i):new Yo(a.shape,o,i),c=[[i]];return n.runWebGLProgram(u,[a],a.dtype,c)},Jo={kernelName:s.PadV2,backendName:"webgl",kernelFunc:Zo},ei=gn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ti={kernelName:s.Pow,backendName:"webgl",kernelFunc:ei};const ni={kernelName:s.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=a.shape.length,c=[],l=s.util.parseAxisParam(o,a.shape);let d=l;const p=s.backend_util.getAxesPermutation(d,u);let h,f=a;if(null!=p&&(f=Dn({inputs:{x:a},backend:n,attrs:{perm:p}}),d=s.backend_util.getInnerMostAxes(d.length,u),c.push(f)),s.backend_util.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=yt(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=s.backend_util.computeOutAndReduceShapes(f.shape,d),r=s.util.sizeFromShape(t),o=Sn({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=Cn(o,(0,s.sumOutType)(a.dtype),"prod",n);h=Sn({inputs:{x:i},backend:n,attrs:{shape:e}}),c.push(o),c.push(i)}if(i){c.push(h);const e=s.backend_util.expandShapeToKeepDim(h.shape,l);h=Sn({inputs:{x:h},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ri=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=bt(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},ai={kernelName:s.Range,backendName:"webgl",kernelFunc:ri},si=mn({opSnippet:"return 1.0 / x;"}),oi={kernelName:s.Reciprocal,backendName:"webgl",kernelFunc:si},ii=mn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ui={kernelName:s.Relu,backendName:"webgl",kernelFunc:ii},ci=mn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),li={kernelName:s.Relu6,backendName:"webgl",kernelFunc:ci};class di{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class pi{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const hi={kernelName:s.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r,[c,l]=u,d=(0,s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pi(a.shape,c,l,o,i):new di(a.shape,c,l,o,i);return n.runWebGLProgram(d,[a],"float32")}};class fi{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const mi={kernelName:s.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new fi(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class gi{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class yi{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const bi={kernelName:s.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r,[c,l]=u,d=(0,s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yi(a.shape,c,l,o,i):new gi(a.shape,c,l,o,i);return n.runWebGLProgram(d,[a],a.dtype)}};class xi{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const vi={kernelName:s.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new xi(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class ki{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=(0,fe.kW)(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class wi{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Bt("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=(0,fe.kW)(n);function i(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Ii={kernelName:s.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:o}=r,i=a.shape.length,u=s.util.parseAxisParam(o,a.shape);if(0===i)return an({inputs:{x:a},backend:n});const c=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wi(a.shape,u):new ki(a.shape,u);return n.runWebGLProgram(c,[a],a.dtype)}};class Ni{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Si={kernelName:s.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:o,center:i}=t,u=n,c=new Ni(r.shape,o),[l,d]=s.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),p=[[l,d,Math.sin(a),Math.cos(a)]];return u.runWebGLProgram(c,[r],r.dtype,p)}},Ti=mn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),_i={kernelName:s.Round,backendName:"webgl",kernelFunc:Ti},Ei=mn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:xt}),Ci={kernelName:s.Rsqrt,backendName:"webgl",kernelFunc:Ei};class Ai{constructor(e,t,n,r,a,s,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=(0,fe.kW)(a.length),u=(0,fe.kW)(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const $i={kernelName:s.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:o}=t,{shape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=s.backend_util.calculateShapes(o,a,i),h=[p/l,l];if(0===p)return n.makeTensorInfo(i,a.dtype);const f=Sn({inputs:{x:a},backend:n,attrs:{shape:[c,u]}}),m=Sn({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new Ai(c,u,f.shape.length,m.shape.length,d,h),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=Sn({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class Ri{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=o.join()}const s=(0,fe.kW)(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const Fi={kernelName:s.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:o}=t,i=new Ri(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,o],(0,s.upcastType)(a.dtype,o.dtype))}},Oi=mn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.backend_util.SELU_SCALEALPHA};\n  float scale = ${s.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Di={kernelName:s.Selu,backendName:"webgl",kernelFunc:Oi},Mi="return 1.0 / (1.0 + exp(-1.0 * x));",Bi=mn({opSnippet:Mi,packedOpSnippet:Mi,cpuKernelImpl:vt}),Pi={kernelName:s.Sigmoid,backendName:"webgl",kernelFunc:Bi},Li=mn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Vi={kernelName:s.Sign,backendName:"webgl",kernelFunc:Li},Wi=mn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),zi={kernelName:s.Sin,backendName:"webgl",kernelFunc:Wi},Ui=mn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Gi={kernelName:s.Sinh,backendName:"webgl",kernelFunc:Ui},Hi=mn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),ji={kernelName:s.Softplus,backendName:"webgl",kernelFunc:Hi},qi={kernelName:s.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,paddings:i}=r;s.util.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...i);for(let s=1+o.length;s<a.shape.length;++s)c.push([0,0]);const l=[],d=Zo({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),p=s.backend_util.getReshaped(d.shape,o,u,!1),h=s.backend_util.getPermuted(p.length,o.length,!1),f=s.backend_util.getReshapedPermuted(d.shape,o,u,!1),m=Sn({inputs:{x:d},backend:n,attrs:{shape:p}}),g=Dn({inputs:{x:m},backend:n,attrs:{perm:h}}),y=Sn({inputs:{x:g},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(g),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const Xi={kernelName:s.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(s.dataId),l=n.readSync(o.dataId)[0],[d,p,h,f,m]=It(i,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const Ki={kernelName:s.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,d]=Nt(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const Yi={kernelName:s.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=St(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};const Qi={kernelName:s.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=St(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}};const Zi={kernelName:s.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:o,defaultValue:i}=t,{outputShape:u}=r,{sliceRank:c,numUpdates:l,strides:d,outputSize:p}=s.backend_util.calculateShapes(o,a,u),h=new Ai(l,c,a.shape.length,o.shape.length,d,[p,1],!1),f=n.runWebGLProgram(h,[o,a,i],o.dtype),m=Sn({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}};const Ji={kernelName:s.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:o,axis:i}=r,u=s.util.parseAxisParam(i,a.shape)[0],c=s.backend_util.prepareSplitSize(a,o,u),l=a.shape.length,d=new Array(l).fill(0),p=a.shape.slice();return c.map((e=>{const t=[...p];t[u]=e;const r=$r({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},eu="return sqrt(x);",tu=mn({opSnippet:eu,packedOpSnippet:eu,cpuKernelImpl:Tt}),nu={kernelName:s.Sqrt,backendName:"webgl",kernelFunc:tu},ru=mn({opSnippet:"return x * x;"}),au={kernelName:s.Square,backendName:"webgl",kernelFunc:ru},su="return (a - b) * (a - b);",ou=gn({opSnippet:su,packedOpSnippet:su}),iu={kernelName:s.SquaredDifference,backendName:"webgl",kernelFunc:ou};const uu={kernelName:s.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Gt(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class cu{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=(0,fe.kW)(n.length),s=(0,fe.kW)(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const lu={kernelName:s.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,end:i,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:k}=s.slice_util.sliceInfo(a.shape,o,i,u,c,l,d,p,h);let w;if(g)w=Sn({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){s.util.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=s.slice_util.computeOutShape(x,v,k),t=$r({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});w=Sn({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=(0,s.buffer)(a.shape,a.dtype,e),r=_t(f,t,k,x);w=n.makeTensorInfo(m,a.dtype,r.values)}else{const e=new cu(x,k,f);w=n.runWebGLProgram(e,[a],a.dtype)}}const I=Sn({inputs:{x:w},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(w),I}};const du={kernelName:s.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=Et(p,h,a,s,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const pu={kernelName:s.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[c,l,d]=Ct(i,u,a),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const hu={kernelName:s.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=At(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},fu=mn({opSnippet:"return tan(x);"}),mu={kernelName:s.Tan,backendName:"webgl",kernelFunc:fu},gu=mn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),yu={kernelName:s.Tanh,backendName:"webgl",kernelFunc:gu};class bu{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=(0,fe.kW)(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function xu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:o}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>s.util.decodeString(e))):e,r=(0,s.buffer)(a.shape,a.dtype,t),i=Rt(r,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new bu(a.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}const vu={kernelName:s.Tile,backendName:"webgl",kernelFunc:xu};class ku{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class wu{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Iu(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Nu(e){let t=1;for(;t<e;)t*=2;return t}const Su={kernelName:s.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:o,sorted:i}=r,u=(0,s.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=(0,s.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,d=l[l.length-1];if(n.shouldExecuteOnCPU([a])||d<u||o>c){const e=n.readSync(a.dataId),[t,r]=Ft(e,l,a.dtype,o,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===d)return[a,cs({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const p=n.texData.get(a.dataId),h=null!==p&&p.isPacked,f=h?n.unpackTensor(a):a,m=s.util.sizeFromShape(l)/d,g=Sn({inputs:{x:f},attrs:{shape:[m,d]},backend:n});h&&Iu(n,f);const y=Nu(o),b=Nu(d);let x=null;const v=()=>null===x?[g,g]:[g,x],k=(e,t,r)=>{const a=v(),s=new ku(r),o=[[d],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=x;x=n.runWebGLProgram(s,a,"int32",o),Iu(n,i)};for(let s=1;s<y;s*=2){const e=2*s;for(let t=s;t>=1;t/=2)k(e,t,[m,b])}for(let s=b;s>y;s/=2){const e=v(),t=new wu([m,s/2]),r=[[d],[null===x?1:0],[y]],a=x;x=n.runWebGLProgram(t,e,"int32",r),Iu(n,a);const o=y/2,i=2*o;for(let n=o;n>=1;n/=2)k(i,n,x.shape)}let w=x;x=$r({inputs:{x:x},backend:n,attrs:{begin:0,size:[m,o]}}),Iu(n,w);let I=_s({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Iu(n,g);const N=l.slice(0,-1);N.push(o),w=x,x=Sn({inputs:{x:x},attrs:{shape:N},backend:n}),Iu(n,w);const S=I;return I=Sn({inputs:{x:I},attrs:{shape:N},backend:n}),Iu(n,S),[I,x]}};class Tu{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const _u={kernelName:s.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=r,[l,d,p,h]=a.shape,[f,m]=null!=c?c:[d,p],g=new Tu(d,p,o,i,u,[l,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}};const Eu={kernelName:s.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;de(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:c}=Dt(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}};const Cu={kernelName:s.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,u=a.shape[s],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==s&&(c[l++]=o.shape[m]);const d=[],p=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[s]=m;const e=$r({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),t=Sn({inputs:{x:e},backend:n,attrs:{shape:c}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Au{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const $u=[ro,so,Pn,Vn,zn,Gn,qn,Yn,Qn,Zn,ar,sr,ir,cr,hr,dr,mr,xr,br,wr,Ir,Nr,_r,Fr,Or,Dr,Vr,Ur,jr,Kr,un,ra,fa,ma,ca,ya,ba,ga,va,wa,Na,Ea,Ca,$a,Ba,Pa,Oa,Va,za,Ua,Ha,ja,Xa,Ya,Ja,ts,as,is,ls,ps,ms,ys,vs,ws,Is,Ss,Es,As,Rs,sn,Fs,ea,Ds,Bs,Ls,dn,Ws,Us,Gs,Xs,js,Ys,Zs,eo,io,po,lo,mo,go,yo,co,bo,xo,ko,No,To,Do,Nn,Bo,Lo,Wo,Uo,Br,Ho,Xo,Ko,Jo,ti,fn,ni,ai,Lr,Co,oi,li,ui,Tn,hi,mi,bi,vi,Ii,Si,_i,Ci,$i,Fi,Di,Pi,Vi,zi,Gi,Rr,Oo,ji,qi,Xi,Ki,Yi,Qi,Zi,Ji,nu,au,iu,uu,lu,du,pu,hu,Ro,On,mu,yu,vu,Su,_u,Mn,Eu,Cu,{kernelName:s.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:o}=t,{numSegments:i}=r,u=a.shape.length,c=[];let l=0;const d=s.backend_util.getAxesPermutation([l],u);let p=a;null!=d&&(p=Dn({inputs:{x:a},backend:n,attrs:{perm:d}}),c.push(p),l=s.backend_util.getInnerMostAxes(1,u)[0]);const h=s.backend_util.segment_util.computeOutShape(p.shape,l,i),f=s.util.sizeFromShape([p.shape[l]]),m=Sn({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});c.push(m);const g=(0,s.sumOutType)(a.dtype),y=(e,t,r,a,o)=>{const i=e.shape[0],u=e.shape[1],l=s.backend_util.segment_util.segOpComputeOptimalWindowSize(u,o),d=new Au({windowSize:l,inSize:u,batchSize:i,numSegments:o},t),p=n.compileAndRun(d,[e,r],a);if(c.push(p),p.shape[1]===o)return p;const h=ri({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=xu({inputs:{x:h},backend:n,attrs:{reps:[u/l]}});c.push(h),c.push(f);return y(p,t,f,a,o)},b=Sn({inputs:{x:y(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:h}});let x=b;if(null!=d){c.push(b);const e=s.backend_util.getUndoAxesPermutation(d);x=Dn({inputs:{x:x},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},qo];for(const Ru of $u)(0,s.registerKernel)(Ru)},38110:function(e,t,n){"use strict";n.d(t,{RW:function(){return a},Kn:function(){return s},al:function(){return o},ku:function(){return i},nc:function(){return u},ye:function(){return c}});var r=n(83921);function a(e,t,n="index"){const a=r.util.computeStrides(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function s(e,t,n="index"){const a=r.util.computeStrides(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function o(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function i(e){const t=r.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function u(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}const c="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n"},68713:function(e,t,n){"use strict";n.d(t,{JL:function(){return r},Zu:function(){return a}});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},68329:function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,o,i=!1,u=!1,p=!1){const h=[];for(let r=0;r<t.length;r++)t[r]>s&&h.push({score:t[r],boxIndex:r,suppressBeginIndex:0});h.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&h.length>0;){const t=h.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let u=!1;for(let r=m.length-1;r>=i;--r){const n=c(e,o,m[r]);if(n>=a){u=!0;break}if(t.score=t.score*l(a,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&r(h,t,d))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return i&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function c(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-s)*(u-o),f=(d-c)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(s,c),g=Math.max(o,l),y=Math.min(i,d),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(h+f-x)}function l(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:function(){return s},qP:function(){return o},pA:function(){return i}})},48333:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var r=n(72657);function a(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),o=r*e.length;s.values.set(t,o)}return s.toTensor()}},50196:function(e,t,n){"use strict";n.d(t,{BV:function(){return v},wv:function(){return x}});var r=n(68713),a=n(22885),s=n(55938),o=n(29121),i=n(26151),u=n(23418),c=n(20569);class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const i=u.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:u.now()-i})}if((0,a.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then((n=>{d(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const o="number"===typeof r?c.oj(`${r}ms`,9):r.error,i=c.oj(e,25),u=t.rank,l=t.size,d=c.oj(t.shape.toString(),14);let p="";for(const c in a){const e=a[c];if(null!=e){const n=e.shape||t.shape,r=n.length;p+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${d}\t%c${l}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var h=n(40974),f=n(80747),m=n(64706);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(m.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,m.Z(`Initialization of backend ${e} failed`),m.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return m.Z(`Initialization of backend ${e} failed`),m.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=v.runKernel(o.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return v.runKernel(o.RF,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i.pI)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:p}=e,h=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(l,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=(0,i.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.HD(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),o=new h.es(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,c.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new h.es(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new h._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof h._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=(0,i.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(a instanceof h.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(a[t.id]&&o[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!c.cO(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),k);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof h.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.hu(n.value instanceof h.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];c.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(s.every((e=>e instanceof h.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,s.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new b(t)}return(0,a.iG)(e._tfengine.ENV),(0,h.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const v=x();function k(e,t){const n={a:e,b:t};return v.runKernel(o.mm,n)}},22885:function(e,t,n){"use strict";n.d(t,{qA:function(){return s},OB:function(){return i},Vi:function(){return u},iG:function(){return c}});var r=n(20569);const a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(a in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return u}let u=null;function c(e){u=e}},55938:function(e,t,n){"use strict";n.d(t,{D:function(){return s},R:function(){return o}});var r=n(34155);let a;function s(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function o(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}},4368:function(e,t,n){"use strict";n.d(t,{G4:function(){return i},R:function(){return u},cF:function(){return c},MX:function(){return l},N8:function(){return d},SR:function(){return p},sq:function(){return h},N5:function(){return f},lu:function(){return m},B9:function(){return g},Cn:function(){return y},XV:function(){return b},CQ:function(){return x},Cd:function(){return v},N_:function(){return k},cj:function(){return w},x3:function(){return I},ze:function(){return N},jq:function(){return S},y3:function(){return T},VY:function(){return _}});var r=n(50196),a=n(22885),s=n(40974),o=n(80747);function i(){(0,a.OB)().set("PROD",!0)}function u(){(0,a.OB)().set("DEBUG",!0)}function c(){(0,a.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.BV.disposeVariables()}function p(){return r.BV}function h(){return r.BV.memory()}function f(e){return r.BV.profile(e)}function m(e,t){return r.BV.tidy(e,t)}function g(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.BV.keep(e)}function b(e){return r.BV.time(e)}function x(e){return r.BV.setBackend(e)}function v(){return r.BV.ready()}function k(){return r.BV.backendName}function w(e){r.BV.removeBackend(e)}function I(e){return r.BV.findBackend(e)}function N(e){return r.BV.findBackendFactory(e)}function S(e,t,n=1){return r.BV.registerBackend(e,t,n)}function T(){return r.BV.backend}function _(e,t){(0,a.OB)().setPlatform(e,t)}(0,s.FZ)(l)},30633:function(e,t,n){"use strict";n.d(t,{cb:function(){return p},pn:function(){return d},h7:function(){return c},fN:function(){return l},UQ:function(){return i},ti:function(){return u}});var r=n(50196),a=n(40974),s=n(43740),o=n(20569);function i(e){return o.hu(o.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=(0,s._1)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,s._1)(n,"dy","tf.grad"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(a)),[a],i);return null!=i&&o.k5(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]}))}}function u(e){return o.hu(o.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{o.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=(0,s.sI)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,s._1)(n,"dy","tf.grads"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(...a)),a,i);return null!=i&&o.k5(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n}))}}function c(e){return o.hu(o.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{o.hu(t instanceof a.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),o.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:i}=r.BV.gradients((()=>e(t)),[t],n);return h(s),{grad:s[0],value:i}}}function l(e){return o.hu(o.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{o.hu(Array.isArray(t)&&t.every((e=>e instanceof a.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),o.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.BV.gradients((()=>e(...t)),t,n);return null!=n&&o.k5(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(s.grads),s}}function d(e,t){o.hu(o.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),o.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof a._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),o.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:u,grads:c}=r.BV.gradients(e,t,null,!0);o.hu(c.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),o.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=c[t]&&(l[e.name]=c[t])})),null!=s&&s.forEach((e=>l[e.name]=null)),{value:u,grads:l}}function p(e){return r.BV.customGrad(e)}function h(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},83921:function(e,t,n){"use strict";n.r(t),n.d(t,{Abs:function(){return Je.SY},Acos:function(){return Je.VG},Acosh:function(){return Je.Sp},AdadeltaOptimizer:function(){return en},AdagradOptimizer:function(){return nn},AdamOptimizer:function(){return sn},AdamaxOptimizer:function(){return cn},Add:function(){return Je.mm},AddN:function(){return Je.Xz},All:function(){return Je.oT},Any:function(){return Je.IK},ArgMax:function(){return Je.sJ},ArgMin:function(){return Je.aJ},Asin:function(){return Je.M2},Asinh:function(){return Je.qw},Atan:function(){return Je.jM},Atan2:function(){return Je.QC},Atanh:function(){return Je.Oy},AvgPool:function(){return Je.Jh},AvgPool3D:function(){return Je._k},AvgPool3DGrad:function(){return Je.IM},AvgPoolGrad:function(){return Je.RO},BatchMatMul:function(){return Je.XL},BatchToSpaceND:function(){return Je.zw},Bincount:function(){return Je.zv},BroadcastArgs:function(){return Je.eE},BroadcastTo:function(){return Je.Ly},Cast:function(){return Je.RF},Ceil:function(){return Je.gJ},ClipByValue:function(){return Je.xn},Complex:function(){return Je.Zz},ComplexAbs:function(){return Je.yj},Concat:function(){return Je.Eh},Conv2D:function(){return Je.mh},Conv2DBackpropFilter:function(){return Je.wU},Conv2DBackpropInput:function(){return Je.wm},Conv3D:function(){return Je.x1},Conv3DBackpropFilterV2:function(){return Je.o2},Conv3DBackpropInputV2:function(){return Je.ik},Cos:function(){return Je.mc},Cosh:function(){return Je.TR},CropAndResize:function(){return Je.Vc},Cumsum:function(){return Je.iH},DataStorage:function(){return Nr.JL},DenseBincount:function(){return Je.QR},DepthToSpace:function(){return Je.T0},DepthwiseConv2dNative:function(){return Je.ci},DepthwiseConv2dNativeBackpropFilter:function(){return Je.sL},DepthwiseConv2dNativeBackpropInput:function(){return Je.y7},Diag:function(){return Je.$w},Dilation2D:function(){return Je.p4},Dilation2DBackpropFilter:function(){return Je.Vn},Dilation2DBackpropInput:function(){return Je.ek},ENV:function(){return x.Vi},Einsum:function(){return Je.$g},Elu:function(){return Je.SX},EluGrad:function(){return Je.HE},Environment:function(){return x.qA},Equal:function(){return Je.hd},Erf:function(){return Je.Om},Exp:function(){return Je.NE},ExpandDims:function(){return Je.YF},Expm1:function(){return Je.Y0},FFT:function(){return Je.vw},Fill:function(){return Je.de},FlipLeftRight:function(){return Je.Uy},Floor:function(){return Je.OR},FloorDiv:function(){return Je.je},FromPixels:function(){return Je.eB},FusedBatchNorm:function(){return Je.sH},FusedConv2D:function(){return Je._V},FusedDepthwiseConv2D:function(){return Je.lu},GatherNd:function(){return Je.q1},GatherV2:function(){return Je.qi},Greater:function(){return Je.iZ},GreaterEqual:function(){return Je.Ac},IFFT:function(){return Je.Qg},Identity:function(){return Je.iJ},Imag:function(){return Je.J_},IsFinite:function(){return Je.av},IsInf:function(){return Je.iW},IsNan:function(){return Je.r7},KernelBackend:function(){return Nr.Zu},LRN:function(){return Je.eZ},LRNGrad:function(){return Je.Hh},LeakyRelu:function(){return Je.J$},Less:function(){return Je.vt},LessEqual:function(){return Je.CA},LinSpace:function(){return Je.e7},Log:function(){return Je.Zb},Log1p:function(){return Je.kU},LogSoftmax:function(){return Je.qC},LogicalAnd:function(){return Je.PY},LogicalNot:function(){return Je.Vf},LogicalOr:function(){return Je.MZ},Max:function(){return Je.Yo},MaxPool:function(){return Je.mT},MaxPool3D:function(){return Je.OA},MaxPool3DGrad:function(){return Je.OU},MaxPoolGrad:function(){return Je.OV},MaxPoolWithArgmax:function(){return Je.vF},Maximum:function(){return Je.BM},Mean:function(){return Je.q2},Min:function(){return Je.c1},Minimum:function(){return Je.q8},MirrorPad:function(){return Je.jQ},Mod:function(){return Je.Vb},MomentumOptimizer:function(){return dn},Multinomial:function(){return Je.NZ},Multiply:function(){return Je.wY},Neg:function(){return Je.ku},NonMaxSuppressionV3:function(){return Je.uv},NonMaxSuppressionV4:function(){return Je.cy},NonMaxSuppressionV5:function(){return Je.W0},NotEqual:function(){return Je.yQ},OP_SCOPE_SUFFIX:function(){return mn.zvA},OneHot:function(){return Je.we},OnesLike:function(){return Je.qW},Optimizer:function(){return Jt},OptimizerConstructors:function(){return hn},Pack:function(){return Je.Qi},PadV2:function(){return Je.ly},Pool:function(){return Je.Kg},Pow:function(){return Je.pe},Prelu:function(){return Je.o0},Prod:function(){return Je.Dl},RMSPropOptimizer:function(){return pn},Range:function(){return Je.e6},Rank:function(){return fn.yw},Real:function(){return Je.xJ},RealDiv:function(){return Je.oH},Reciprocal:function(){return Je.$H},Reduction:function(){return gn.I},Relu:function(){return Je.qk},Relu6:function(){return Je.Sb},Reshape:function(){return Je.HZ},ResizeBilinear:function(){return Je._Y},ResizeBilinearGrad:function(){return Je.zb},ResizeNearestNeighbor:function(){return Je.dp},ResizeNearestNeighborGrad:function(){return Je.Hm},Reverse:function(){return Je.mK},RotateWithOffset:function(){return Je.b9},Round:function(){return Je.e0},Rsqrt:function(){return Je.bV},SGDOptimizer:function(){return ln},ScatterNd:function(){return Je.xQ},Select:function(){return Je.Ph},Selu:function(){return Je.oF},Sigmoid:function(){return Je.a5},Sign:function(){return Je.i5},Sin:function(){return Je.RQ},Sinh:function(){return Je.w3},Slice:function(){return Je.p2},Softmax:function(){return Je.Gc},Softplus:function(){return Je.MR},SpaceToBatchND:function(){return Je.TQ},SparseFillEmptyRows:function(){return Je.O3},SparseReshape:function(){return Je.nh},SparseSegmentMean:function(){return Je.YW},SparseSegmentSum:function(){return Je.Zj},SparseToDense:function(){return Je.D2},SplitV:function(){return Je.L8},Sqrt:function(){return Je.FK},Square:function(){return Je.bK},SquaredDifference:function(){return Je._t},Step:function(){return Je.h8},StridedSlice:function(){return Je.m2},StringNGrams:function(){return Je._J},StringSplit:function(){return Je.s1},StringToHashBucketFast:function(){return Je.Xk},Sub:function(){return Je.Tr},Sum:function(){return Je.GB},Tan:function(){return Je.sE},Tanh:function(){return Je.MI},Tensor:function(){return _e.es},TensorBuffer:function(){return _e.YD},Tile:function(){return Je.n9},TopK:function(){return Je.cW},Transform:function(){return Je.wx},Transpose:function(){return Je.G3},Unique:function(){return Je.kp},Unpack:function(){return Je.To},UnsortedSegmentSum:function(){return Je.Qv},Variable:function(){return _e._w},ZerosLike:function(){return Je.Ru},_FusedMatMul:function(){return Je.us},abs:function(){return mn.WnP},acos:function(){return mn.Khb},acosh:function(){return mn.__u},add:function(){return mn.IHx},addN:function(){return mn.QBD},all:function(){return mn.$6P},any:function(){return mn.YjB},argMax:function(){return mn.NqF},argMin:function(){return mn.vHJ},asin:function(){return mn.ZRM},asinh:function(){return mn.VfV},atan:function(){return mn.z4N},atan2:function(){return mn.fvJ},atanh:function(){return mn.C80},avgPool:function(){return mn.wS1},avgPool3d:function(){return mn.uR5},backend:function(){return Gt.y3},backend_util:function(){return p},basicLSTMCell:function(){return mn.zEQ},batchNorm:function(){return mn.tgs},batchNorm2d:function(){return mn.Dxk},batchNorm3d:function(){return mn.JY5},batchNorm4d:function(){return mn.p3b},batchToSpaceND:function(){return mn.E4h},bincount:function(){return mn.yE8},booleanMaskAsync:function(){return mn.anm},broadcastArgs:function(){return mn.XsQ},broadcastTo:function(){return mn.UFq},broadcast_util:function(){return Ze},browser:function(){return o},buffer:function(){return mn.f3b},cast:function(){return mn.pju},ceil:function(){return mn.mDi},clipByValue:function(){return mn.iUl},clone:function(){return mn.d9v},complex:function(){return mn.PYB},concat:function(){return mn.zoF},concat1d:function(){return mn.gME},concat2d:function(){return mn.Izb},concat3d:function(){return mn.MNy},concat4d:function(){return mn.ZaL},conv1d:function(){return mn.PAt},conv2d:function(){return mn.Tek},conv2dTranspose:function(){return mn.bc},conv3d:function(){return mn.pdZ},conv3dTranspose:function(){return mn.$QV},copyRegisteredKernels:function(){return et.T3},cos:function(){return mn.mCk},cosh:function(){return mn.f9Y},cosineWindow:function(){return mn.mew},cumsum:function(){return mn.zbp},customGrad:function(){return Qt.cb},denseBincount:function(){return mn.ppE},deprecationWarn:function(){return Gt.MX},depthToSpace:function(){return mn.nTT},depthwiseConv2d:function(){return mn.B10},device_util:function(){return r},diag:function(){return mn.Ka3},dilation2d:function(){return mn.WmZ},disableDeprecationWarnings:function(){return Gt.cF},dispose:function(){return Gt.B9},disposeVariables:function(){return Gt.N8},div:function(){return mn.hiC},divNoNan:function(){return mn.NTj},dot:function(){return mn.AKD},dropout:function(){return mn.rvX},einsum:function(){return mn.WYO},elu:function(){return mn.pyx},enableDebugMode:function(){return Gt.R},enableProdMode:function(){return Gt.G4},enclosingPowerOfTwo:function(){return mn.GRh},engine:function(){return Gt.SR},env:function(){return x.OB},equal:function(){return mn.DgJ},erf:function(){return mn.qNN},exp:function(){return mn.Qqt},expandDims:function(){return mn.dt4},expm1:function(){return mn.t$B},eye:function(){return mn.iyy},fft:function(){return mn.kp_},fill:function(){return mn.hlL},findBackend:function(){return Gt.x3},findBackendFactory:function(){return Gt.ze},floor:function(){return mn.GWj},floorDiv:function(){return mn.qPi},fused:function(){return mn.imm},gather:function(){return mn.Iqj},gatherND:function(){return mn.dbB},gather_util:function(){return i},getBackend:function(){return Gt.N_},getGradient:function(){return et.uk},getKernel:function(){return et.pI},getKernelsForBackend:function(){return et.tr},grad:function(){return Qt.UQ},grads:function(){return Qt.ti},greater:function(){return mn.pjt},greaterEqual:function(){return mn.brS},ifft:function(){return mn.Sxn},imag:function(){return mn.asL},image:function(){return mn.BHj},inTopKAsync:function(){return mn.V3u},io:function(){return a},irfft:function(){return mn.wx0},isFinite:function(){return mn.xVT},isInf:function(){return mn.UWc},isNaN:function(){return mn.i2d},keep:function(){return Gt.Cn},kernel_impls:function(){return h},leakyRelu:function(){return mn.hi7},less:function(){return mn.d9m},lessEqual:function(){return mn.zN1},linalg:function(){return mn.$r2},linspace:function(){return mn.SX3},localResponseNormalization:function(){return mn.G9k},log:function(){return mn.cM7},log1p:function(){return mn.Krr},logSigmoid:function(){return mn.e_t},logSoftmax:function(){return mn.CmS},logSumExp:function(){return mn.l_t},logicalAnd:function(){return mn.HvI},logicalNot:function(){return mn.hJK},logicalOr:function(){return mn.K5V},logicalXor:function(){return mn.egP},losses:function(){return mn.MB5},matMul:function(){return mn.OI3},math:function(){return s},max:function(){return mn.Fp7},maxPool:function(){return mn._sB},maxPool3d:function(){return mn.YQQ},maxPoolWithArgmax:function(){return mn.Ip$},maximum:function(){return mn.gWQ},mean:function(){return mn.J69},memory:function(){return Gt.sq},meshgrid:function(){return mn.ry_},min:function(){return mn.VV$},minimum:function(){return mn.LTh},mirrorPad:function(){return mn.VdP},mod:function(){return mn.wQq},moments:function(){return mn.Gi7},movingAverage:function(){return mn.p_},mul:function(){return mn.dC7},multiRNNCell:function(){return mn.rq4},multinomial:function(){return mn.SJ_},neg:function(){return mn.W76},nextFrame:function(){return xn},norm:function(){return mn.KOy},notEqual:function(){return mn.Quu},oneHot:function(){return mn.lfX},ones:function(){return mn.iUs},onesLike:function(){return mn.JpU},op:function(){return mn.op},outerProduct:function(){return mn.N2O},pad:function(){return mn.vku},pad1d:function(){return mn.pNR},pad2d:function(){return mn.koy},pad3d:function(){return mn.t1L},pad4d:function(){return mn.lGY},pool:function(){return mn.d_R},pow:function(){return mn.sQ3},prelu:function(){return mn.AL3},print:function(){return mn.S0v},prod:function(){return mn.WVs},profile:function(){return Gt.N5},rand:function(){return mn.TN_},randomGamma:function(){return mn.wzB},randomNormal:function(){return mn.nGf},randomUniform:function(){return mn.LGj},range:function(){return mn.w6H},ready:function(){return Gt.Cd},real:function(){return mn.kwC},reciprocal:function(){return mn.M25},registerBackend:function(){return Gt.jq},registerGradient:function(){return et.Li},registerKernel:function(){return et.wC},relu:function(){return mn.UYe},relu6:function(){return mn.btT},removeBackend:function(){return Gt.cj},reshape:function(){return mn.XLQ},reverse:function(){return mn.GYS},reverse1d:function(){return mn.SDf},reverse2d:function(){return mn.diP},reverse3d:function(){return mn.sx7},reverse4d:function(){return mn.mG2},rfft:function(){return mn.QEs},round:function(){return mn.NMM},rsqrt:function(){return mn.bp0},scalar:function(){return mn.iD$},scatterND:function(){return mn.snQ},scatter_util:function(){return ct},selu:function(){return mn.U8D},separableConv2d:function(){return mn.U_I},serialization:function(){return c},setBackend:function(){return Gt.CQ},setPlatform:function(){return Gt.VY},setdiff1dAsync:function(){return mn.ODp},sigmoid:function(){return mn.XD2},sign:function(){return mn.Xxe},signal:function(){return mn.tdS},sin:function(){return mn.O$l},sinh:function(){return mn.R_K},slice:function(){return mn.tPi},slice1d:function(){return mn.jZU},slice2d:function(){return mn.SmN},slice3d:function(){return mn.CnO},slice4d:function(){return mn.p0P},slice_util:function(){return u},softmax:function(){return mn.XAC},softplus:function(){return mn.Wvh},spaceToBatchND:function(){return mn.fBT},sparse:function(){return mn.rVs},sparseToDense:function(){return mn.ers},spectral:function(){return mn.uN7},split:function(){return mn.Vl2},sqrt:function(){return mn._b3},square:function(){return mn.h62},squaredDifference:function(){return mn.$i},squeeze:function(){return mn.L9e},stack:function(){return mn.knu},step:function(){return mn.Nbs},stridedSlice:function(){return mn.NXj},string:function(){return mn.Z_8},sub:function(){return mn.luU},sum:function(){return mn.Smz},sumOutType:function(){return fn.z4},tan:function(){return mn.ORZ},tanh:function(){return mn.AEp},tensor:function(){return mn.XeE},tensor1d:function(){return mn.RRF},tensor2d:function(){return mn.odF},tensor3d:function(){return mn.wOQ},tensor4d:function(){return mn.yXz},tensor5d:function(){return mn.Bfx},tensor6d:function(){return mn.xZs},tensor_util:function(){return At},test_util:function(){return l},tidy:function(){return Gt.lu},tile:function(){return mn.Gg6},time:function(){return Gt.XV},topk:function(){return mn.hg7},train:function(){return yn},transpose:function(){return mn.p4s},truncatedNormal:function(){return mn.Xu6},unique:function(){return mn.Two},unregisterGradient:function(){return et.bt},unregisterKernel:function(){return et.nE},unsortedSegmentSum:function(){return mn.pUJ},unstack:function(){return mn.HHK},upcastType:function(){return fn.x8},util:function(){return $t},valueAndGrad:function(){return Qt.h7},valueAndGrads:function(){return Qt.fN},variable:function(){return mn.VD$},variableGrads:function(){return Qt.pn},version_core:function(){return Ut},where:function(){return mn.arb},whereAsync:function(){return mn.itS},zeros:function(){return mn.lls},zerosLike:function(){return mn.P84}});var r={};n.r(r),n.d(r,{isBrowser:function(){return b},isMobile:function(){return y},mockIsMobile:function(){return g}});var a={};n.r(a),n.d(a,{browserFiles:function(){return Re},browserHTTPRequest:function(){return We},concatenateArrayBuffers:function(){return R},copyModel:function(){return ge},decodeWeights:function(){return E},encodeWeights:function(){return _},fromMemory:function(){return Ge},getLoadHandlers:function(){return z},getModelArtifactsForJSON:function(){return D},getModelArtifactsInfoForJSON:function(){return M},getSaveHandlers:function(){return W},http:function(){return Ve},isHTTPScheme:function(){return Pe},listModels:function(){return fe},loadWeights:function(){return De},moveModel:function(){return ye},registerLoadRouter:function(){return V},registerSaveRouter:function(){return L},removeModel:function(){return me},weightsLoaderFactory:function(){return Me},withSaveHandler:function(){return He}});var s={};n.r(s),n.d(s,{confusionMatrix:function(){return Qe}});var o={};n.r(o),n.d(o,{fromPixels:function(){return it},fromPixelsAsync:function(){return st},toPixels:function(){return ot}});var i={};n.r(i),n.d(i,{prepareAndValidate:function(){return ut}});var u={};n.r(u),n.d(u,{assertParamsValid:function(){return lt},computeFlatOffset:function(){return It},computeOutShape:function(){return pt},getNormalizedAxes:function(){return gt},isSliceContinous:function(){return wt},maskToAxes:function(){return dt},parseSliceParams:function(){return Nt},sliceInfo:function(){return St},startForAxis:function(){return vt},startIndicesWithElidedDims:function(){return yt},stopForAxis:function(){return kt},stopIndicesWithElidedDims:function(){return bt},stridesForAxis:function(){return xt},stridesWithElidedDims:function(){return ht}});var c={};n.r(c),n.d(c,{Serializable:function(){return _t},SerializationMap:function(){return Et},registerClass:function(){return Ct}});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:function(){return Rt},encodeStrings:function(){return zt},expectArrayBuffersEqual:function(){return Wt},expectArraysClose:function(){return Ft},expectArraysEqual:function(){return Bt},expectNumbersClose:function(){return Pt},expectPromiseToFail:function(){return Mt},expectValuesInRange:function(){return Vt},testEpsilon:function(){return Ot}});var d={};n.r(d),n.d(d,{collectGatherOpShapeInfo:function(){return xr},computeOutShape:function(){return br},segOpComputeOptimalWindowSize:function(){return yr}});var p={};n.r(p),n.d(p,{ERF_A1:function(){return Mn},ERF_A2:function(){return Bn},ERF_A3:function(){return Pn},ERF_A4:function(){return Ln},ERF_A5:function(){return Vn},ERF_P:function(){return Dn},PARALLELIZE_THRESHOLD:function(){return Sn},SELU_SCALE:function(){return On},SELU_SCALEALPHA:function(){return Fn},applyActivation:function(){return Nn.QH},assertAndGetBroadcastShape:function(){return Ze.assertAndGetBroadcastShape},assertAxesAreInnerMostDims:function(){return vn.lB},assertParamsConsistent:function(){return kn},assignToTypedArray:function(){return qn},axesAreInnerMostDims:function(){return vn.YB},calculateShapes:function(){return ct.calculateShapes},checkEinsumDimSizes:function(){return er},checkPadOnDimRoundingMode:function(){return In.m},combineLocations:function(){return vn.Vh},complexWithEvenIndex:function(){return Gn},complexWithOddIndex:function(){return Hn},computeConv2DInfo:function(){return In.Ix},computeConv3DInfo:function(){return In.jw},computeDefaultPad:function(){return In.aO},computeDilation2DInfo:function(){return In.Rf},computeOptimalWindowSize:function(){return Tn},computeOutAndReduceShapes:function(){return vn.kz},computeOutShape:function(){return wn},computePool2DInfo:function(){return In.Xw},computePool3DInfo:function(){return In.pl},convertConv2DDataFormat:function(){return In.sl},decodeEinsumEquation:function(){return Zn},eitherStridesOrDilationsAreOne:function(){return In.jT},expandShapeToKeepDim:function(){return vn.rv},exponent:function(){return Kn},exponents:function(){return Xn},fromStringArrayToUint8:function(){return kr},fromUint8ToStringArray:function(){return vr},getAxesPermutation:function(){return vn.Q3},getBroadcastDims:function(){return Ze.getBroadcastDims},getComplexWithIndex:function(){return jn},getEinsumComputePath:function(){return tr},getEinsumPermutation:function(){return Jn},getFusedBiasGradient:function(){return Nn.pf},getFusedDyActivation:function(){return Nn.Fr},getImageCenter:function(){return _n},getInnerMostAxes:function(){return vn.sY},getPermuted:function(){return Cn},getReductionAxes:function(){return Ze.getReductionAxes},getReshaped:function(){return En},getReshapedPermuted:function(){return An},getSliceBeginCoords:function(){return $n},getSliceSize:function(){return Rn},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return sr},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return or},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return ir},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return lr},getSparseReshapeInputOutputMismatchErrorMessage:function(){return pr},getSparseReshapeInputOutputMultipleErrorMessage:function(){return dr},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return ur},getSparseReshapeNegativeOutputDimErrorMessage:function(){return cr},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return gr},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return hr},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return fr},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return mr},getUndoAxesPermutation:function(){return vn.LJ},isIdentityPermutation:function(){return nr},log:function(){return Wn.c},mergeRealAndImagArrays:function(){return zn},prepareAndValidate:function(){return ut},prepareSplitSize:function(){return ar},segment_util:function(){return d},shouldFuse:function(){return Nn.uy},slice_util:function(){return u},splitRealAndImagArrays:function(){return Un},tupleValuesAreOne:function(){return In.I0},upcastType:function(){return fn.x8},validateInput:function(){return ct.validateInput},validateUpdateShape:function(){return ct.validateUpdateShape},warn:function(){return Wn.Z}});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:function(){return wr.GP},nonMaxSuppressionV4Impl:function(){return wr.qP},nonMaxSuppressionV5Impl:function(){return wr.pA},whereImpl:function(){return Ir.Z}});var f=n(50196);let m;function g(e){m=e}function y(e){if(void 0!==m)return m;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function b(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var x=n(22885),v=n(34155);const k=(0,x.OB)();k.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),k.registerFlag("IS_BROWSER",(()=>b())),k.registerFlag("IS_NODE",(()=>"undefined"!==typeof v&&"undefined"!==typeof v.versions&&"undefined"!==typeof v.versions.node)),k.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),k.registerFlag("PROD",(()=>!1)),k.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>k.getBool("DEBUG"))),k.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),k.registerFlag("IS_TEST",(()=>!1)),k.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),k.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var w=n(61661),I=n(10701),N=n(20569);const S={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var T=n(48764).Buffer;async function _(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:C(await Promise.all(r)),specs:n}}function E(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,o=s.dtype,i=s.shape,u=(0,N.NA)(i);let c;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=S[n.dtype],l=e.slice(a,a+u*i),d="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){c=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];c[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=B()),c=r(d)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);c=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];c[e]=Math.round(t*n.scale+n.min)}}a+=u*i}else if("string"===o){const t=(0,N.NA)(s.shape);c=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));c.push(n),a+=t}}else{const r=S[o],s=e.slice(a,a+u*r);if("float32"===o)c=new Float32Array(s);else if("int32"===o)c=new Int32Array(s);else if("bool"===o)c=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{c=new Float32Array(s);const e=new Float32Array(c.length/2),r=new Float32Array(c.length/2);for(let t=0;t<e.length;t++)e[t]=c[2*t],r[t]=c[2*t+1];const a=(0,I.X)(e,i,"float32"),o=(0,I.X)(r,i,"float32");n[t]=(0,w.P)(a,o),a.dispose(),o.dispose()}}a+=u*r}"complex64"!==o&&(n[t]=(0,I.X)(c,i,o))}return n}function C(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const A="undefined"!==typeof T&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function $(e){return A?T.byteLength(e):new Blob([e]).size}function R(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function F(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function O(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function D(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function M(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:$(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:$(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function B(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let o=0;o<r.length;o++){const a=r[o],i=e[n[a>>10]+(1023&a)]+t[a>>10];s[o]=i}return new Float32Array(a)}}class P{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==P.instance&&(P.instance=new P),P.instance}static registerSaveRouter(e){P.getInstance().saveRouters.push(e)}static registerLoadRouter(e){P.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return P.getHandlers(e,"save")}static getLoadHandlers(e,t){return P.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?P.getInstance().loadRouters:P.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const L=e=>P.registerSaveRouter(e),V=e=>P.registerLoadRouter(e),W=e=>P.getSaveHandlers(e),z=(e,t)=>P.getLoadHandlers(e,t),U="tensorflowjs",G="models_store",H="model_info_store";function j(){if(!(0,x.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function q(e){const t=e.result;t.createObjectStore(G,{keyPath:"modelPath"}),t.createObjectStore(H,{keyPath:"modelPath"})}class X{constructor(e){if(this.indexedDB=j(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(U,1);r.onupgradeneeded=()=>q(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(G,"readonly"),r=t.objectStore(G).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=M(t),s=a.transaction(H,"readwrite");let o=s.objectStore(H);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(G,"readwrite");const i=u.objectStore(G).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore(H);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}X.URL_SCHEME="indexeddb://";const K=e=>{return(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(X.URL_SCHEME)?(t=e.slice(X.URL_SCHEME.length),new X(t)):null;var t};P.registerSaveRouter(K),P.registerLoadRouter(K);class Y{constructor(){this.indexedDB=j()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(U,1);n.onupgradeneeded=()=>q(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(H,"readonly"),s=a.objectStore(H).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(X.URL_SCHEME)?t.slice(X.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(U,1);r.onupgradeneeded=()=>q(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(H,"readwrite"),o=s.objectStore(H),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(G,"readwrite");const r=u.objectStore(G).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const Q="/",Z="tensorflowjs_models",J="info",ee="model_topology",te="weight_specs",ne="weight_data",re="model_metadata";function ae(e){return{info:[Z,e,J].join(Q),topology:[Z,e,ee].join(Q),weightSpecs:[Z,e,te].join(Q),weightData:[Z,e,ne].join(Q),modelMetadata:[Z,e,re].join(Q)}}function se(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function oe(e){const t=e.split(Q);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Q)}class ie{constructor(e){if(!(0,x.OB)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ae(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=M(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(A)return T.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw se(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(A){const t=T.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(s),t}}ie.URL_SCHEME="localstorage://";const ue=e=>{return(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ie.URL_SCHEME)?(t=e.slice(ie.URL_SCHEME.length),new ie(t)):null;var t};P.registerSaveRouter(ue),P.registerLoadRouter(ue);class ce{constructor(){(0,N.hu)((0,x.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,N.hu)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Z+Q,n=Q+J;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[oe(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=ae(e=(t=e).startsWith(ie.URL_SCHEME)?t.slice(ie.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return se(n),r}}const le="://";class de{constructor(){this.managers={}}static getInstance(){return null==de.instance&&(de.instance=new de),de.instance}static registerManager(e,t){(0,N.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(le)&&(e=e.slice(0,e.indexOf(le))),(0,N.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=de.getInstance();(0,N.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function pe(e){if(-1===e.indexOf(le))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${de.getSchemes().join(",")}`);return{scheme:e.split(le)[0],path:e.split(le)[1]}}async function he(e,t,n=!1){(0,N.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=P.getLoadHandlers(e);(0,N.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,N.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=P.getSaveHandlers(t);(0,N.hu)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,N.hu)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=pe(e).scheme,u=pe(e).path,c=i===pe(e).scheme,l=await a.load();n&&c&&await de.getManager(i).removeModel(u);const d=await o.save(l);return n&&!c&&await de.getManager(i).removeModel(u),d.modelArtifactsInfo}async function fe(){const e=de.getSchemes(),t={};for(const n of e){const e=await de.getManager(n).listModels();for(const r in e){t[n+le+r]=e[r]}}return t}async function me(e){const t=pe(e);return de.getManager(t.scheme).removeModel(t.path)}async function ge(e,t){return he(e,t,!1)}async function ye(e,t){return he(e,t,!0)}class be{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,x.OB)().get("IS_BROWSER")){(0,x.OB)().setPlatform("browser",new be);try{de.registerManager(ie.URL_SCHEME,new ce)}catch(Sr){}try{de.registerManager(X.URL_SCHEME,new Y)}catch(Sr){}}var xe=n(34155);const ve=()=>n(75410);let ke;class we{constructor(){this.util=n(48628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,x.OB)().global.fetch?(0,x.OB)().global.fetch(e,t):(null==ke&&(ke=ve()),ke(e,t))}now(){const e=xe.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}(0,x.OB)().get("IS_NODE")&&(0,x.OB)().setPlatform("node",new we);var Ie=n(72657),Ne=n(62271),Se=n(8723),Te=n(29798),_e=n(40974);(0,f.wv)();const Ee={buffer:Ie.f,cast:Ne.p,clone:Se.d,print:Te.S};(0,_e.Vp)(Ee);function Ce(e){return new Promise((e=>setTimeout(e))).then(e)}class Ae{constructor(e){if(!(0,x.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ae.URL_SCHEME)&&(e=e.slice(Ae.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=O(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Ce((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ce((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:M(e)}}}}Ae.URL_SCHEME="downloads://";class $e{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=D(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,R(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>F(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=F(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Re(e){return new $e(e)}function Fe(e,t,n,r){!function(e){(0,N.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,N.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,N.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,N.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}async function Oe(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,x.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Fe(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Fe(a,t.onProgress,.5,1)}async function De(e,t="",n,r){return Me((e=>Oe(e,{requestInit:r})))(e,t,n)}function Me(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=S[u]*N.NA(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((t,n)=>{t===e.name&&(l(),o[n]=!0)})):l(),i.push(e.name),n+=c}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),d={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=l[p+t].byteLength;const a=new ArrayBuffer(r),o=new Uint8Array(a);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(l[p+t]);o.set(e,i),i+=e.byteLength}s[e].forEach((e=>{const t=E(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)d[n]=t[n]})),p+=n})),d}}P.registerSaveRouter((e=>(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ae.URL_SCHEME)?function(e="model"){return new Ae(e)}(e.slice(Ae.URL_SCHEME.length)):null));class Be{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,N.hu)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,x.OB)().platform.fetch,(0,N.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,N.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=O(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:M(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(a){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return D(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const u of e)s.push(...u.weights);const o=[],i=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));return[s,R(await Oe(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Pe(e){return null!=e.match(Be.URL_SCHEME_REGEX)}Be.URL_SCHEME_REGEX=/^https?:\/\//;const Le=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Pe(e))):Pe(e),n)return Ve(e,t)}return null};function Ve(e,t){return new Be(e,t)}function We(e,t){return Ve(e,t)}P.registerSaveRouter(Le),P.registerLoadRouter(Le);class ze{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Ue{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Ge(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new ze(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ze({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ze({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function He(e){return new Ue(e)}var je=n(43740),qe=n(28687),Xe=n(76708),Ke=n(2668),Ye=n(89065);const Qe=(0,Ke.op)({confusionMatrix_:function(e,t,n){const r=(0,je._1)(e,"labels","confusionMatrix"),a=(0,je._1)(t,"predictions","confusionMatrix");N.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),N.hu(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),N.hu(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),N.hu(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),N.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=(0,Xe.l)((0,Ne.p)(r,"int32"),n),o=(0,Xe.l)((0,Ne.p)(a,"int32"),n),i=(0,Ye.p)(s),u=(0,qe.O)(i,o);return(0,Ne.p)(u,"int32")}});var Ze=n(72200),Je=n(29121),et=n(26151),tt=n(99906);let nt;function rt(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,et.pI)(Je.eB,f.BV.backendName)){const n={pixels:e},r={numChannels:t};return f.BV.runKernel(Je.eB,n,r)}const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,d;if(o)l=e.getContext("2d").getImageData(0,0,u,c).data;else if(r||n)l=e.data;else if(s||a||i){if(null==nt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");nt=new OffscreenCanvas(1,1).getContext("2d")}else nt=document.createElement("canvas").getContext("2d");nt.canvas.width=u,nt.canvas.height=c,nt.drawImage(e,0,0,u,c),l=nt.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(l);else{const e=u*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=l[4*n+e]}const p=[c,u,t];return(0,tt.w)(d,p,"int32")}function at(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function st(e,t=3){let n=null;if((0,x.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&at(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return rt(n,t)}async function ot(e,t){let n=(0,je._1)(e,"img","toPixels");if(!(e instanceof _e.es)){const e=n;n=(0,Ne.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=o[c*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*c;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const it=(0,Ke.op)({fromPixels_:rt});function ut(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,N.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let d=0;d<a.length-1;++d)o*=a[d];const i=e.shape,u=a.slice();u.pop();let c=1;for(let d=s;d<n;++d)c*=i[d],u.push(i[d]);const l=[...(0,N.e3)(e.shape).map((e=>e/c)),1].slice(0,s);return[u,o,c,l]}var ct=n(33028);function lt(e,t,n){const r=e.shape.length;N.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),N.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)N.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function dt(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function pt(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function ht(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ft(e,t,n){return n<=e?n:n-(t-1)}function mt(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function gt(e,t,n,r,a,s,o,i,u){const c=e.length;let l=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=yt(o,u,c,r,e),d=bt(i,u,c,a,e),p=ht(s,u,c,e)}else for(let h=0;h<c;h++)l[h]=vt(o,r,s,e,h,u),d[h]=kt(i,a,s,e,h,u),p[h]=xt(s,h,u);return{begin:l,end:d,strides:p}}function yt(e,t,n,r,a){const s=[...a],o=mt(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const a=ft(t,n,i);let o=r[a];e&1<<a&&(o=0),s[i]=o}return s}function bt(e,t,n,r,a){const s=[...a],o=mt(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const a=ft(t,n,i);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const e=a[i];s[i]<0&&(s[i]+=e),s[i]=N.uZ(0,s[i],a[i])}return s}function xt(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function vt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=N.uZ(0,o,u-1),o}function kt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?N.uZ(0,o,u):N.uZ(-1,o,u-1),o}function wt(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function It(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Nt(e,t,n){let r;const a=e.shape.length;let s;return r="number"===typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{N.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(N.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function St(e,t,n,r,a,s,o,i,u){let c;if(null==r?(c=new Array(t.length),c.fill(1)):c=r,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let b=0;b<d.dims;b++)l&&0!==(1<<b&i)&&d.numAddAxisAfterEllipsis++,1<<b&o&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,p);let h=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===p.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(p.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const r=[p.beginMask&1<<b,p.endMask&1<<b],a=[p.strides[b]>0?0:-1,p.strides[b]>0?n:n-1];if(t&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[b];const s=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(t){const e=p.begin[b]<0?n+p.begin[b]:p.begin[b];if(p.begin[b]=e,p.end[b]=p.begin[b]+1,e<0||e>=n)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=Tt(p.begin[b],0,p.strides[b],n,r,a),p.end[b]=Tt(p.end[b],1,p.strides[b],n,r,a);const e=1===p.strides[b]&&0===p.begin[b]&&p.end[b]===n;h=h&&e,f=f&&(0===b&&1===p.strides[b]||e)}else h=h&&1===p.strides[b]&&s,f=f&&(0===b&&1===p.strides[b]||s);let o,i=!1;if(p.beginValid&&p.endValid?(o=p.end[b]-p.begin[b],i=!0):t?(o=1,i=!0):s&&n>=0&&(o=p.strides[b]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==p.strides[b]<0?0:Math.trunc(o/p.strides[b])+(o%p.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){const e=p.finalShapeGatherIndices[b];e>=0?y.push(g[e]):-2===e&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Tt(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}class _t{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Et{constructor(){this.classNameMap={}}static getMap(){return null==Et.instance&&(Et.instance=new Et),Et.instance}static register(e){Et.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ct(e){(0,N.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,N.hu)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,N.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Et.register(e)}var At=n(80747),$t=n(23418);const Rt=.1;function Ft(e,t,n){return null==n&&(n=Ot()),Dt(e,t,((e,t)=>Lt(e,t,n)))}function Ot(){return 32===f.BV.backend.floatPrecision()?.001:Rt}function Dt(e,t,n){let r=!0;if(((0,N.fU)(e)||(0,N.fU)(t))&&(r=!1),(0,N.fU)(e)&&(0,N.fU)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,je.C)(e),r=(0,je.C)(t);if(!(0,N.cO)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=(0,N.fU)(e)?e:(0,N.xH)(e),s=(0,N.fU)(t)?t:(0,N.xH)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let o=0;o<s.length;++o){const e=a[o],t=s[o];if(!n(e,t))throw new Error(`Arrays differ: actual[${o}] = ${e}, expected[${o}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Mt(e,t){e().then((()=>t.fail()),(()=>t()))}function Bt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,N.HD)(e)||(0,N.HD)(e[0])||(0,N.HD)(t)||(0,N.HD)(t[0])?Dt(e,n,((e,t)=>e==t)):Dt(e,t,((e,t)=>Lt(e,t,0)))}function Pt(e,t,n){if(null==n&&(n=Ot()),!Lt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Lt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Vt(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Wt(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function zt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?zt(n):e[t]=(0,$t.encodeString)(n)}return e}const Ut="3.12.0";var Gt=n(4368),Ht=n(56407),jt=n(41274),qt=n(24841),Xt=n(13261),Kt=n(50248),Yt=n(6577),Qt=n(30633),Zt=n(99494);class Jt extends _t{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,Gt.B9)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Qt.pn)(e,t)}dispose(){null!=this.iterations_&&(0,Gt.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Zt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Jt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class en extends Jt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Gt.lu)((()=>(0,Yt.P)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Gt.lu)((()=>(0,Yt.P)(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,Gt.lu)((()=>{const e=(0,Ht.I)((0,qt.d)(s,this.rho),(0,qt.d)((0,Kt.h)(a),1-this.rho)),t=(0,qt.d)((0,jt.h)((0,Xt._)((0,Ht.I)(o,this.epsilon)),(0,Xt._)((0,Ht.I)(s,this.epsilon))),a),n=(0,Ht.I)((0,qt.d)(o,this.rho),(0,qt.d)((0,Kt.h)(t),1-this.rho));s.assign(e),o.assign(n);const i=(0,Ht.I)((0,qt.d)(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Gt.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,Gt.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}en.className="Adadelta",Ct(en);var tn=n(14006);class nn extends Jt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Gt.lu)((()=>(0,tn.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,Gt.lu)((()=>{const e=(0,Ht.I)(s,(0,Kt.h)(a));s.assign(e);const t=(0,Ht.I)((0,qt.d)((0,jt.h)(a,(0,Xt._)((0,Ht.I)(e,f.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Gt.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}nn.className="Adagrad",Ct(nn);var rn=n(33453),an=n(70827);class sn extends Jt{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Gt.lu)((()=>{this.accBeta1=(0,Zt.i)(t).variable(),this.accBeta2=(0,Zt.i)(n).variable()})),null==r&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Gt.lu)((()=>{const n=(0,an.l)(1,this.accBeta1),r=(0,an.l)(1,this.accBeta2);t.forEach(((t,a)=>{const s=f.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,Gt.lu)((()=>(0,Yt.P)(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,Gt.lu)((()=>(0,Yt.P)(s).variable(false)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=(0,Ht.I)((0,qt.d)(i,this.beta1),(0,qt.d)(o,1-this.beta1)),l=(0,Ht.I)((0,qt.d)(u,this.beta2),(0,qt.d)((0,Kt.h)(o),1-this.beta2)),d=(0,jt.h)(c,n),p=(0,jt.h)(l,r);i.assign(c),u.assign(l);const h=(0,Ht.I)((0,qt.d)((0,jt.h)(d,(0,Ht.I)((0,Xt._)(p),this.epsilon)),-this.learningRate),s);s.assign(h)})),this.accBeta1.assign((0,qt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,qt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Gt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Gt.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Gt.lu)((()=>{this.accBeta1.assign((0,rn.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,rn.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}sn.className="Adam",Ct(sn);var on=n(96235),un=n(80632);class cn extends Jt{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Gt.lu)((()=>{this.iteration=(0,Zt.i)(0).variable(),this.accBeta1=(0,Zt.i)(t).variable()})),null==r&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Gt.lu)((()=>{const n=(0,an.l)(1,this.accBeta1),r=(0,jt.h)(-this.learningRate,(0,Ht.I)((0,qt.d)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=f.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,Yt.P)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,Yt.P)(s).variable(false)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=(0,Ht.I)((0,qt.d)(i,this.beta1),(0,qt.d)(o,1-this.beta1)),l=(0,qt.d)(u,this.beta2),d=(0,on.W)(o),p=(0,un.g)(l,d);i.assign(c),u.assign(p);const h=(0,Ht.I)((0,qt.d)((0,jt.h)(r,n),(0,jt.h)(c,(0,Ht.I)(p,this.epsilon))),s);s.assign(h)})),this.iteration.assign((0,Ht.I)(this.iteration,1)),this.accBeta1.assign((0,qt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Gt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Gt.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}cn.className="Adamax",Ct(cn);class ln extends Jt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=f.BV.registeredVariables[t];(0,Gt.lu)((()=>{const e=(0,Ht.I)((0,qt.d)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Gt.Cn)((0,Zt.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}ln.className="SGD",Ct(ln);class dn extends ln{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Zt.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Gt.lu)((()=>(0,Yt.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,Gt.lu)((()=>{let e;const t=(0,Ht.I)((0,qt.d)(this.m,a),s);e=this.useNesterov?(0,Ht.I)((0,qt.d)(this.c,(0,Ht.I)(s,(0,qt.d)(t,this.m))),r):(0,Ht.I)((0,qt.d)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Gt.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}dn.className="Momentum",Ct(dn);class pn extends Jt{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=f.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.BV.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Gt.lu)((()=>(0,Yt.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Gt.lu)((()=>(0,Yt.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Gt.lu)((()=>(0,Yt.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,Gt.lu)((()=>{const e=(0,Ht.I)((0,qt.d)(o,this.decay),(0,qt.d)((0,Kt.h)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,Ht.I)((0,qt.d)(t,this.decay),(0,qt.d)(s,1-this.decay)),u=(0,jt.h)((0,qt.d)(s,this.learningRate),(0,Xt._)((0,an.l)(e,(0,Ht.I)((0,Kt.h)(a),this.epsilon)))),c=(0,Ht.I)((0,qt.d)(i,this.momentum),u);o.assign(e),t.assign(a),i.assign(c);const l=(0,an.l)(r,c);r.assign(l)}else{const e=(0,Ht.I)((0,qt.d)(o,this.decay),(0,qt.d)((0,Kt.h)(s),1-this.decay)),t=(0,Ht.I)((0,qt.d)(i,this.momentum),(0,jt.h)((0,qt.d)(s,this.learningRate),(0,Xt._)((0,Ht.I)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,an.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Gt.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Gt.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Gt.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}pn.className="RMSProp",Ct(pn);class hn{static sgd(e){return new ln(e)}static momentum(e,t,n=!1){return new dn(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new pn(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new sn(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new en(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new cn(e,t,n,r,a)}static adagrad(e,t=.1){return new nn(e,t)}}var fn=n(71221),mn=n(91413),gn=n(49876);const yn={sgd:hn.sgd,momentum:hn.momentum,adadelta:hn.adadelta,adagrad:hn.adagrad,rmsprop:hn.rmsprop,adamax:hn.adamax,adam:hn.adam},bn="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function xn(){return new Promise((e=>bn((()=>e()))))}var vn=n(83591);function kn(e,t){const n=e[0].length;e.forEach(((e,t)=>{N.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),N.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)N.hu(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function wn(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var In=n(2582),Nn=n(19323);const Sn=30;function Tn(e){return e<=Sn?e:(0,N.jP)(e,Math.floor(Math.sqrt(e)))}function _n(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function En(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Cn(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function An(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function $n(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Rn(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const Fn=1.7580993408473768,On=1.0507009873554805,Dn=.3275911,Mn=.254829592,Bn=-.284496736,Pn=1.421413741,Ln=-1.453152027,Vn=1.061405429;var Wn=n(64706);function zn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Un(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Gn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Hn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function jn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function qn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Xn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Kn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Yn="->",Qn=/->/g;function Zn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Qn,"").length)/Yn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split(Yn);(0,N.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),o=s.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<a.length;++d){const e=a[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===i.indexOf(e)&&","!==e&&i.push(e)}const u=new Array(s.length);for(let d=0;d<o;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let e=0;e<s[d].length;++e)u[d].push(i.indexOf(s[d][e]))}const c=i.length,l=[];for(let d=a.length;d<c;++d)l.push(d);return{allDims:i,summedDims:l,idDims:u}}function Jn(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function er(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:(0,N.hu)(r[t[a][n]]===e[n],(()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function tr(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let o=0;o<a;++o)r.push([]);const s=[];for(let o=0;o<n.length;++o){const e=rr(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(r[o].push(t),s.push(t))}return{path:n,steps:r}}function nr(e){return e.every(((e,t)=>e===t))}function rr(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function ar(e,t,n=0){let r=[];if("number"===typeof t)(0,N.hu)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,N.hu)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,N.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function sr(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function or(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function ir(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function ur(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function cr(e,t){return`size ${e} must be non-negative, not ${t}`}function lr(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function dr(e,t){return`Input to reshape is a SparseTensor with ${(0,N.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,N.NA)(t)}. inputShape=${e} outputShape= ${t}`}function pr(e,t){return`Input to reshape is a tensor with ${(0,N.NA)(e)} dense values, but the requested shape has ${(0,N.NA)(t)}. inputShape=${e} outputShape=${t}`}function hr(){return"segment ids must be >= 0"}function fr(){return"segment ids are not increasing"}function mr(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function gr(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function yr(e,t){let n,r=!1;for(e<=Sn?(n=e,r=!0):n=(0,N.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,N.jP)(e,n+1);return n}function br(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function xr(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const o=e.shape[n],i=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<a;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:i}}function vr(e){try{return e.map((e=>(0,$t.decodeString)(e)))}catch(Sr){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Sr}`)}}function kr(e){return e.map((e=>(0,$t.encodeString)(e)))}var wr=n(68329),Ir=n(48333),Nr=n(68713)},29121:function(e,t,n){"use strict";n.d(t,{SY:function(){return r},VG:function(){return a},Sp:function(){return s},mm:function(){return o},Xz:function(){return i},oT:function(){return u},IK:function(){return c},sJ:function(){return l},aJ:function(){return d},M2:function(){return p},qw:function(){return h},jM:function(){return f},Oy:function(){return m},QC:function(){return g},Jh:function(){return y},RO:function(){return b},_k:function(){return x},IM:function(){return v},XL:function(){return k},zw:function(){return w},zv:function(){return I},Ly:function(){return N},eE:function(){return S},RF:function(){return T},gJ:function(){return _},xn:function(){return E},Zz:function(){return C},yj:function(){return A},Eh:function(){return $},mh:function(){return R},wU:function(){return F},wm:function(){return O},x1:function(){return D},o2:function(){return M},ik:function(){return B},mc:function(){return P},TR:function(){return L},iH:function(){return V},Vc:function(){return W},QR:function(){return z},T0:function(){return U},ci:function(){return G},sL:function(){return H},y7:function(){return j},$w:function(){return q},p4:function(){return X},ek:function(){return K},Vn:function(){return Y},oH:function(){return Q},$g:function(){return Z},SX:function(){return J},HE:function(){return ee},Om:function(){return te},hd:function(){return ne},NE:function(){return re},YF:function(){return ae},Y0:function(){return se},vw:function(){return oe},de:function(){return ie},Uy:function(){return ue},OR:function(){return ce},je:function(){return le},sH:function(){return de},qi:function(){return pe},q1:function(){return he},iZ:function(){return fe},Ac:function(){return me},iJ:function(){return ge},Qg:function(){return ye},J_:function(){return be},av:function(){return xe},iW:function(){return ve},r7:function(){return ke},J$:function(){return we},vt:function(){return Ie},CA:function(){return Ne},e7:function(){return Se},Zb:function(){return Te},kU:function(){return _e},PY:function(){return Ee},Vf:function(){return Ce},MZ:function(){return Ae},qC:function(){return $e},eZ:function(){return Re},Hh:function(){return Fe},Yo:function(){return Oe},BM:function(){return De},mT:function(){return Me},OV:function(){return Be},OA:function(){return Pe},OU:function(){return Le},vF:function(){return Ve},q2:function(){return We},c1:function(){return ze},q8:function(){return Ue},jQ:function(){return Ge},Vb:function(){return He},NZ:function(){return je},wY:function(){return qe},ku:function(){return Xe},yQ:function(){return Ke},uv:function(){return Ye},cy:function(){return Qe},W0:function(){return Ze},qW:function(){return Je},we:function(){return et},Qi:function(){return tt},ly:function(){return nt},Kg:function(){return rt},pe:function(){return at},o0:function(){return st},Dl:function(){return ot},e6:function(){return it},xJ:function(){return ut},$H:function(){return ct},qk:function(){return lt},HZ:function(){return dt},dp:function(){return pt},Hm:function(){return ht},_Y:function(){return ft},zb:function(){return mt},Sb:function(){return gt},mK:function(){return yt},e0:function(){return bt},bV:function(){return xt},xQ:function(){return vt},Ph:function(){return kt},oF:function(){return wt},p2:function(){return It},RQ:function(){return Nt},w3:function(){return St},i5:function(){return Tt},a5:function(){return _t},MR:function(){return Et},FK:function(){return Ct},GB:function(){return At},TQ:function(){return $t},L8:function(){return Rt},Gc:function(){return Ft},O3:function(){return Ot},nh:function(){return Dt},YW:function(){return Mt},Zj:function(){return Bt},D2:function(){return Pt},_t:function(){return Lt},bK:function(){return Vt},m2:function(){return Wt},_J:function(){return zt},s1:function(){return Ut},Xk:function(){return Gt},Tr:function(){return Ht},sE:function(){return jt},MI:function(){return qt},n9:function(){return Xt},cW:function(){return Kt},wx:function(){return Yt},G3:function(){return Qt},kp:function(){return Zt},To:function(){return Jt},Qv:function(){return en},Ru:function(){return tn},h8:function(){return nn},eB:function(){return rn},b9:function(){return an},us:function(){return sn},_V:function(){return on},lu:function(){return un}});const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",k="BatchMatMul",w="BatchToSpaceND",I="Bincount",N="BroadcastTo",S="BroadcastArgs",T="Cast",_="Ceil",E="ClipByValue",C="Complex",A="ComplexAbs",$="Concat",R="Conv2D",F="Conv2DBackpropFilter",O="Conv2DBackpropInput",D="Conv3D",M="Conv3DBackpropFilterV2",B="Conv3DBackpropInputV2",P="Cos",L="Cosh",V="Cumsum",W="CropAndResize",z="DenseBincount",U="DepthToSpace",G="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",j="DepthwiseConv2dNativeBackpropInput",q="Diag",X="Dilation2D",K="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Q="RealDiv",Z="Einsum",J="Elu",ee="EluGrad",te="Erf",ne="Equal",re="Exp",ae="ExpandDims",se="Expm1",oe="FFT",ie="Fill",ue="FlipLeftRight",ce="Floor",le="FloorDiv",de="FusedBatchNorm",pe="GatherV2",he="GatherNd",fe="Greater",me="GreaterEqual",ge="Identity",ye="IFFT",be="Imag",xe="IsFinite",ve="IsInf",ke="IsNan",we="LeakyRelu",Ie="Less",Ne="LessEqual",Se="LinSpace",Te="Log",_e="Log1p",Ee="LogicalAnd",Ce="LogicalNot",Ae="LogicalOr",$e="LogSoftmax",Re="LRN",Fe="LRNGrad",Oe="Max",De="Maximum",Me="MaxPool",Be="MaxPoolGrad",Pe="MaxPool3D",Le="MaxPool3DGrad",Ve="MaxPoolWithArgmax",We="Mean",ze="Min",Ue="Minimum",Ge="MirrorPad",He="Mod",je="Multinomial",qe="Multiply",Xe="Neg",Ke="NotEqual",Ye="NonMaxSuppressionV3",Qe="NonMaxSuppressionV4",Ze="NonMaxSuppressionV5",Je="OnesLike",et="OneHot",tt="Pack",nt="PadV2",rt="Pool",at="Pow",st="Prelu",ot="Prod",it="Range",ut="Real",ct="Reciprocal",lt="Relu",dt="Reshape",pt="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",ft="ResizeBilinear",mt="ResizeBilinearGrad",gt="Relu6",yt="Reverse",bt="Round",xt="Rsqrt",vt="ScatterNd",kt="Select",wt="Selu",It="Slice",Nt="Sin",St="Sinh",Tt="Sign",_t="Sigmoid",Et="Softplus",Ct="Sqrt",At="Sum",$t="SpaceToBatchND",Rt="SplitV",Ft="Softmax",Ot="SparseFillEmptyRows",Dt="SparseReshape",Mt="SparseSegmentMean",Bt="SparseSegmentSum",Pt="SparseToDense",Lt="SquaredDifference",Vt="Square",Wt="StridedSlice",zt="StringNGrams",Ut="StringSplit",Gt="StringToHashBucketFast",Ht="Sub",jt="Tan",qt="Tanh",Xt="Tile",Kt="TopK",Yt="Transform",Qt="Transpose",Zt="Unique",Jt="Unpack",en="UnsortedSegmentSum",tn="ZerosLike",nn="Step",rn="FromPixels",an="RotateWithOffset",sn="_FusedMatMul",on="FusedConv2D",un="FusedDepthwiseConv2D"},26151:function(e,t,n){"use strict";n.d(t,{pI:function(){return u},uk:function(){return c},tr:function(){return l},wC:function(){return d},Li:function(){return p},nE:function(){return h},bt:function(){return f},T3:function(){return m}});var r=n(22885),a=n(55938),s=n(64706);const o=(0,a.R)("kernelRegistry",(()=>new Map)),i=(0,a.R)("gradRegistry",(()=>new Map));function u(e,t){const n=g(e,t);return o.get(n)}function c(e){return i.get(e)}function l(e){const t=o.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=g(t,n);o.has(r)&&s.Z(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function p(e){const{kernelName:t}=e;i.has(t)&&(0,r.OB)().getBool("DEBUG")&&s.Z(`Overriding the gradient for '${t}'`),i.set(t,e)}function h(e,t){const n=g(e,t);if(!o.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);o.delete(n)}function f(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function m(e,t){l(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},64706:function(e,t,n){"use strict";n.d(t,{Z:function(){return a},c:function(){return s}});var r=n(22885);function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},96235:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(a.yj,e)}{const e={x:t};return r.BV.runKernel(a.SY,e)}}})},17839:function(e,t,n){"use strict";n.d(t,{K:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({acos_:function(e){const t={x:(0,s._1)(e,"x","acos")};return r.BV.runKernel(a.VG,t)}})},91470:function(e,t,n){"use strict";n.d(t,{_:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({acosh_:function(e){const t={x:(0,s._1)(e,"x","acosh")};return r.BV.runKernel(a.Sp,t)}})},56407:function(e,t,n){"use strict";n.d(t,{I:function(){return i}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740);const i=(0,n(2668).op)({add_:function(e,t){let n=(0,o._1)(e,"a","add"),i=(0,o._1)(t,"b","add");[n,i]=(0,s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.mm,u)}})},13135:function(e,t,n){"use strict";n.d(t,{Q:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({addN_:function(e){o.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),o.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!o.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const i=t;return r.BV.runKernel(a.Xz,i)}})},90781:function(e,t,n){"use strict";n.d(t,{$:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({all_:function(e,t=null,n=!1){const o={x:(0,s._1)(e,"x","all","bool")},i={axis:t,keepDims:n};return r.BV.runKernel(a.oT,o,i)}})},92998:function(e,t,n){"use strict";n.d(t,{Y:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({any_:function(e,t=null,n=!1){const o={x:(0,s._1)(e,"x","any","bool")},i={axis:t,keepDims:n};return r.BV.runKernel(a.IK,o,i)}})},40047:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMax")},o={axis:t};return r.BV.runKernel(a.sJ,n,o)}})},27394:function(e,t,n){"use strict";n.d(t,{v:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMin")},o={axis:t};return r.BV.runKernel(a.aJ,n,o)}})},72421:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({asin_:function(e){const t={x:(0,s._1)(e,"x","asin")};return r.BV.runKernel(a.M2,t)}})},21891:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({asinh_:function(e){const t={x:(0,s._1)(e,"x","asinh")};return r.BV.runKernel(a.qw,t)}})},77037:function(e,t,n){"use strict";n.d(t,{z:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({atan_:function(e){const t={x:(0,s._1)(e,"x","atan")};return r.BV.runKernel(a.jM,t)}})},29812:function(e,t,n){"use strict";n.d(t,{f:function(){return i}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740);const i=(0,n(2668).op)({atan2_:function(e,t){let n=(0,o._1)(e,"a","atan2"),i=(0,o._1)(t,"b","atan2");[n,i]=(0,s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.QC,u)}})},80369:function(e,t,n){"use strict";n.d(t,{C:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({atanh_:function(e){const t={x:(0,s._1)(e,"x","atanh")};return r.BV.runKernel(a.Oy,t)}})},15176:function(e,t,n){"use strict";n.d(t,{w:function(){return d}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(62271),u=n(2582),c=n(2668),l=n(4968);const d=(0,c.op)({avgPool_:function(e,t,n,c,d){const p=(0,s._1)(e,"x","avgPool","float32");o.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let h=p,f=!1;3===p.rank&&(f=!0,h=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===h.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`)),u.m("avgPool",c,d);const m={x:h},g={filterSize:t,strides:n,pad:c,dimRoundingMode:d};let y=r.BV.runKernel(a.Jh,m,g);return y=(0,i.p)(y,p.dtype),f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},61749:function(e,t,n){"use strict";n.d(t,{u:function(){return d}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(2582),u=n(62271),c=n(2668),l=n(4968);const d=(0,c.op)({avgPool3d_:function(e,t,n,c,d,p="NDHWC"){const h=(0,s._1)(e,"x","avgPool3d","float32");let f=h,m=!1;4===h.rank&&(m=!0,f=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),o.hu(5===f.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${f.rank}.`)),o.hu("NDHWC"===p,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${p}`)),(0,i.m)("avgPool3d",c,d);const g={x:f},y={filterSize:t,strides:n,pad:c,dimRoundingMode:d,dataFormat:p};let b=r.BV.runKernel(a._k,g,y);return b=(0,u.p)(b,f.dtype),m?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},83591:function(e,t,n){"use strict";n.d(t,{YB:function(){return a},Vh:function(){return s},kz:function(){return o},rv:function(){return i},lB:function(){return u},Q3:function(){return c},LJ:function(){return l},sY:function(){return d}});var r=n(20569);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function o(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function c(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function l(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},28441:function(e,t,n){"use strict";n.d(t,{E:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const i=(0,s._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));o.hu(i.rank>=1+t.length,(()=>`input rank is ${i.rank} but should be > than blockShape.length ${t.length}`)),o.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),o.hu(i.shape[0]%u===0,(()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const c={x:i},l={blockShape:t,crops:n};return r.BV.runKernel(a.zw,c,l)}})},40094:function(e,t,n){"use strict";n.d(t,{t:function(){return u}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,c,l){null==l&&(l=.001);const d=(0,s._1)(e,"x","batchNorm"),p=(0,s._1)(t,"mean","batchNorm"),h=(0,s._1)(n,"variance","batchNorm");let f,m;null!=c&&(f=(0,s._1)(c,"scale","batchNorm")),null!=u&&(m=(0,s._1)(u,"offset","batchNorm")),o.hu(p.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.X)(e,[1,1,1,e.size]):2===e.rank?(0,i.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:p,variance:h},y={varianceEpsilon:l},b=r.BV.runKernel(a.sH,g,y);return(0,i.X)(b,d.shape)}})},93865:function(e,t,n){"use strict";n.d(t,{y:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({bincount_:function(e,t,n){const i=(0,s._1)(e,"x","bincount"),u=(0,s._1)(t,"weights","bincount");o.hu("int32"===i.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${i.dtype}`)),o.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),o.hu(u.size===i.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${i.shape}, weights shape: ${u.shape}.`));const c={x:i,weights:u},l={size:n};return r.BV.runKernel(a.zv,c,l)}})},88194:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({broadcastArgs_:function(e,t){const n=(0,s._1)(e,"s0","broadcastArgs","int32"),o=(0,s._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==o.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${o.rank}`);const i={s0:n,s1:o};return r.BV.runKernel(a.eE,i)}})},68247:function(e,t,n){"use strict";n.d(t,{U:function(){return c}});var r=n(50196),a=n(29121),s=n(43740),o=n(8723),i=n(2668),u=n(4968);const c=(0,i.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const i=n.shape;if(t.some((e=>!(e>0)||e%1!==0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const c=n.shape,l=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${t}].`);if(0===l.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.d)(n);const d={x:n},p={reps:l};return r.BV.runKernel(a.n9,d,p)}})},72200:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}n.r(t),n.d(t,{getBroadcastDims:function(){return r},getReductionAxes:function(){return a},assertAndGetBroadcastShape:function(){return s}})},72657:function(e,t,n){"use strict";n.d(t,{f:function(){return s}});var r=n(40974),a=n(20569);function s(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},62271:function(e,t,n){"use strict";n.d(t,{p:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!o.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.BV.runKernel(a.RF,i,u)}})},6825:function(e,t,n){"use strict";n.d(t,{m:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({ceil_:function(e){const t={x:(0,s._1)(e,"x","ceil","float32")};return r.BV.runKernel(a.gJ,t)}})},42279:function(e,t,n){"use strict";n.d(t,{i:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({clipByValue_:function(e,t,n){const i=(0,s._1)(e,"x","clipByValue");o.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:i},c={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(a.xn,u,c)}})},8723:function(e,t,n){"use strict";n.d(t,{d:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(a.iJ,t)}})},61661:function(e,t,n){"use strict";n.d(t,{P:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),i=(0,s._1)(t,"imag","complex");o.k5(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.BV.runKernel(a.Zz,u)}})},46884:function(e,t,n){"use strict";n.d(t,{z:function(){return u}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,o.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,i.d)(n[0]);const u=n,c={axis:t};return r.BV.runKernel(a.Eh,u,c)}})},11355:function(e,t,n){"use strict";n.d(t,{P:function(){return c}});var r=n(43740),a=n(20569),s=n(64794),o=n(2582),i=n(2668),u=n(4968);const c=(0,i.op)({conv1d_:function(e,t,n,i,c="NWC",l=1,d){const p=(0,r._1)(e,"x","conv1d"),h=(0,r._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),a.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.hu(3===h.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`)),o.m("conv1d",i,d),a.hu(f.shape[2]===h.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`)),a.hu(o.jT(n,l),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`)),a.hu("NWC"===c,(()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`));const g=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,l],v=(0,s.T)(y,g,b,i,"NHWC",x,d);return m?(0,u.X)(v,[v.shape[2],v.shape[3]]):(0,u.X)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},64794:function(e,t,n){"use strict";n.d(t,{T:function(){return l}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({conv2d_:function(e,t,n,u,l="NHWC",d=[1,1],p){const h=(0,s._1)(e,"x","conv2d","float32"),f=(0,s._1)(t,"filter","conv2d","float32");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),o.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),i.m("conv2d",u,p);const y="NHWC"===l?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),o.hu(i.jT(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p},v=r.BV.runKernel(a.mh,b,x);return g?(0,c.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},39832:function(e,t,n){"use strict";n.d(t,{_:function(){return c}});var r=n(50196),a=n(29121),s=n(20569),o=n(2582),i=n(2668),u=n(4968);const c=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,c,l="NHWC",d){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let p=e,h=t,f=!1;3===t.rank&&(f=!0,h=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),s.hu(4===p.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`)),s.hu(4===h.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`)),s.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===l?p[3]:p[1],g="NHWC"===l?h.shape[3]:h.shape[1];s.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),s.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),o.m("conv2dDerInput",c,d);const y={dy:h,filter:n},b={strides:i,pad:c,dataFormat:l,dimRoundingMode:d,inputShape:p},x=r.BV.runKernel(a.wm,y,b);return f?(0,u.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},71405:function(e,t,n){"use strict";n.d(t,{b:function(){return s}});var r=n(43740),a=n(39832);const s=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,s,o,i){const u=(0,r._1)(e,"x","conv2dTranspose"),c=(0,r._1)(t,"filter","conv2dTranspose");return(0,a._)(n,u,c,s,o,"NHWC",i)}})},70473:function(e,t,n){"use strict";n.d(t,{p:function(){return l}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({conv3d_:function(e,t,n,u,l="NDHWC",d=[1,1,1]){const p=(0,s._1)(e,"x","conv3d"),h=(0,s._1)(t,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),o.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),o.hu(5===h.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${h.rank}.`)),o.hu(f.shape[4]===h.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${h.shape[3]}.`)),o.hu((0,i.jT)(n,d),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),o.hu("NDHWC"===l,(()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`));const g={x:f,filter:h},y={strides:n,pad:u,dataFormat:l,dilations:d},b=r.BV.runKernel(a.x1,g,y);return m?(0,c.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},2582:function(e,t,n){"use strict";n.d(t,{Rf:function(){return a},Xw:function(){return s},pl:function(){return o},Ix:function(){return i},jw:function(){return u},aO:function(){return c},I0:function(){return f},jT:function(){return m},sl:function(){return g},m:function(){return y}});var r=n(20569);function a(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,g(a))}function s(e,t,n,r,a,s,o="channelsLast"){const[u,c]=l(t);let d;if("channelsLast"===o)d=[u,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);d=[u,c,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function o(e,t,n,r,a,s,o="NDHWC"){const[i,c,l]=d(t);let p,h;if("NDHWC"===o)h="channelsLast",p=[i,c,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",p=[i,c,l,e[1],e[1]]}return u(e,p,n,r,a,!1,h,s)}function i(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[u,d,f,m]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,m,d,f]=e}const[g,y,,b]=t,[x,v]=l(n),[k,w]=l(r),I=p(g,k),N=p(y,w),{padInfo:S,outHeight:T,outWidth:_}=function(e,t,n,r,a,s,o,i,u){let l,d,p;if("number"===typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=c(e,t,n));const s=e[0],o=e[1],i=h((s-t+2*r)/n+1,a),u=h((o-t+2*r)/n+1,a);return[i,u]}([t,n],s,r,e,i);d=a[0],p=a[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),i=Math.max(0,(p-1)*a+o-n),u=Math.floor(e/2),c=e-u,h=Math.floor(i/2);l={top:u,bottom:c,left:h,right:i-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((n-o+1)/a);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const c="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];l={top:c,bottom:f,left:m,right:g,type:0===c&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=h((t-s+c+f)/r+1,i),p=h((n-o+m+g)/a+1,i)}}return{padInfo:l,outHeight:d,outWidth:p}}(a,d,f,x,v,I,N,s,i),E=o?b*m:b;let C;return"channelsFirst"===i?C=[u,E,T,_]:"channelsLast"===i&&(C=[u,T,_,E]),{batchSize:u,dataFormat:i,inHeight:d,inWidth:f,inChannels:m,outHeight:T,outWidth:_,outChannels:E,padInfo:S,strideHeight:x,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationHeight:k,dilationWidth:w,inShape:e,outShape:C,filterShape:t}}function u(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,l,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,g,l,f,m]=e}const[y,b,x,,v]=t,[k,w,I]=d(n),[N,S,T]=d(r),_=p(y,N),E=p(b,S),C=p(x,T),{padInfo:A,outDepth:$,outHeight:R,outWidth:F}=function(e,t,n,r,a,s,o,i,u,l,d){let p,f,m,g;if("number"===typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=c(e,t,r));const o=e[0],i=e[1],u=e[2],l=h((o-t+2*a)/r+1,s),d=h((i-t+2*a)/r+1,s),p=h((u-t+2*a)/r+1,s);return[l,d,p,n]}([t,n,r,1],i,1,a,e,d);f=s[0],m=s[1],g=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/o);const e=(f-1)*a+i-t,c=(m-1)*s+u-n,d=(g-1)*o+l-r,h=Math.floor(e/2),y=e-h,b=Math.floor(c/2),x=c-b,v=Math.floor(d/2);p={top:b,bottom:x,left:v,right:d-v,front:h,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-i+1)/a),m=Math.ceil((n-u+1)/s),g=Math.ceil((r-l+1)/o)}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(a,l,f,m,k,w,I,_,E,C,i),O=s?v*g:v;let D;return"channelsFirst"===o?D=[u,O,$,R,F]:"channelsLast"===o&&(D=[u,$,R,F,O]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:f,inWidth:m,inChannels:g,outDepth:$,outHeight:R,outWidth:F,outChannels:O,padInfo:A,strideDepth:k,strideHeight:w,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:_,effectiveFilterHeight:E,effectiveFilterWidth:C,dilationDepth:N,dilationHeight:S,dilationWidth:T,inShape:e,outShape:D,filterShape:t}}function c(e,t,n,r=1){const a=p(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function l(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=l(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function y(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},70173:function(e,t,n){"use strict";n.d(t,{m:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({cos_:function(e){const t={x:(0,s._1)(e,"x","cos","float32")};return r.BV.runKernel(a.mc,t)}})},2699:function(e,t,n){"use strict";n.d(t,{f:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({cosh_:function(e){const t={x:(0,s._1)(e,"x","cosh","float32")};return r.BV.runKernel(a.TR,t)}})},37405:function(e,t,n){"use strict";n.d(t,{z:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,o=!1){const i={x:(0,s._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:o};return r.BV.runKernel(a.iH,i,u)}})},75746:function(e,t,n){"use strict";n.d(t,{p:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({denseBincount_:function(e,t,n,i=!1){const u=(0,s._1)(e,"x","denseBincount"),c=(0,s._1)(t,"weights","denseBincount");o.hu("int32"===u.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`)),o.hu(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),o.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),o.hu(c.size===u.size||0===c.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${c.shape}.`));const l={x:u,weights:c},d={size:n,binaryOutput:i};return r.BV.runKernel(a.QR,l,d)}})},89112:function(e,t,n){"use strict";n.d(t,{n:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const i=(0,s._1)(e,"x","depthToSpace","float32"),u="NHWC"===n?i.shape[1]:i.shape[2],c="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];o.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),o.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${i.shape}`)),o.hu(c*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${i.shape}`)),o.hu(l%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${i.shape}`));const d={x:i},p={blockSize:t,dataFormat:n};return r.BV.runKernel(a.T0,d,p)}})},64718:function(e,t,n){"use strict";n.d(t,{B:function(){return l}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,l="NHWC",d=[1,1],p){const h=(0,s._1)(e,"x","depthwiseConv2d","float32"),f=(0,s._1)(t,"filter","depthwiseConv2d","float32");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),o.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.hu(m.shape[3]===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`)),i.m("depthwiseConv2d",u,p);const y={x:m,filter:f},b={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p},x=r.BV.runKernel(a.ci,y,b);return g?(0,c.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},70557:function(e,t,n){"use strict";n.d(t,{W:function(){return c}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(2668),u=n(4968);const c=(0,i.op)({dilation2d_:function(e,t,n,i,c=[1,1],l="NHWC"){const d=(0,s._1)(e,"x","dilation2d"),p=(0,s._1)(t,"filter","dilation2d");o.hu(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),o.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),o.hu("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let h=d,f=!1;3===d.rank&&(h=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:h,filter:p},g={strides:n,pad:i,dilations:c},y=r.BV.runKernel(a.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},41274:function(e,t,n){"use strict";n.d(t,{h:function(){return u}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,o._1)(e,"a","div"),u=(0,o._1)(t,"b","div");if([n,u]=(0,s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,i.q)(n,u);const c={a:n,b:u};return r.BV.runKernel(a.oH,c,{})}})},49322:function(e,t,n){"use strict";n.d(t,{N:function(){return l}});var r=n(80747),a=n(43740),s=n(41274),o=n(26477),i=n(2668),u=n(95912),c=n(6577);const l=(0,i.op)({divNoNan_:function(e,t){let n=(0,a._1)(e,"a","div"),i=(0,a._1)(t,"b","div");[n,i]=(0,r.makeTypesMatch)(n,i);const l=(0,s.h)(n,i),d=(0,c.P)(l),p=(0,o.D)(i,d);return(0,u.a)(p,d,l)}})},94653:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"einsum"))),o={equation:e};return r.BV.runKernel(a.$g,n,o)}})},83233:function(e,t,n){"use strict";n.d(t,{p:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu","float32")};return r.BV.runKernel(a.SX,t)}})},26477:function(e,t,n){"use strict";n.d(t,{D:function(){return u}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,o._1)(e,"a","equal","string_or_numeric"),u=(0,o._1)(t,"b","equal","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a.hd,c)}})},34650:function(e,t,n){"use strict";n.d(t,{q:function(){return u}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(62271);const u=(0,n(2668).op)({erf_:function(e){let t=(0,s._1)(e,"x","erf");o.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.p)(t,"float32"));const n={x:t};return r.BV.runKernel(a.Om,n)}})},44842:function(e,t,n){"use strict";n.d(t,{Q:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({exp_:function(e){const t={x:(0,s._1)(e,"x","exp")};return r.BV.runKernel(a.NE,t)}})},81300:function(e,t,n){"use strict";n.d(t,{d:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,s._1)(e,"x","expandDims","string_or_numeric");o.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},u={dim:t};return r.BV.runKernel(a.YF,i,u)}})},53426:function(e,t,n){"use strict";n.d(t,{t:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({expm1_:function(e){const t={x:(0,s._1)(e,"x","expm1")};return r.BV.runKernel(a.Y0,t)}})},14006:function(e,t,n){"use strict";n.d(t,{h:function(){return s}});var r=n(50196),a=n(29121);function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.BV.runKernel(a.de,{},s)}},26943:function(e,t,n){"use strict";n.d(t,{G:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({floor_:function(e){const t={x:(0,s._1)(e,"x","floor","float32")};return r.BV.runKernel(a.OR,t)}})},9165:function(e,t,n){"use strict";n.d(t,{q:function(){return i}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740);const i=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,o._1)(e,"a","floorDiv"),i=(0,o._1)(t,"b","floorDiv");[n,i]=(0,s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.je,u)}})},91423:function(e,t,n){"use strict";n.r(t),n.d(t,{conv2d:function(){return b},depthwiseConv2d:function(){return w},matMul:function(){return N}});var r=n(50196),a=n(30633),s=n(29121),o=n(80747),i=n(43740),u=n(20569),c=n(56407),l=n(72200),d=n(64794),p=n(2582),h=n(2668),f=n(4968);const m=(0,h.op)({conv2DBackpropFilter_:function(e,t,n,a,o,i="NHWC",c){let l=e;3===e.rank&&(l=(0,f.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,f.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),u.hu(4===l.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`)),u.hu(4===d.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`)),u.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const h="NHWC"===i?l.shape[3]:l.shape[1],m="NHWC"===i?d.shape[3]:d.shape[1];u.hu(h===n[2],(()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${n[2]}.`)),u.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),p.m("conv2dDerFilter",o,c);const g={x:l,dy:d},y={strides:a,pad:o,dataFormat:i,dimRoundingMode:c,filterShape:n};return r.BV.runKernel(s.wU,g,y)}});var g=n(39832),y=n(19323);const b=(0,h.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:h,dataFormat:b="NHWC",dilations:x=[1,1],dimRoundingMode:v,bias:k,activation:w="linear",preluActivationWeights:I,leakyreluAlpha:N}){if(w=w||"linear",!1===(0,y.uy)(r.BV.state.gradientDepth,w)){let r=(0,d.T)(e,t,n,h,b,x,v);return null!=k&&(r=(0,c.I)(r,k)),(0,y.QH)(r,w,I,N)}const S=(0,i._1)(e,"x","conv2d","float32"),T=(0,i._1)(t,"filter","conv2d","float32");let _=S,E=!1;3===S.rank&&(E=!0,_=(0,f.X)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),u.hu(4===_.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${_.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${T.rank}.`)),p.m("fused conv2d",h,v),u.hu(_.shape[3]===T.shape[2],(()=>`Error in conv2d: depth of input (${_.shape[3]}) must match input depth for filter ${T.shape[2]}.`)),u.hu(p.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),u.hu("NHWC"===b,(()=>`Error in conv2d: got dataFormat of ${b} but only NHWC is currently supported.`));const C=p.Ix(_.shape,T.shape,n,x,h,v);let A,$;null!=k&&(A=(0,i._1)(k,"bias","fused conv2d"),[A]=(0,o.makeTypesMatch)(A,S),l.assertAndGetBroadcastShape(C.outShape,A.shape)),null!=I&&($=(0,i._1)(I,"prelu weights","fused conv2d"));const R=(e,t)=>{const[r,a,s,o]=t,i=(0,y.Fr)(e,s,w);u.hu(p.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const c=[(0,g._)(a.shape,i,r,n,h),m(a,i,r.shape,n,h)];if(null!=o){const e=(0,y.pf)(o,i);c.push(e)}return c},F={x:_,filter:T,bias:A,preluActivationWeights:$},O={strides:n,pad:h,dataFormat:b,dilations:x,dimRoundingMode:v,activation:w,leakyreluAlpha:N};if(null==k){return(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s._V,F,O);return n([t,e,a]),E&&(a=(0,f.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:R}}))(_,T)}return(0,a.cb)(((e,t,n,a)=>{let o=r.BV.runKernel(s._V,F,O);return a([t,e,o,n]),E&&(o=(0,f.X)(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:R}}))(_,T,A)}});var x=n(64718);const v=(0,h.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,i=[1,1],u){let c=e;3===e.rank&&(c=(0,f.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=(0,f.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={x:c,dy:l},p={strides:a,pad:o,dimRoundingMode:u,dilations:i,filterShape:n};return r.BV.runKernel(s.sL,d,p)}});const k=(0,h.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,i=[1,1],u){let c=t,l=!1;3===t.rank&&(l=!0,c=(0,f.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={dy:c,filter:n},p={strides:a,pad:o,dimRoundingMode:u,dilations:i,inputShape:e},h=r.BV.runKernel(s.y7,d,p);return l?(0,f.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const w=(0,h.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:d,dataFormat:h="NHWC",dilations:m=[1,1],dimRoundingMode:g,bias:b,activation:w="linear",preluActivationWeights:I,leakyreluAlpha:N}){if(!1===(0,y.uy)(r.BV.state.gradientDepth,w)){let r=(0,x.B)(e,t,n,d,h,m,g);return null!=b&&(r=(0,c.I)(r,b)),(0,y.QH)(r,w,I,N)}const S=(0,i._1)(e,"x","depthwiseConv2d","float32"),T=(0,i._1)(t,"filter","depthwiseConv2d","float32");let _=S,E=!1;3===S.rank&&(E=!0,_=(0,f.X)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),u.hu(4===_.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${_.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${T.rank}.`)),u.hu(_.shape[3]===T.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${_.shape[3]}) must match the inChannels dimension in filter ${T.shape[2]}.`)),null==m&&(m=[1,1]),u.hu(p.jT(n,m),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${m}'`)),p.m("fused depthwiseConv2d",d,g);const C=p.Ix(_.shape,T.shape,n,m,d,g,!0);let A,$;null!=b&&(A=(0,i._1)(b,"bias","fused conv2d"),[A]=(0,o.makeTypesMatch)(A,S),l.assertAndGetBroadcastShape(C.outShape,A.shape)),null!=I&&($=(0,i._1)(I,"prelu weights","fused depthwiseConv2d"));const R=(e,t)=>{u.hu(p.I0(m),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${m}'`));const[r,a,s,o]=t,i=(0,y.Fr)(e,s,w),c=k(a.shape,i,r,n,d,m,g),l=v(a,i,r.shape,n,d,m,g);if(null!=o){return[c,l,(0,y.pf)(A,i)]}return[c,l]},F={x:_,filter:T,bias:A,preluActivationWeights:$},O={strides:n,pad:d,dataFormat:h,dilations:m,dimRoundingMode:g,activation:w,leakyreluAlpha:N};if(null==b){return(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s.lu,F,O);return n([t,e,a]),E&&(a=(0,f.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:R}}))(_,T)}return(0,a.cb)(((e,t,n,a)=>{let o=r.BV.runKernel(s.lu,F,O);return a([t,e,o,n]),E&&(o=(0,f.X)(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:R}}))(_,T,A)}});var I=n(28687);const N=(0,h.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:d=!1,bias:p,activation:h="linear",preluActivationWeights:m,leakyreluAlpha:g}){if(!1===(0,y.uy)(r.BV.state.gradientDepth,h)){let r=(0,I.O)(e,t,n,d);return null!=p&&(r=(0,c.I)(r,p)),(0,y.QH)(r,h,m,g)}let b=(0,i._1)(e,"a","fused matMul"),x=(0,i._1)(t,"b","fused matMul");[b,x]=(0,o.makeTypesMatch)(b,x);const v=n?b.shape[b.rank-2]:b.shape[b.rank-1],k=d?x.shape[x.rank-1]:x.shape[x.rank-2],w=n?b.shape[b.rank-1]:b.shape[b.rank-2],N=d?x.shape[x.rank-2]:x.shape[x.rank-1],S=b.shape.slice(0,-2),T=x.shape.slice(0,-2),_=u.NA(S),E=u.NA(T);u.hu(v===k,(()=>`Error in fused matMul: inner shapes (${v}) and (${k}) of Tensors with shapes ${b.shape} and ${x.shape} and transposeA=${n} and transposeB=${d} must match.`));const C=l.assertAndGetBroadcastShape(b.shape.slice(0,-2),x.shape.slice(0,-2)).concat([w,N]),A=n?(0,f.X)(b,[_,v,w]):(0,f.X)(b,[_,w,v]),$=d?(0,f.X)(x,[E,N,k]):(0,f.X)(x,[E,k,N]);let R,F;null!=p&&(R=(0,i._1)(p,"bias","fused matMul"),[R]=(0,o.makeTypesMatch)(R,b),l.assertAndGetBroadcastShape(C,R.shape)),null!=m&&(F=(0,i._1)(m,"prelu weights","fused matMul"));const O=(e,t)=>{const[r,a,s,o]=t,i=(0,y.Fr)((0,f.X)(e,s.shape),s,h);let u,c;if(n||d?!n&&d?(u=(0,I.O)(i,a,!1,!1),c=(0,I.O)(i,r,!0,!1)):n&&!d?(u=(0,I.O)(a,i,!1,!0),c=(0,I.O)(r,i,!1,!1)):(u=(0,I.O)(a,i,!0,!0),c=(0,I.O)(i,r,!0,!0)):(u=(0,I.O)(i,a,!1,!0),c=(0,I.O)(r,i,!0,!1)),null!=p){return[u,c,(0,y.pf)(o,i)]}return[u,c]},D={a:A,b:$,bias:R,preluActivationWeights:F},M={transposeA:n,transposeB:d,activation:h,leakyreluAlpha:g};if(null==p){return(0,a.cb)(((e,t,n)=>{const a=r.BV.runKernel(s.us,D,M);return n([e,t,a]),{value:(0,f.X)(a,C),gradFunc:O}}))(A,$)}return(0,a.cb)(((e,t,n,a)=>{const o=r.BV.runKernel(s.us,D,M);return a([e,t,o,n]),{value:(0,f.X)(o,C),gradFunc:O}}))(A,$,R)}})},19323:function(e,t,n){"use strict";n.d(t,{Fr:function(){return f},pf:function(){return m},QH:function(){return g},uy:function(){return y}});var r=n(72200),a=n(83233),s=n(99133),o=n(24841),i=n(98151),u=n(7409),c=n(83582),l=n(4968),d=n(30625),p=n(71901),h=n(15475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=(0,h.S)(n,a)),(0,l.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,c.b)(e);if("prelu"===t)return(0,i.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,r);if("sigmoid"===t)return(0,d.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},24926:function(e,t,n){"use strict";n.d(t,{I:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({gather_:function(e,t,n=0,o=0){const i={x:(0,s._1)(e,"x","gather"),indices:(0,s._1)(t,"indices","gather","int32")},u={axis:n,batchDims:o};return r.BV.runKernel(a.qi,i,u)}})},87494:function(e,t,n){"use strict";n.d(t,{d:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({gatherND_:function(e,t){const n=(0,s._1)(t,"indices","gatherND","int32"),o={params:(0,s._1)(e,"x","gatherND","string_or_numeric"),indices:n};return r.BV.runKernel(a.q1,o)}})},20636:function(e,t,n){"use strict";n.d(t,{p:function(){return u}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,o._1)(e,"a","greater","string_or_numeric"),u=(0,o._1)(t,"b","greater","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a.iZ,c)}})},17630:function(e,t,n){"use strict";n.d(t,{b:function(){return u}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,o._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,o._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a.Ac,c)}})},64386:function(e,t,n){"use strict";n.d(t,{a:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({imag_:function(e){const t={input:(0,s._1)(e,"input","imag")};return r.BV.runKernel(a.J_,t)}})},96230:function(e,t,n){"use strict";n.d(t,{i:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,s._1)(e,"x","isNaN")};return r.BV.runKernel(a.r7,t)}})},99133:function(e,t,n){"use strict";n.d(t,{h:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s._1)(e,"x","leakyRelu")},o={alpha:t};return r.BV.runKernel(a.J$,n,o)}})},86573:function(e,t,n){"use strict";n.d(t,{d:function(){return u}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,o._1)(e,"a","less","string_or_numeric"),u=(0,o._1)(t,"b","less","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a.vt,c)}})},50624:function(e,t,n){"use strict";n.d(t,{z:function(){return u}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,o._1)(e,"a","lessEqual","string_or_numeric"),u=(0,o._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a.CA,c)}})},14135:function(e,t,n){"use strict";n.d(t,{S:function(){return s}});var r=n(50196),a=n(29121);function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r.BV.runKernel(a.e7,{},s)}},79648:function(e,t,n){"use strict";n.d(t,{G:function(){return c}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(2668),u=n(4968);const c=(0,i.op)({localResponseNormalization_:function(e,t=5,n=1,i=1,c=.5){const l=(0,s._1)(e,"x","localResponseNormalization");o.hu(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),o.hu(o.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=l,p=!1;3===l.rank&&(p=!0,d=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const h={x:d},f={depthRadius:t,bias:n,alpha:i,beta:c},m=r.BV.runKernel(a.eZ,h,f);return p?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},82597:function(e,t,n){"use strict";n.d(t,{c:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({log_:function(e){const t={x:(0,s._1)(e,"x","log","float32")};return r.BV.runKernel(a.Zb,t)}})},17474:function(e,t,n){"use strict";n.d(t,{K:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({log1p_:function(e){const t={x:(0,s._1)(e,"x","log1p")};return r.BV.runKernel(a.kU,t)}})},31510:function(e,t,n){"use strict";n.d(t,{C:function(){return h}});var r=n(30633),a=n(43740),s=n(62271),o=n(44842),i=n(82597),u=n(83307),c=n(24841),l=n(2668),d=n(70827),p=n(15475);const h=(0,l.op)({logSoftmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r.cb)(((e,n)=>{const r=(0,u.F)(e,t,!0),a=(0,d.l)(e,r),l=(0,d.l)((0,s.p)(a,"float32"),(0,i.c)((0,p.S)((0,o.Q)(a),t,!0)));n([l]);return{value:l,gradFunc:(e,n)=>{const[r]=n,a=(0,o.Q)(r);return(0,d.l)(e,(0,c.d)((0,p.S)(e,t,!0),a))}}}))(n)}})},2856:function(e,t,n){"use strict";n.d(t,{H:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(72200);const i=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),i=(0,s._1)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const u={a:n,b:i};return r.BV.runKernel(a.PY,u)}})},38651:function(e,t,n){"use strict";n.d(t,{h:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,s._1)(e,"x","logicalNot","bool")};return r.BV.runKernel(a.Vf,t)}})},15750:function(e,t,n){"use strict";n.d(t,{K:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(72200);const i=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,s._1)(e,"a","logicalOr","bool"),i=(0,s._1)(t,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const u={a:n,b:i};return r.BV.runKernel(a.MZ,u)}})},49876:function(e,t,n){"use strict";var r;n.d(t,{I:function(){return r}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},28687:function(e,t,n){"use strict";n.d(t,{O:function(){return i}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740);const i=(0,n(2668).op)({matMul_:function(e,t,n=!1,i=!1){let u=(0,o._1)(e,"a","matMul"),c=(0,o._1)(t,"b","matMul");[u,c]=(0,s.makeTypesMatch)(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:i};return r.BV.runKernel(a.XL,l,d)}})},83307:function(e,t,n){"use strict";n.d(t,{F:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({max_:function(e,t=null,n=!1){const o={x:(0,s._1)(e,"x","max")},i={reductionIndices:t,keepDims:n};return r.BV.runKernel(a.Yo,o,i)}})},21174:function(e,t,n){"use strict";n.d(t,{_:function(){return l}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({maxPool_:function(e,t,n,u,l){const d=(0,s._1)(e,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),o.hu(i.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),i.m("maxPool",u,l);const f={x:p},m={filterSize:t,strides:n,pad:u,dimRoundingMode:l},g=r.BV.runKernel(a.mT,f,m);return h?(0,c.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},25020:function(e,t,n){"use strict";n.d(t,{Y:function(){return l}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569),i=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({maxPool3d_:function(e,t=[1,1,1],n,u,l,d="NDHWC"){const p=(0,s._1)(e,"x","maxPool3d");let h=p,f=!1;4===p.rank&&(f=!0,h=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),o.hu(5===h.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`)),o.hu("NDHWC"===d,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),(0,i.m)("maxPool3d",u,l);const m={x:h},g={filterSize:t,strides:n,pad:u,dimRoundingMode:l,dataFormat:d},y=r.BV.runKernel(a.OA,m,g);return f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},96877:function(e,t,n){"use strict";n.d(t,{I:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({maxPoolWithArgmax_:function(e,t,n,o,i=!1){const u={x:(0,s._1)(e,"x","maxPoolWithArgmax")},c={filterSize:t,strides:n,pad:o,includeBatchInIndex:i},l=r.BV.runKernel(a.vF,u,c);return{result:l[0],indexes:l[1]}}})},80632:function(e,t,n){"use strict";n.d(t,{g:function(){return c}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200),u=n(62271);const c=(0,n(2668).op)({maximum_:function(e,t){let n=(0,o._1)(e,"a","maximum"),c=(0,o._1)(t,"b","maximum");[n,c]=(0,s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),c=(0,u.p)(c,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(a.BM,l)}})},75130:function(e,t,n){"use strict";n.d(t,{J:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const o={x:(0,s._1)(e,"x","mean")},i={axis:t,keepDims:n};return r.BV.runKernel(a.q2,o,i)}})},25735:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({min_:function(e,t=null,n=!1){const o={x:(0,s._1)(e,"x","min")},i={axis:t,keepDims:n};return r.BV.runKernel(a.c1,o,i)}})},24513:function(e,t,n){"use strict";n.d(t,{L:function(){return c}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200),u=n(62271);const c=(0,n(2668).op)({minimum_:function(e,t){let n=(0,o._1)(e,"a","minimum"),c=(0,o._1)(t,"b","minimum");[n,c]=(0,s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),c=(0,u.p)(c,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(a.q8,l)}})},71483:function(e,t,n){"use strict";n.d(t,{V:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({mirrorPad_:function(e,t,n){o.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const i=(0,s._1)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.hu(t.length===i.rank,(()=>`Padding doesn't match input. Must be ${i.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let r=0;r<i.rank;r++)o.hu(2===t[r].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.hu(t[r][0]>=0&&t[r][0]<=i.shape[r]-u&&t[r][1]>=0&&t[r][1]<=i.shape[r]-u,(()=>`Padding in dimension ${r} cannot be greater than or equal to ${i.shape[r]-u} or less than 0 for input of shape ${i.shape}`));const c={paddings:t,mode:n},l={x:i};return r.BV.runKernel(a.jQ,l,c)}})},85228:function(e,t,n){"use strict";n.d(t,{w:function(){return i}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740);const i=(0,n(2668).op)({mod_:function(e,t){let n=(0,o._1)(e,"a","mod"),i=(0,o._1)(t,"b","mod");[n,i]=(0,s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.Vb,u)}})},24841:function(e,t,n){"use strict";n.d(t,{d:function(){return i}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740);const i=(0,n(2668).op)({mul_:function(e,t){let n=(0,o._1)(e,"a","mul"),i=(0,o._1)(t,"b","mul");[n,i]=(0,s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.wY,u)}})},90686:function(e,t,n){"use strict";n.d(t,{S:function(){return u}});var r=n(50196),a=n(29121),s=n(43740),o=n(2668),i=n(4968);const u=(0,o.op)({multinomial_:function(e,t,n,o=!1){const u=(0,s._1)(e,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${c}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const d={logits:1===l?(0,i.X)(u,[1,-1]):u},p={numSamples:t,seed:n,normalized:o},h=r.BV.runKernel(a.NZ,d,p);return 1===l?(0,i.X)(h,[h.size]):h}})},17370:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({neg_:function(e){const t={x:(0,s._1)(e,"x","neg")};return r.BV.runKernel(a.ku,t)}})},16500:function(e,t,n){"use strict";n.d(t,{Q:function(){return u}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,o._1)(e,"a","notEqual","string_or_numeric"),u=(0,o._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a.yQ,c)}})},76708:function(e,t,n){"use strict";n.d(t,{l:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({oneHot_:function(e,t,n=1,o=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:(0,s._1)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:o};return r.BV.runKernel(a.we,i,u)}})},44917:function(e,t,n){"use strict";n.d(t,{i:function(){return i}});var r=n(50196),a=n(20569),s=n(61661),o=n(59640);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=(0,o.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,a.p8)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:function(e,t,n){"use strict";n.d(t,{J:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,s._1)(e,"x","onesLike")};return r.BV.runKernel(a.qW,t)}})},2668:function(e,t,n){"use strict";n.d(t,{z:function(){return s},op:function(){return o}});var r=n(50196),a=n(20569);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=(...e)=>{r.BV.startScope(n);try{const t=o(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(t){throw r.BV.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},91413:function(e,t,n){"use strict";n.d(t,{zvA:function(){return I.z},WnP:function(){return r.W},Khb:function(){return a.K},__u:function(){return s._},IHx:function(){return o.I},QBD:function(){return i.Q},$6P:function(){return u.$},YjB:function(){return c.Y},NqF:function(){return l.N},vHJ:function(){return d.v},ZRM:function(){return p.Z},VfV:function(){return h.V},z4N:function(){return f.z},fvJ:function(){return m.f},C80:function(){return g.C},wS1:function(){return y.w},uR5:function(){return b.u},zEQ:function(){return _},tgs:function(){return C.t},Dxk:function(){return $},JY5:function(){return R},p3b:function(){return F},E4h:function(){return E.E},yE8:function(){return O.y},anm:function(){return Pn},XsQ:function(){return D.X},UFq:function(){return M.U},f3b:function(){return B.f},pju:function(){return P.p},mDi:function(){return L.m},iUl:function(){return V.i},d9v:function(){return W.d},PYB:function(){return z.P},zoF:function(){return v.z},gME:function(){return U},Izb:function(){return G},MNy:function(){return H},ZaL:function(){return j},PAt:function(){return q.P},Tek:function(){return X.T},bc:function(){return K.b},pdZ:function(){return Y.p},$QV:function(){return te},mCk:function(){return ne.m},f9Y:function(){return re.f},mew:function(){return Kn},zbp:function(){return ae.z},ppE:function(){return se.p},nTT:function(){return oe.n},B10:function(){return ie.B},Ka3:function(){return ue},WmZ:function(){return ce.W},hiC:function(){return le.h},NTj:function(){return de.N},AKD:function(){return pe},rvX:function(){return qn},WYO:function(){return he.W},pyx:function(){return fe.p},GRh:function(){return Xn},DgJ:function(){return me.D},qNN:function(){return ge.q},Qqt:function(){return ye.Q},dt4:function(){return be.d},t$B:function(){return xe.t},iyy:function(){return ke},kp_:function(){return un.k},hlL:function(){return we.h},GWj:function(){return Ie.G},qPi:function(){return Ne.q},imm:function(){return Qn},Iqj:function(){return Se.I},dbB:function(){return jn.d},pjt:function(){return Te.p},brS:function(){return _e.b},Sxn:function(){return cn.S},asL:function(){return Ee.a},BHj:function(){return zr},V3u:function(){return Yn},wx0:function(){return ln.w},xVT:function(){return Ce},UWc:function(){return Ae},i2d:function(){return $e.i},hi7:function(){return Re.h},d9m:function(){return Fe.d},zN1:function(){return Oe.z},$r2:function(){return Ur},SX3:function(){return De.S},G9k:function(){return Me.G},cM7:function(){return Be.c},Krr:function(){return Pe.K},e_t:function(){return ze},CmS:function(){return Ue.C},l_t:function(){return Xe},HvI:function(){return Ke.H},hJK:function(){return Ye.h},K5V:function(){return Qe.K},egP:function(){return Je},MB5:function(){return Gr},OI3:function(){return k.O},Fp7:function(){return He.F},_sB:function(){return et._},YQQ:function(){return tt.Y},Ip$:function(){return nt.I},gWQ:function(){return rt.g},J69:function(){return at.J},ry_:function(){return it},VV$:function(){return ut.V},LTh:function(){return ct.L},VdP:function(){return lt.V},wQq:function(){return dt.w},Gi7:function(){return ht},p_:function(){return Un},dC7:function(){return w.d},rq4:function(){return ft},SJ_:function(){return mt.S},W76:function(){return Ve.W},KOy:function(){return Wn},Quu:function(){return gt.Q},lfX:function(){return yt.l},iUs:function(){return st.i},JpU:function(){return bt.J},op:function(){return I.op},N2O:function(){return xt},vku:function(){return vt.v},pNR:function(){return kt},koy:function(){return wt},t1L:function(){return It},lGY:function(){return Nt},d_R:function(){return _t},sQ3:function(){return Et.s},AL3:function(){return Ct.A},S0v:function(){return At.S},WVs:function(){return $t.W},TN_:function(){return Rt},wzB:function(){return Ot},nGf:function(){return Dt},LGj:function(){return Mt.L},w6H:function(){return Bt.w},kwC:function(){return Pt.k},M25:function(){return Lt.M},UYe:function(){return Vt.U},btT:function(){return Wt.b},XLQ:function(){return J.X},GYS:function(){return zt.G},SDf:function(){return Ut},diP:function(){return Gt},sx7:function(){return Ht},mG2:function(){return jt},QEs:function(){return dn.Q},NMM:function(){return qt.N},bp0:function(){return Xt.b},iD$:function(){return Kt.i},snQ:function(){return Gn.s},U8D:function(){return Yt.U},U_I:function(){return Qt},ODp:function(){return Zt.O},XD2:function(){return N.X},Xxe:function(){return Jt.X},tdS:function(){return Wr},O$l:function(){return en.O},R_K:function(){return tn.R},tPi:function(){return S.t},jZU:function(){return nn},SmN:function(){return rn},CnO:function(){return an},p0P:function(){return sn},XAC:function(){return on.X},Wvh:function(){return We.W},fBT:function(){return Tt.f},rVs:function(){return Hr},ers:function(){return Hn.e},uN7:function(){return Vr},Vl2:function(){return pn.V},_b3:function(){return hn._},h62:function(){return pt.h},$i:function(){return fn.$},L9e:function(){return mn.L},knu:function(){return gn.k},Nbs:function(){return yn.N},NXj:function(){return bn.N},Z_8:function(){return jr},luU:function(){return je.l},Smz:function(){return qe.S},ORZ:function(){return xn.O},AEp:function(){return T.A},XeE:function(){return vn.X},RRF:function(){return kn.R},odF:function(){return In},wOQ:function(){return Nn.w},yXz:function(){return Sn},Bfx:function(){return Tn},xZs:function(){return _n},Gg6:function(){return ve.G},hg7:function(){return En.h},p4s:function(){return Ln.p},Xu6:function(){return Cn.X},Two:function(){return An.T},pUJ:function(){return $n},HHK:function(){return Rn.H},VD$:function(){return Fn},arb:function(){return On.a},itS:function(){return Dn.i},lls:function(){return Mn.l},P84:function(){return Bn.P}});var r=n(96235),a=n(17839),s=n(91470),o=n(56407),i=n(13135),u=n(90781),c=n(92998),l=n(40047),d=n(27394),p=n(72421),h=n(21891),f=n(77037),m=n(29812),g=n(80369),y=n(15176),b=n(61749),x=n(43740),v=n(46884),k=n(28687),w=n(24841),I=n(2668),N=n(30625),S=n(22676),T=n(21869);const _=(0,I.op)({basicLSTMCell_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"forgetBias","basicLSTMCell"),u=(0,x._1)(t,"lstmKernel","basicLSTMCell"),c=(0,x._1)(n,"lstmBias","basicLSTMCell"),l=(0,x._1)(r,"data","basicLSTMCell"),d=(0,x._1)(a,"c","basicLSTMCell"),p=(0,x._1)(s,"h","basicLSTMCell"),h=(0,v.z)([l,p],1),f=(0,k.O)(h,u),m=(0,o.I)(f,c),g=m.shape[0],y=m.shape[1]/4,b=[g,y],I=(0,S.t)(m,[0,0],b),_=(0,S.t)(m,[0,y],b),E=(0,S.t)(m,[0,2*y],b),C=(0,S.t)(m,[0,3*y],b),A=(0,o.I)((0,w.d)((0,N.X)(I),(0,T.A)(_)),(0,w.d)(d,(0,N.X)((0,o.I)(i,E))));return[A,(0,w.d)((0,T.A)(A),(0,N.X)(C))]}});var E=n(28441),C=n(40094),A=n(20569);const $=(0,I.op)({batchNorm2d_:function(e,t,n,r,a,s){const o=(0,x._1)(e,"x","batchNorm"),i=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let c,l;return null!=a&&(c=(0,x._1)(a,"scale","batchNorm")),null!=r&&(l=(0,x._1)(r,"offset","batchNorm")),A.hu(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),A.hu(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),A.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),(0,C.t)(o,i,u,l,c,s)}});const R=(0,I.op)({batchNorm3d_:function(e,t,n,r,a,s){const o=(0,x._1)(e,"x","batchNorm"),i=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let c,l;return null!=a&&(c=(0,x._1)(a,"scale","batchNorm")),null!=r&&(l=(0,x._1)(r,"offset","batchNorm")),A.hu(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),A.hu(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),A.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),(0,C.t)(o,i,u,l,c,s)}});const F=(0,I.op)({batchNorm4d_:function(e,t,n,r,a,s){const o=(0,x._1)(e,"x","batchNorm"),i=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let c,l;return null!=a&&(c=(0,x._1)(a,"scale","batchNorm")),null!=r&&(l=(0,x._1)(r,"offset","batchNorm")),A.hu(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),A.hu(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),A.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),(0,C.t)(o,i,u,l,c,s)}});var O=n(93865),D=n(88194),M=n(68247),B=n(72657),P=n(62271),L=n(6825),V=n(42279),W=n(8723),z=n(61661);const U=(0,I.op)({concat1d_:function(e){return(0,v.z)(e,0)}});const G=(0,I.op)({concat2d_:function(e,t){return(0,v.z)(e,t)}});const H=(0,I.op)({concat3d_:function(e,t){return(0,v.z)(e,t)}});const j=(0,I.op)({concat4d_:function(e,t){return(0,v.z)(e,t)}});var q=n(11355),X=n(64794),K=n(71405),Y=n(70473),Q=n(50196),Z=n(29121),J=n(4968);const ee=(0,I.op)({conv3DBackpropInput_:function(e,t,n,r,a){A.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=(0,J.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],c=o.shape[4];A.hu(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),A.hu(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),A.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),A.hu(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),A.hu(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const l={dy:o,filter:n},d={pad:a,strides:r,inputShape:s},p=Q.BV.runKernel(Z.ik,l,d);return i?(0,J.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const te=(0,I.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,x._1)(e,"x","conv3dTranspose"),o=(0,x._1)(t,"filter","conv3dTranspose");return ee(n,s,o,r,a)}});var ne=n(70173),re=n(2699),ae=n(37405),se=n(75746),oe=n(89112),ie=n(64718);const ue=(0,I.op)({diag_:function(e){const t={x:(0,x._1)(e,"x","diag")};return Q.BV.runKernel(Z.$w,t)}});var ce=n(70557),le=n(41274),de=n(49322);const pe=(0,I.op)({dot_:function(e,t){const n=(0,x._1)(e,"t1","dot"),r=(0,x._1)(t,"t2","dot");A.hu((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(A.hu(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=(0,J.X)(n,[1,-1]),t=(0,J.X)(r,[-1,1]),a=(0,k.O)(e,t);return(0,J.X)(a,[])}if(1===n.rank&&2===r.rank){const e=(0,J.X)(n,[1,-1]),t=(0,J.X)(r,[r.shape[0],r.shape[1]]),a=(0,k.O)(e,t);return(0,J.X)(a,[a.size])}if(2===n.rank&&1===r.rank){const e=(0,J.X)(r,[-1,1]),t=(0,k.O)(n,e);return(0,J.X)(t,[t.size])}{const e=(0,J.X)(r,[r.shape[0],r.shape[1]]);return(0,k.O)(n,e)}}});var he=n(94653),fe=n(83233),me=n(26477),ge=n(34650),ye=n(44842),be=n(81300),xe=n(53426),ve=n(47501);const ke=(0,I.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=(0,B.f)([e,t],r),s=e<=t?e:t;for(let i=0;i<s;++i)a.set(1,i,i);const o=(0,J.X)(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,ve.G)((0,be.d)(o,0),[n[0],1,1]);if(2===n.length)return(0,ve.G)((0,be.d)((0,be.d)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,ve.G)((0,be.d)((0,be.d)((0,be.d)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var we=n(14006),Ie=n(26943),Ne=n(9165),Se=n(24926),Te=n(20636),_e=n(17630),Ee=n(64386);const Ce=(0,I.op)({isFinite_:function(e){const t={x:(0,x._1)(e,"x","isFinite")};return Q.BV.runKernel(Z.av,t)}});const Ae=(0,I.op)({isInf_:function(e){const t={x:(0,x._1)(e,"x","isInf")};return Q.BV.runKernel(Z.iW,t)}});var $e=n(96230),Re=n(99133),Fe=n(86573),Oe=n(50624),De=n(14135),Me=n(79648),Be=n(82597),Pe=n(17474),Le=n(30633),Ve=n(17370),We=n(3694);const ze=(0,I.op)({logSigmoid_:function(e){const t=(0,x._1)(e,"x","logSigmoid");return(0,Le.cb)((e=>({value:(0,Ve.W)((0,We.W)((0,Ve.W)(e))),gradFunc:t=>(0,w.d)(t,(0,N.X)((0,Ve.W)(e)))})))(t)}});var Ue=n(31510),Ge=n(83591),He=n(83307),je=n(70827),qe=n(15475);const Xe=(0,I.op)({logSumExp_:function(e,t=null,n=!1){const r=(0,x._1)(e,"x","logSumExp"),a=(0,A.EC)(t,r.shape),s=(0,He.F)(r,a,!0),i=(0,je.l)(r,s),u=(0,ye.Q)(i),c=(0,qe.S)(u,a),l=(0,Be.c)(c),d=(0,o.I)((0,J.X)(s,l.shape),l);if(n){const e=(0,Ge.rv)(d.shape,a);return(0,J.X)(d,e)}return d}});var Ke=n(2856),Ye=n(38651),Qe=n(15750),Ze=n(72200);const Je=(0,I.op)({logicalXor_:function(e,t){const n=(0,x._1)(e,"a","logicalXor","bool"),r=(0,x._1)(t,"b","logicalXor","bool");return(0,Ze.assertAndGetBroadcastShape)(n.shape,r.shape),(0,Ke.H)((0,Qe.K)(e,t),(0,Ye.h)((0,Ke.H)(e,t)))}});var et=n(21174),tt=n(25020),nt=n(96877),rt=n(80632),at=n(75130),st=n(44917),ot=n(40974);function it(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,x._1)(e,"x","meshgrid",e instanceof ot.es?e.dtype:"float32");if(void 0===t)return[r];let a=(0,x._1)(t,"y","meshgrid",t instanceof ot.es?t.dtype:"float32");const s=(0,A.NA)(r.shape),o=(0,A.NA)(a.shape);return"xy"===n?(r=(0,J.X)(r,[1,-1]),a=(0,J.X)(a,[-1,1]),[(0,k.O)((0,st.i)([o,1],r.dtype),r),(0,k.O)(a,(0,st.i)([1,s],a.dtype))]):(r=(0,J.X)(r,[-1,1]),a=(0,J.X)(a,[1,-1]),[(0,k.O)(r,(0,st.i)([1,o],r.dtype)),(0,k.O)((0,st.i)([s,1],a.dtype),a)])}var ut=n(25735),ct=n(24513),lt=n(71483),dt=n(85228),pt=n(50248);const ht=(0,I.op)({moments_:function(e,t=null,n=!1){e=(0,x._1)(e,"x","moments");const r=(0,A.EC)(t,e.shape),a=(0,at.J)(e,r,n);let s=a.shape;n||(s=(0,Ge.rv)(a.shape,r));const o=(0,pt.h)((0,je.l)((0,P.p)(e,"float32"),(0,J.X)(a,s)));return{mean:a,variance:(0,at.J)(o,r,n)}}});const ft=(0,I.op)({multiRNNCell_:function(e,t,n,r){const a=(0,x._1)(t,"data","multiRNNCell"),s=(0,x.sI)(n,"c","multiRNNCell"),o=(0,x.sI)(r,"h","multiRNNCell");let i=a;const u=[];for(let d=0;d<e.length;d++){const t=e[d](i,s[d],o[d]);u.push(t[0]),u.push(t[1]),i=t[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}});var mt=n(90686),gt=n(16500),yt=n(76708),bt=n(7846);const xt=(0,I.op)({outerProduct_:function(e,t){const n=(0,x._1)(e,"v1","outerProduct"),r=(0,x._1)(t,"v2","outerProduct");A.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=(0,J.X)(n,[-1,1]),s=(0,J.X)(r,[1,-1]);return(0,k.O)(a,s)}});var vt=n(39682);const kt=(0,I.op)({pad1d_:function(e,t,n=0){return(0,A.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,vt.v)(e,[t],n)}});const wt=(0,I.op)({pad2d_:function(e,t,n=0){return(0,A.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,vt.v)(e,t,n)}});const It=(0,I.op)({pad3d_:function(e,t,n=0){return(0,A.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,vt.v)(e,t,n)}});const Nt=(0,I.op)({pad4d_:function(e,t,n=0){return(0,A.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,vt.v)(e,t,n)}});var St=n(2582),Tt=n(27918);const _t=(0,I.op)({pool_:function(e,t,n,r,a,s,o){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=(0,x._1)(e,"x","maxPool");let u=i,c=!1;3===i.rank&&(c=!0,u=(0,J.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A.hu(St.jT(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=St.Xw(u.shape,t,s,a,r),d=[l.dilationHeight,l.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],d):[[0,0],[0,0]];const h=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[r[t],i[t]])),c=t.map(((e,t)=>[0,o[t]]));return[u,c]}([l.inHeight,l.inWidth],d,p),g=h?r:"valid",b=h?u:(0,Tt.f)(u,d,f),v=("avg"===n?()=>(0,y.w)(b,t,s,g,o):()=>(0,et._)(b,t,s,g,o))(),k=h?v:(0,E.E)(v,d,m);return c?(0,J.X)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}});var Et=n(33453),Ct=n(98151),At=n(29798),$t=n(49451);const Rt=(0,I.op)({rand_:function(e,t,n){const r=(0,A.NA)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return Q.BV.makeTensor(a,e,n)}});var Ft=n(56845);const Ot=(0,I.op)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Ft.T9(t,n,r,a),o=(0,B.f)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Dt=(0,I.op)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Ft.Yi(t,n,r,!1,a),o=(0,B.f)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var Mt=n(75002),Bt=n(47245),Pt=n(60766),Lt=n(19036),Vt=n(7409),Wt=n(83582),zt=n(57486);const Ut=(0,I.op)({reverse1d_:function(e){const t=(0,x._1)(e,"x","reverse");return A.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,zt.G)(t,0)}});const Gt=(0,I.op)({reverse2d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return A.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,zt.G)(n,t)}});const Ht=(0,I.op)({reverse3d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return A.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,zt.G)(n,t)}});const jt=(0,I.op)({reverse4d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return A.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,zt.G)(n,t)}});var qt=n(97809),Xt=n(32634),Kt=n(99494),Yt=n(55503);const Qt=(0,I.op)({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const i=(0,x._1)(e,"x","separableConv2d"),u=(0,x._1)(t,"depthwiseFilter","separableConv2d"),c=(0,x._1)(n,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(3===i.rank&&(d=!0,l=(0,J.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A.hu(4===l.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`)),A.hu(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),A.hu(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),A.hu(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),A.hu(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const p=u.shape[2],h=u.shape[3];A.hu(c.shape[2]===p*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`));const f=(0,ie.B)(l,u,r,a,o,s),m=(0,X.T)(f,c,1,"valid",o);return d?(0,J.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var Zt=n(36567),Jt=n(34434),en=n(99331),tn=n(83254);const nn=(0,I.op)({slice1d_:function(e,t,n){const r=(0,x._1)(e,"x","slice1d");return A.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,S.t)(r,[t],[n])}});const rn=(0,I.op)({slice2d_:function(e,t,n){const r=(0,x._1)(e,"x","slice2d");return A.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,S.t)(r,t,n)}});const an=(0,I.op)({slice3d_:function(e,t,n){const r=(0,x._1)(e,"x","slice3d");return A.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,S.t)(r,t,n)}});const sn=(0,I.op)({slice4d_:function(e,t,n){const r=(0,x._1)(e,"x","slice4d");return A.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,S.t)(r,t,n)}});var on=n(80682),un=n(7020),cn=n(88447),ln=n(84415),dn=n(13710),pn=n(28644),hn=n(13261),fn=n(15265),mn=n(79590),gn=n(82991),yn=n(71901),bn=n(55158),xn=n(61173),vn=n(10701),kn=n(46092),wn=n(57852);function In(e,t,n){if((0,A.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,x.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,wn.H)(e,t,r,n)}var Nn=n(99906);function Sn(e,t,n){if((0,A.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,x.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,wn.H)(e,t,r,n)}function Tn(e,t,n){if((0,A.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,x.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,wn.H)(e,t,r,n)}function _n(e,t,n){if((0,A.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,x.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,wn.H)(e,t,r,n)}var En=n(43243),Cn=n(43596),An=n(49608);const $n=(0,I.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,x._1)(e,"x","unsortedSegmentSum"),a=(0,x._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,A.hu)((0,A.GN)(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},o={numSegments:n};return Q.BV.runKernel(Z.Qv,s,o)}});var Rn=n(24136);function Fn(e,t=!0,n,r){return Q.BV.makeVariable(e,t,n,r)}var On=n(95912),Dn=n(66380),Mn=n(59640),Bn=n(6577);const Pn=async function(e,t,n){const r=(0,x._1)(e,"tensor","boolMask"),a=(0,x._1)(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;A.hu(o>0,(()=>"mask cannot be scalar")),A.k5(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+o;m++)u*=i[m];const c=i.slice(0,s).concat([u],i.slice(s+o)),l=(0,J.X)(r,c),d=(0,J.X)(a,[-1]),p=await(0,Dn.i)(d),h=(0,mn.L)(p,[1]),f=(0,Se.I)(l,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),l.dispose(),d.dispose(),p.dispose(),f};var Ln=n(89065);function Vn(e,t,n=null){if(0===e.rank)return(0,r.W)(e);if(1!==e.rank&&null===n)return Vn((0,J.X)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,qe.S)((0,r.W)(e),n);if(t===1/0)return(0,He.F)((0,r.W)(e),n);if(t===-1/0)return(0,ut.V)((0,r.W)(e),n);if("euclidean"===t||2===t)return(0,hn._)((0,qe.S)((0,Et.s)((0,r.W)(e),(0,Kt.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,He.F)((0,qe.S)((0,r.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,He.F)((0,qe.S)((0,r.W)(e),n[1]),n[0]);if(t===-1/0)return(0,ut.V)((0,qe.S)((0,r.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,hn._)((0,qe.S)((0,pt.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Wn=(0,I.op)({norm_:function(e,t="euclidean",n=null,r=!1){const a=Vn(e=(0,x._1)(e,"x","norm"),t,n);let s=a.shape;if(r){const t=(0,A.EC)(n,e.shape);s=Ge.rv(a.shape,t)}return(0,J.X)(a,s)}});var zn=n(80747);const Un=(0,I.op)({movingAverage_:function(e,t,n,r,a=!0){const s=(0,x._1)(e,"v","movingAverage"),i=(0,x._1)(t,"x","movingAverage"),u=(0,x._1)(n,"decay","movingAverage");(0,zn.assertTypesMatch)(s,i),A.hu(A.cO(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const c=(0,Kt.i)(1),l=(0,je.l)(c,u);let d=(0,w.d)((0,je.l)(i,s),l);if(a){A.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,x._1)(r,"step","movingAverage");d=(0,le.h)(d,(0,je.l)(c,(0,Et.s)(u,e)))}return(0,o.I)(s,d)}});var Gn=n(63100),Hn=n(69040),jn=n(87494);const qn=(0,I.op)({dropout_:function(e,t,n,r){const a=(0,x._1)(e,"x","dropout");if(A.hu("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),A.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ot.es?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(A.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,u=(0,le.h)((0,Ie.G)((0,o.I)((0,Mt.L)(s,0,1,"float32",r),i)),i);return(0,w.d)(a,u)}});function Xn(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Kn(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return(0,kn.R)(a,"float32")}const Yn=async function(e,t,n=1){const r=(0,x._1)(e,"predictions","inTopK"),a=(0,x._1)(t,"targets","inTopK");(0,A.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,A.hu)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),(0,A.k5)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,A.hu)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const o=await r.data(),i=await a.data(),[u,c]=[o.length/s,s],l=(0,A.WP)("bool",u);for(let d=0;d<u;d++){const e=d*c,t=o.subarray(e,e+c),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===i[d]){l[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),(0,vn.X)(l,a.shape,"bool")};var Qn=n(91423);const Zn=(0,I.op)({hammingWindow_:function(e){return Kn(e,.54,.46)}});const Jn=(0,I.op)({hannWindow_:function(e){return Kn(e,.5,.5)}});const er=(0,I.op)({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push((0,S.t)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=(0,v.z)([(0,S.t)(e,s,t-r),(0,we.h)([r],a)]);o.push(i),s+=n}return 0===o.length?In([],[0,t]):(0,J.X)((0,v.z)(o),[o.length,t])}});const tr=(0,I.op)({stft_:function(e,t,n,r,a=Jn){null==r&&(r=Xn(t));const s=er(e,t,n),o=(0,w.d)(s,a(t));return(0,dn.Q)(o,r)}});const nr=(0,I.op)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const o=(0,x._1)(e,"image","cropAndResize"),i=(0,x._1)(t,"boxes","cropAndResize","float32"),u=(0,x._1)(n,"boxInd","cropAndResize","int32"),c=i.shape[0];A.hu(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),A.hu(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`)),A.hu(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`)),A.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),A.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),A.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const l={image:o,boxes:i,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return Q.BV.runKernel(Z.Vc,l,d)}});const rr=(0,I.op)({flipLeftRight_:function(e){const t=(0,x._1)(e,"image","flipLeftRight","float32");A.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Q.BV.runKernel(Z.Uy,n,{})}});const ar=(0,I.op)({grayscaleToRGB_:function(e){const t=(0,x._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];A.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),A.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,(0,ve.G)(t,a)}});const sr=(0,I.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,x._1)(e,"image","rotateWithOffset","float32");A.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return Q.BV.runKernel(Z.b9,s,o)}});function or(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),A.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),A.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),A.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),A.hu(1===t.rank,(()=>"scores must be a 1D tensor")),A.hu(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),A.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const ir=(0,I.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppression","float32"),o=(0,x._1)(t,"scores","nonMaxSuppression","float32"),i=or(s,o,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return Q.BV.runKernel(Z.uv,{boxes:s,scores:o},u)}});var ur=n(68329);const cr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),i=or(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),c=u[0],l=u[1],{selectedIndices:d}=(0,ur.GP)(c,l,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),(0,kn.R)(d,"int32")};const lr=(0,I.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=(0,x._1)(e,"boxes","nonMaxSuppression"),i=(0,x._1)(t,"scores","nonMaxSuppression"),u=or(o,i,n,r,a,s),c={boxes:o,scores:i},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=Q.BV.runKernel(Z.W0,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});const dr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=or(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([o.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=(0,ur.pA)(l,d,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:(0,kn.R)(p,"int32"),selectedScores:(0,kn.R)(h)}};const pr=(0,I.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=(0,x._1)(e,"boxes","nonMaxSuppression"),i=(0,x._1)(t,"scores","nonMaxSuppression"),u=or(o,i,n,r,a,null),c={boxes:o,scores:i},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=Q.BV.runKernel(Z.cy,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});const hr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=or(o,i,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=(0,ur.qP)(p,h,c,l,d,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:(0,kn.R)(f,"int32"),validOutputs:(0,Kt.i)(m,"int32")}};const fr=(0,I.op)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=(0,x._1)(e,"images","resizeBilinear");A.hu(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),A.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),A.hu(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=(0,J.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},c=Q.BV.runKernel(Z._Y,i,u);return o?(0,J.X)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const mr=(0,I.op)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=(0,x._1)(e,"images","resizeNearestNeighbor");A.hu(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),A.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),A.hu("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),A.hu(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=(0,J.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},c=Q.BV.runKernel(Z.dp,i,u);return o?(0,J.X)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const gr=(0,I.op)({threshold_:function(e,t="binary",n=!1,r=.5){const a=(0,x._1)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,u,c,l,d=(0,w.d)((0,kn.R)([r]),255);if(A.hu(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),A.hu(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),A.hu("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),A.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,u,c]=(0,pn.V)(a,[1,1,1],-1);const e=(0,w.d)(i,.2989),t=(0,w.d)(u,.587),n=(0,w.d)(c,.114);l=(0,o.I)((0,o.I)(e,t),n)}else l=e;if("otsu"===t){d=function(e,t){let n,r,a,s,i,u,c=(0,kn.R)([-1]),l=(0,kn.R)([0]),d=(0,kn.R)([0]);for(let p=0;p<e.size-1;p++){n=(0,S.t)(e,0,p+1),r=(0,S.t)(e,p+1),i=(0,le.h)((0,qe.S)(n),t),u=(0,le.h)((0,qe.S)(r),t);const h=(0,qe.S)((0,w.d)(n,(0,Bt.w)(0,n.size)));a=(0,le.h)(h,(0,qe.S)(n));const f=(0,we.h)(r.shape,n.size),m=(0,o.I)((0,Bt.w)(0,r.size),f),g=(0,w.d)(r,m);s=(0,le.h)((0,qe.S)(g),(0,qe.S)(r));const y=(0,je.l)(a,s),b=(0,je.l)(a,s),x=(0,w.d)(i,u);d=(0,w.d)((0,w.d)(x,y),b);const v=(0,Te.p)(d,l);l=(0,On.a)(v,d,l),c=(0,On.a)(v,(0,kn.R)([p]),c)}return c}((0,O.y)((0,P.p)((0,qt.N)(l),"int32"),(0,vn.X)([]),256),s)}const p=n?(0,Oe.z)(l,d):(0,Te.p)(l,d);return(0,P.p)((0,w.d)(p,255),"int32")}});const yr=(0,I.op)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const o=(0,x._1)(e,"image","transform","float32"),i=(0,x._1)(t,"transforms","transform","float32");A.hu(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),A.hu(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),A.hu(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:o,transforms:i},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Q.BV.runKernel(Z.wx,u,c)}});const br=(0,I.op)({bandPart_:function(e,t,n){(0,A.hu)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,A.hu)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,x._1)(e,"a","bandPart");(0,A.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=(0,J.X)((0,Bt.w)(0,s,1,"int32"),[-1,1]),u=(0,Bt.w)(0,o,1,"int32"),c=(0,je.l)(i,u),l=(0,Ke.H)((0,Oe.z)(c,(0,Kt.i)(+t,"int32")),(0,_e.b)(c,(0,Kt.i)(-n,"int32"))),d=(0,Mn.l)([s,o],r.dtype);return(0,J.X)((0,gn.k)((0,Rn.H)((0,J.X)(r,[-1,s,o])).map((e=>(0,On.a)(l,e,d)))),a)}});const xr=(0,I.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,A.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,A.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,pn.V)(e,e.shape[0],0).map((e=>(0,mn.L)(e,[0])));(0,A.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let a=0;a<e.length;++a)n.push(Q.BV.tidy((()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=(0,w.d)((0,qe.S)((0,w.d)(n[t],e)),n[t]);e=(0,je.l)(e,r)}return(0,le.h)(e,Wn(e,"euclidean"))})));return t?(0,gn.k)(n,0):n}});var vr=n(4368);function kr(e,t=!1){return Q.BV.tidy((()=>{(0,A.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=ke(n),s=(0,W.d)(e);const o=In([[1]],[1,1]);let i=(0,W.d)(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,c=a;[i,s,a]=Q.BV.tidy((()=>{const t=(0,S.t)(s,[e,e],[n-e,1]),u=Wn(t),c=(0,S.t)(s,[e,e],[1,1]),l=(0,On.a)((0,Te.p)(c,0),In([[-1]]),In([[1]])),d=(0,je.l)(c,(0,w.d)(l,u)),p=(0,le.h)(t,d);i=1===p.shape[0]?(0,W.d)(o):(0,v.z)([o,(0,S.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=(0,Ve.W)((0,le.h)((0,k.O)(l,d),u)),f=(0,S.t)(s,[e,0],[n-e,r]),m=(0,w.d)(h,i),g=(0,Ln.p)(i);if(0===e)s=(0,je.l)(f,(0,k.O)(m,(0,k.O)(g,f)));else{const t=(0,je.l)(f,(0,k.O)(m,(0,k.O)(g,f)));s=(0,v.z)([(0,S.t)(s,[0,0],[e,r]),t],0)}const y=(0,Ln.p)(m),b=(0,S.t)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,je.l)(b,(0,k.O)((0,k.O)(b,i),y));else{const t=(0,je.l)(b,(0,k.O)((0,k.O)(b,i),y));a=(0,v.z)([(0,S.t)(a,[0,0],[n,e]),t],1)}return[i,s,a]})),(0,vr.B9)([t,u,c])}return!t&&n>r&&(a=(0,S.t)(a,[0,0],[n,r]),s=(0,S.t)(s,[0,0],[r,r])),[a,s]}))}const wr=(0,I.op)({qr_:function(e,t=!1){if((0,A.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return kr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,Rn.H)((0,J.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=kr(e,t);a.push(n),s.push(r)}));return[(0,J.X)((0,gn.k)(a,0),e.shape),(0,J.X)((0,gn.k)(s,0),e.shape)]}}});var Ir=n(49876);const Nr=(0,I.op)({computeWeightedLoss_:function(e,t,n=Ir.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,x._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,w.d)(r,a);if(n===Ir.I.NONE)return s;if(n===Ir.I.SUM)return(0,qe.S)(s);if(n===Ir.I.MEAN){if(null==a)return(0,at.J)(s);{const e=r.size/a.size,t=(0,le.h)((0,qe.S)(s),(0,qe.S)(a));return e>1?(0,le.h)(t,(0,Kt.i)(e)):t}}if(n===Ir.I.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,le.h)((0,qe.S)(s),(0,Kt.i)(r.size));{const e=(0,w.d)(a,(0,st.i)(r.shape)),t=(0,P.p)((0,qe.S)((0,gt.Q)(e,(0,Kt.i)(0))),"float32");return(0,le.h)((0,qe.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});const Sr=(0,I.op)({absoluteDifference_:function(e,t,n,a=Ir.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","absoluteDifference"),o=(0,x._1)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,x._1)(n,"weights","absoluteDifference")),(0,A.k5)(s.shape,o.shape,"Error in absoluteDifference: ");const u=(0,r.W)((0,je.l)(s,o));return Nr(u,i,a)}});const Tr=(0,I.op)({cosineDistance_:function(e,t,n,r,a=Ir.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","cosineDistance"),o=(0,x._1)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=(0,x._1)(r,"weights","cosineDistance")),(0,A.k5)(s.shape,o.shape,"Error in cosineDistance: ");const u=(0,Kt.i)(1),c=(0,je.l)(u,(0,qe.S)((0,w.d)(s,o),n,!0));return Nr(c,i,a)}});const _r=(0,I.op)({hingeLoss_:function(e,t,n,r=Ir.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,x._1)(e,"labels","hingeLoss");const s=(0,x._1)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,x._1)(n,"weights","hingeLoss")),(0,A.k5)(a.shape,s.shape,"Error in hingeLoss: ");const i=(0,Kt.i)(1);a=(0,je.l)((0,w.d)((0,Kt.i)(2),a),i);const u=(0,Vt.U)((0,je.l)(i,(0,w.d)(a,s)));return Nr(u,o,r)}});const Er=(0,I.op)({huberLoss_:function(e,t,n,a=1,s=Ir.I.SUM_BY_NONZERO_WEIGHTS){const i=(0,x._1)(e,"labels","huberLoss"),u=(0,x._1)(t,"predictions","huberLoss");let c=null;null!=n&&(c=(0,x._1)(n,"weights","huberLoss")),(0,A.k5)(i.shape,u.shape,"Error in huberLoss: ");const l=(0,Kt.i)(a),d=(0,r.W)((0,je.l)(u,i)),p=(0,ct.L)(d,l),h=(0,je.l)(d,p),f=(0,o.I)((0,w.d)((0,Kt.i)(.5),(0,pt.h)(p)),(0,w.d)(l,h));return Nr(f,c,s)}});const Cr=(0,I.op)({logLoss_:function(e,t,n,r=1e-7,a=Ir.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","logLoss"),i=(0,x._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,x._1)(n,"weights","logLoss")),(0,A.k5)(s.shape,i.shape,"Error in logLoss: ");const c=(0,Kt.i)(1),l=(0,Kt.i)(r),d=(0,Ve.W)((0,w.d)(s,(0,Be.c)((0,o.I)(i,l)))),p=(0,w.d)((0,je.l)(c,s),(0,Be.c)((0,o.I)((0,je.l)(c,i),l))),h=(0,je.l)(d,p);return Nr(h,u,a)}});const Ar=(0,I.op)({meanSquaredError_:function(e,t,n,r=Ir.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"labels","meanSquaredError"),s=(0,x._1)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,x._1)(n,"weights","meanSquaredError")),(0,A.k5)(a.shape,s.shape,"Error in meanSquaredError: ");const i=(0,fn.$)(a,s);return Nr(i,o,r)}});const $r=(0,I.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,s=Ir.I.SUM_BY_NONZERO_WEIGHTS){let i=(0,x._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,x._1)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=(0,x._1)(n,"weights","sigmoidCrossEntropy")),(0,A.k5)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,Kt.i)(a),t=(0,Kt.i)(1),n=(0,Kt.i)(.5);i=(0,o.I)((0,w.d)(i,(0,je.l)(t,e)),(0,w.d)(n,e))}const l=function(e,t){const n=(0,x._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,x._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,A.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Vt.U)(a),i=(0,w.d)(a,n),u=(0,Pe.K)((0,ye.Q)((0,Ve.W)((0,r.W)(a))));return(0,o.I)((0,je.l)(s,i),u)}(i,u);return Nr(l,c,s)}});const Rr=(0,I.op)({softmaxCrossEntropy_:function(e,t,n,r=0,a=Ir.I.SUM_BY_NONZERO_WEIGHTS){let s=(0,x._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,x._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,x._1)(n,"weights","softmaxCrossEntropy")),(0,A.k5)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,Kt.i)(r),t=(0,Kt.i)(1),n=(0,Kt.i)(s.shape[1]);s=(0,o.I)((0,w.d)(s,(0,je.l)(t,e)),(0,le.h)(e,n))}const c=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return(0,Le.cb)(((e,t,r)=>{const a=Xe(t,[n],!0),s=(0,je.l)((0,P.p)(t,"float32"),a);r([e,s]);const o=(0,Ve.W)((0,w.d)(s,e));return{value:(0,qe.S)(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,Ge.rv)(e.shape,[n]);return[(0,w.d)((0,J.X)(e,s),(0,je.l)((0,P.p)(r,"float32"),(0,ye.Q)(a))),(0,w.d)((0,J.X)(e,s),(0,je.l)((0,ye.Q)(a),(0,P.p)(r,"float32")))]}}}))(e,t)}(s,i);return Nr(c,u,a)}});const Fr=(0,I.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,x._1)(e,"indices","sparseFillEmptyRows","int32"),s=(0,x._1)(t,"values","sparseFillEmptyRows"),o=(0,x._1)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,x._1)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:a,values:s,denseShape:o,defaultValue:i},c=Q.BV.runKernel(Z.O3,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}});const Or=(0,I.op)({sparseReshape_:function(e,t,n){const r=(0,x._1)(e,"inputIndices","sparseReshape","int32"),a=(0,x._1)(t,"inputShape","sparseReshape","int32"),s=(0,x._1)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const o={inputIndices:r,inputShape:a,newShape:s},i=Q.BV.runKernel(Z.nh,o);return{outputIndices:i[0],outputShape:i[1]}}});const Dr=(0,I.op)({sparseSegmentMean_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentMean"),a=(0,x._1)(t,"indices","sparseSegmentMean","int32"),s=(0,x._1)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return Q.BV.runKernel(Z.YW,o)}});const Mr=(0,I.op)({sparseSegmentSum_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentSum"),a=(0,x._1)(t,"indices","sparseSegmentSum","int32"),s=(0,x._1)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return Q.BV.runKernel(Z.Zj,o)}});const Br=(0,I.op)({stringNGrams_:function(e,t,n,r,a,s,o,i){const u=(0,x._1)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=(0,x._1)(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:o,preserveShortSequences:i},d={data:u,dataSplits:c},p=Q.BV.runKernel(Z._J,d,l);return{nGrams:p[0],nGramsSplits:p[1]}}});const Pr=(0,I.op)({stringSplit_:function(e,t,n=!0){const r=(0,x._1)(e,"input","stringSplit","string"),a=(0,x._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},o={input:r,delimiter:a},i=Q.BV.runKernel(Z.s1,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const Lr=(0,I.op)({stringToHashBucketFast_:function(e,t){const n=(0,x._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Q.BV.runKernel(Z.Xk,a,r)}}),Vr={fft:un.k,ifft:cn.S,rfft:dn.Q,irfft:ln.w},Wr={hammingWindow:Zn,hannWindow:Jn,frame:er,stft:tr},zr={flipLeftRight:rr,grayscaleToRGB:ar,resizeNearestNeighbor:mr,resizeBilinear:fr,rotateWithOffset:sr,cropAndResize:nr,nonMaxSuppression:ir,nonMaxSuppressionAsync:cr,nonMaxSuppressionWithScore:lr,nonMaxSuppressionWithScoreAsync:dr,nonMaxSuppressionPadded:pr,nonMaxSuppressionPaddedAsync:hr,threshold:gr,transform:yr},Ur={bandPart:br,gramSchmidt:xr,qr:wr},Gr={absoluteDifference:Sr,computeWeightedLoss:Nr,cosineDistance:Tr,hingeLoss:_r,huberLoss:Er,logLoss:Cr,meanSquaredError:Ar,sigmoidCrossEntropy:$r,softmaxCrossEntropy:Rr},Hr={sparseFillEmptyRows:Fr,sparseReshape:Or,sparseSegmentMean:Dr,sparseSegmentSum:Mr},jr={stringNGrams:Br,stringSplit:Pr,stringToHashBucketFast:Lr}},39682:function(e,t,n){"use strict";n.d(t,{v:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({pad_:function(e,t,n=0){const o=(0,s._1)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},u={x:o};return r.BV.runKernel(a.ly,u,i)}})},33453:function(e,t,n){"use strict";n.d(t,{s:function(){return i}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740);const i=(0,n(2668).op)({pow_:function(e,t){let n=(0,o._1)(e,"base","pow"),i=(0,o._1)(t,"exp","pow");[n,i]=(0,s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.pe,u)}})},98151:function(e,t,n){"use strict";n.d(t,{A:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return r.BV.runKernel(a.o0,n)}})},29798:function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:function(){return r}})},49451:function(e,t,n){"use strict";n.d(t,{W:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(62271);const i=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let i=(0,s._1)(e,"x","prod");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const u={x:i},c={axis:t,keepDims:n};return r.BV.runKernel(a.Dl,u,c)}})},56845:function(e,t,n){"use strict";n.d(t,{Yi:function(){return a},T9:function(){return s},wv:function(){return o}});var r=n(36377);class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=s||Math.random();this.random=r.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const o=s||Math.random();this.randu=r.alea(o.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class o{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},75002:function(e,t,n){"use strict";n.d(t,{L:function(){return o}});var r=n(72657),a=n(2668),s=n(56845);const o=(0,a.op)({randomUniform_:function(e,t=0,n=1,a="float32",o){const i=(0,r.f)(e,a),u=new s.wv(t,n,null,o);for(let r=0;r<i.values.length;r++)i.values[r]=u.nextValue();return i.toTensor()}})},47245:function(e,t,n){"use strict";n.d(t,{w:function(){return s}});var r=n(50196),a=n(29121);function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:e,stop:t,step:n,dtype:s};return r.BV.runKernel(a.e6,{},o)}},60766:function(e,t,n){"use strict";n.d(t,{k:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({real_:function(e){const t={input:(0,s._1)(e,"input","real")};return r.BV.runKernel(a.xJ,t)}})},19036:function(e,t,n){"use strict";n.d(t,{M:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,s._1)(e,"x","reciprocal")};return r.BV.runKernel(a.$H,t)}})},7409:function(e,t,n){"use strict";n.d(t,{U:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return r.BV.runKernel(a.qk,t)}})},83582:function(e,t,n){"use strict";n.d(t,{b:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return r.BV.runKernel(a.Sb,t)}})},4968:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.BV.runKernel(a.HZ,n,o)}})},57486:function(e,t,n){"use strict";n.d(t,{G:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,s._1)(e,"x","reverse")},o={dims:t};return r.BV.runKernel(a.mK,n,o)}})},97809:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({round_:function(e){const t={x:(0,s._1)(e,"x","round")};return r.BV.runKernel(a.e0,t)}})},32634:function(e,t,n){"use strict";n.d(t,{b:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,s._1)(e,"x","rsqrt","float32")};return r.BV.runKernel(a.bV,t)}})},99494:function(e,t,n){"use strict";n.d(t,{i:function(){return s}});var r=n(20569),a=n(57852);function s(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},63100:function(e,t,n){"use strict";n.d(t,{s:function(){return u}});var r=n(50196),a=n(29121),s=n(43740),o=n(2668),i=n(33028);const u=(0,o.op)({scatterND_:function(e,t,n){const o=(0,s._1)(e,"indices","scatterND","int32"),u=(0,s._1)(t,"updates","scatterND");i.validateInput(u,o,n);const c={indices:o,updates:u},l={shape:n};return r.BV.runKernel(a.xQ,c,l)}})},33028:function(e,t,n){"use strict";n.r(t),n.d(t,{validateUpdateShape:function(){return a},validateInput:function(){return s},calculateShapes:function(){return o}});var r=n(20569);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let o=0;o<a;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-a;++o)if(n.shape[o+a]!==e[o+r])throw new Error(s+` updates.shape[${o+a}] (${n.shape[o+a]}) != shape[${o+a}] (${e[o+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function o(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,o=n.length;let i=1;for(let r=s;r<o;++r)i*=n[r];const u=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:i,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},55503:function(e,t,n){"use strict";n.d(t,{U:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({selu_:function(e){const t={x:(0,s._1)(e,"x","selu")};return r.BV.runKernel(a.oF,t)}})},36567:function(e,t,n){"use strict";n.d(t,{O:function(){return o}});var r=n(40974),a=n(43740),s=n(20569);const o=async function(e,t){const n=(0,a._1)(e,"x","setdiff1d"),o=(0,a._1)(t,"y","setdiff1d");s.hu(n.dtype===o.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${o.dtype}).`)),s.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.hu(1===o.rank,(()=>`y should be 1D tensor, but got y (${o.shape}).`));const i=await n.data(),u=await o.data(),c=new Set(u);let l=0;for(let r=0;r<i.length;r++)c.has(i[r])||l++;const d=new r.YD([l],n.dtype),p=new r.YD([l],"int32");for(let r=0,a=0;r<i.length;r++)c.has(i[r])||(d.values[a]=i[r],p.values[a]=r,a++);return[d.toTensor(),p.toTensor()]}},30625:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(a.a5,t)}})},34434:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({sign_:function(e){const t={x:(0,s._1)(e,"x","sign")};return r.BV.runKernel(a.i5,t)}})},99331:function(e,t,n){"use strict";n.d(t,{O:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({sin_:function(e){const t={x:(0,s._1)(e,"x","sin","float32")};return r.BV.runKernel(a.RQ,t)}})},83254:function(e,t,n){"use strict";n.d(t,{R:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({sinh_:function(e){const t={x:(0,s._1)(e,"x","sinh")};return r.BV.runKernel(a.w3,t)}})},22676:function(e,t,n){"use strict";n.d(t,{t:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({slice_:function(e,t,n){const o=(0,s._1)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},u={begin:t,size:n};return r.BV.runKernel(a.p2,i,u)}})},80682:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const o={logits:n},i={dim:t};return r.BV.runKernel(a.Gc,o,i)}})},3694:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({softplus_:function(e){const t={x:(0,s._1)(e,"x","softplus")};return r.BV.runKernel(a.MR,t)}})},27918:function(e,t,n){"use strict";n.d(t,{f:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const i=(0,s._1)(e,"x","spaceToBatchND");o.hu(i.rank>=1+t.length,(()=>`input rank ${i.rank} should be > than [blockShape] ${t.length}`)),o.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),o.hu(i.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e),!0),(()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:i},c={blockShape:t,paddings:n};return r.BV.runKernel(a.TQ,u,c)}})},69040:function(e,t,n){"use strict";n.d(t,{e:function(){return o}});var r=n(50196),a=n(29121);var s=n(43740);const o=(0,n(2668).op)({sparseToDense_:function(e,t,n,o=0){const i=(0,s._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,s._1)(t,"sparseValues","sparseToDense"),c=(0,s._1)(o,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,u,n,c);const l={sparseIndices:i,sparseValues:u,defaultValue:c},d={outputShape:n};return r.BV.runKernel(a.D2,l,d)}})},7020:function(e,t,n){"use strict";n.d(t,{k:function(){return o}});var r=n(50196),a=n(29121),s=n(20569);const o=(0,n(2668).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.vw,t)}})},88447:function(e,t,n){"use strict";n.d(t,{S:function(){return o}});var r=n(50196),a=n(29121),s=n(20569);const o=(0,n(2668).op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.Qg,t)}})},84415:function(e,t,n){"use strict";n.d(t,{w:function(){return f}});var r=n(61661),a=n(46884),s=n(64386),o=n(24841),i=n(2668),u=n(60766),c=n(4968),l=n(57486),d=n(99494),p=n(22676),h=n(88447);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=(0,c.X)(e,[n,t]);i=(0,h.S)(r)}else{const f=[n,2*(t-1)],m=(0,c.X)((0,u.k)(e),[n,t]),g=(0,c.X)((0,s.a)(e),[n,t]),y=(0,l.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,o.d)((0,l.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,d.i)(-1)),x=(0,a.z)([m,y],1),v=(0,a.z)([g,b],1),k=(0,c.X)((0,r.P)(x,v),[f[0],f[1]]);i=(0,h.S)(k)}if(i=(0,u.k)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,c.X)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},13710:function(e,t,n){"use strict";n.d(t,{Q:function(){return m}});var r=n(20569),a=n(61661),s=n(46884),o=n(64386),i=n(2668),u=n(60766),c=n(4968),l=n(22676),d=n(28644),p=n(59640),h=n(6577),f=n(7020);const m=(0,i.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,l.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,p.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,h.P)(m),y=(0,c.X)((0,a.P)(m,g),[i,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,v=(0,u.k)(b),k=(0,o.a)(b),w=(0,d.V)(v,[x,n-x],v.shape.length-1),I=(0,d.V)(k,[x,n-x],k.shape.length-1),N=m.shape.slice();return N[m.shape.length-1]=x,(0,c.X)((0,a.P)(w[0],I[0]),N)}})},28644:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({split_:function(e,t,n=0){const o={x:(0,s._1)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return r.BV.runKernel(a.L8,o,i)}})},13261:function(e,t,n){"use strict";n.d(t,{_:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt","float32")};return r.BV.runKernel(a.FK,t)}})},50248:function(e,t,n){"use strict";n.d(t,{h:function(){return s}});var r=n(50196),a=n(43740);const s=(0,n(2668).op)({square_:function(e){const t=(0,a._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},15265:function(e,t,n){"use strict";n.d(t,{$:function(){return u}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740),i=n(72200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,o._1)(e,"a","squaredDifference"),u=(0,o._1)(t,"b","squaredDifference");[n,u]=(0,s.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a._t,c,{})}})},79590:function(e,t,n){"use strict";n.d(t,{L:function(){return i}});var r=n(43740),a=n(20569),s=n(2668),o=n(4968);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,o.X)(n,(0,a.bp)(n.shape,t).newShape)}})},82991:function(e,t,n){"use strict";n.d(t,{k:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,s.sI)(e,"tensors","stack","string_or_numeric");o.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,u={axis:t};return r.BV.runKernel(a.Qi,i,u)}})},71901:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,s._1)(e,"x","step")},o={alpha:t};return r.BV.runKernel(a.h8,n,o)}})},55158:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({stridedSlice_:function(e,t,n,o,i=0,u=0,c=0,l=0,d=0){const p={x:(0,s._1)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:o,beginMask:i,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return r.BV.runKernel(a.m2,p,h)}})},70827:function(e,t,n){"use strict";n.d(t,{l:function(){return i}});var r=n(50196),a=n(29121),s=n(80747),o=n(43740);const i=(0,n(2668).op)({sub_:function(e,t){let n=(0,o._1)(e,"a","sub"),i=(0,o._1)(t,"b","sub");[n,i]=(0,s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.Tr,u)}})},15475:function(e,t,n){"use strict";n.d(t,{S:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(62271);const i=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let i=(0,s._1)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const u={x:i},c={axis:t,keepDims:n};return r.BV.runKernel(a.GB,u,c)}})},61173:function(e,t,n){"use strict";n.d(t,{O:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({tan_:function(e){const t={x:(0,s._1)(e,"x","tan","float32")};return r.BV.runKernel(a.sE,t)}})},21869:function(e,t,n){"use strict";n.d(t,{A:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({tanh_:function(e){const t={x:(0,s._1)(e,"x","tanh","float32")};return r.BV.runKernel(a.MI,t)}})},10701:function(e,t,n){"use strict";n.d(t,{X:function(){return s}});var r=n(43740),a=n(57852);function s(e,t,n){const s=(0,r.C)(e,n);return(0,a.H)(e,t,s,n)}},46092:function(e,t,n){"use strict";n.d(t,{R:function(){return o}});var r=n(43740),a=n(20569),s=n(57852);function o(e,t){(0,a.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,s.H)(e,null,n,t)}},99906:function(e,t,n){"use strict";n.d(t,{w:function(){return o}});var r=n(43740),a=n(20569),s=n(57852);function o(e,t,n){if((0,a.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,r.C)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,o,n)}},57852:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var r=n(50196),a=n(20569),s=n(23418);function o(e,t,n,o){if(null==o&&(o=(0,a.D2)(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==(0,a.NA)(t.slice(s));(0,a.hu)(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,s.toTypedArray)(e,o):(0,a.xH)(e,[],!0),r.BV.makeTensor(e,t,o)}},47501:function(e,t,n){"use strict";n.d(t,{G:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile","string_or_numeric");o.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const i={x:n},u={reps:t};return r.BV.runKernel(a.n9,i,u)}})},43243:function(e,t,n){"use strict";n.d(t,{h:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const o=(0,s._1)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const u={x:o},c={k:t,sorted:n},[l,d]=r.BV.runKernel(a.cW,u,c);return{values:l,indices:d}}})},89065:function(e,t,n){"use strict";n.d(t,{p:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({transpose_:function(e,t){const n=(0,s._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),o.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const i={x:n},u={perm:t};return r.BV.runKernel(a.G3,i,u)}})},43596:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(72657),a=n(2668),s=n(56845);const o=(0,a.op)({truncatedNormal_:function(e,t=0,n=1,a,o){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const i=new s.Yi(t,n,a,!0,o),u=(0,r.f)(e,a);for(let r=0;r<u.values.length;r++)u.values[r]=i.nextValue();return u.toTensor()}})},49608:function(e,t,n){"use strict";n.d(t,{T:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,s._1)(e,"x","unique","string_or_numeric");(0,o.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},u={axis:t},[c,l]=r.BV.runKernel(a.kp,i,u);return{values:c,indices:l}}})},24136:function(e,t,n){"use strict";n.d(t,{H:function(){return i}});var r=n(50196),a=n(29121),s=n(43740),o=n(20569);const i=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,s._1)(e,"x","unstack","string_or_numeric");o.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const i={value:n},u={axis:t};return r.BV.runKernel(a.To,i,u)}})},95912:function(e,t,n){"use strict";n.d(t,{a:function(){return u}});var r=n(50196),a=n(29121),s=n(43740),o=n(68247),i=n(72200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,s._1)(t,"a","where"),c=(0,s._1)(n,"b","where"),l=(0,s._1)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(l.shape,u.shape),c.shape),p={condition:(0,o.U)(l,d),t:(0,o.U)(u,d),e:(0,o.U)(c,d)};return r.BV.runKernel(a.Ph,p)}})},66380:function(e,t,n){"use strict";n.d(t,{i:function(){return s}});var r=n(48333),a=n(43740);const s=async function(e){const t=(0,a._1)(e,"condition","whereAsync","bool"),n=await t.data(),s=(0,r.Z)(t.shape,n);return e!==t&&t.dispose(),s}},59640:function(e,t,n){"use strict";n.d(t,{l:function(){return o}});var r=n(50196),a=n(20569),s=n(61661);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.P)(t,n)}const n=(0,a.wT)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:function(e,t,n){"use strict";n.d(t,{P:function(){return o}});var r=n(50196),a=n(29121),s=n(43740);const o=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return r.BV.runKernel(a.Ru,t)}})},40974:function(e,t,n){"use strict";n.d(t,{es:function(){return b},YD:function(){return d},_w:function(){return x},FZ:function(){return y},Vp:function(){return g},Vi:function(){return m}});var r=n(55938),a=n(20569);function s(e,t,n,r){const s=(0,a.e3)(t),i=function(e,t,n,r){const s=(0,a.NA)(t),i=r[r.length-1],u=new Array(i).fill(0),l=t.length,d="complex64"===n?c(e):e;if(l>1)for(let a=0;a<s/i;a++){const e=a*i;for(let t=0;t<i;t++)u[t]=Math.max(u[t],o(d[e+t],0,n).length)}return u}(e,t,n,s),l=t.length,d=u(e,t,n,s,i),p=["Tensor"];return r&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${l}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(d.map((e=>"    "+e)).join("\n")),p.join("\n")}function o(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.HD)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,a.oj)(r,t)}function i(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const l="complex64"===n?2:1,d=t[0],p=t.length;if(0===p){if("complex64"===n){return[o(c(e)[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===p){if(d>20){const t=3*l;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*l,d*l));return"complex64"===n&&(r=c(r),s=c(s)),["["+r.map(((e,t)=>o(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>o(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?c(e):Array.from(e)).map(((e,t)=>o(e,a[t],n))).join(", ")+"]"]}const h=t.slice(1),f=r.slice(1),m=r[0]*l,g=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),h,n,f,a,!1))}g.push("...");for(let t=d-3;t<d;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),h,n,f,a,t===d-1))}}else for(let o=0;o<d;o++){const t=o*m,r=t+m;g.push(...u(e.slice(t,r),h,n,f,a,o===d-1))}const y=2===p?",":"";g[0]="["+g[0]+y;for(let o=1;o<g.length-1;o++)g[o]=" "+g[o]+y;let b=",\n";for(let o=2;o<p;o++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":b),g}function c(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var l=n(23418);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.NA(e),null!=n){const e=n.length;a.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.rQ(t,this.size),this.strides=(0,a.e3)(e)}set(e,...t){0===t.length&&(t=[0]),a.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,h=null,f=null;function m(e){p=e}function g(e){h=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.NA(e),this.strides=(0,a.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>l.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>l.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),(0,r.R)("Tensor",(()=>b));class x extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},80747:function(e,t,n){"use strict";n.r(t),n.d(t,{makeTypesMatch:function(){return o},assertTypesMatch:function(){return i},isTensorInList:function(){return u},getTensorsInContainer:function(){return c}});var r=n(40974),a=n(71221),s=n(20569);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function c(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const s=e;for(const r in s){const e=s[r];n.has(e)||(n.add(e),l(e,t,n))}}},43740:function(e,t,n){"use strict";n.d(t,{C:function(){return u},_1:function(){return d},sI:function(){return p}});var r=n(50196),a=n(22885),s=n(40974),o=n(20569),i=n(23418);function u(e,t){let n=e;if((0,o.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.fU)(e))return void(0,o.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,o.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,o.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let a=0;a<e.length;++a)c(e[a],r,n.concat(a))}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof s.es)return l(a,e.dtype,t,n),e;let c=(0,o.D2)(e);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,t,n),null==e||!(0,o.fU)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,c);(0,o.fU)(e)||Array.isArray(e)||(e=[e]);const p="string"!==c?(0,i.toTypedArray)(e,c):(0,o.xH)(e,[],!0);return r.BV.makeTensor(p,d,c)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>d(e,`${t}[${a}]`,n,r)))}},71221:function(e,t,n){"use strict";var r,a,s,o,i;n.d(t,{yw:function(){return r},x8:function(){return c},z4:function(){return l}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:a,bool:s,complex64:i};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},23418:function(e,t,n){"use strict";n.r(t),n.d(t,{arraysEqual:function(){return a.cO},assert:function(){return a.hu},assertNonNegativeIntegerDimensions:function(){return a.Mu},assertNonNull:function(){return a.Cq},assertShapesMatch:function(){return a.k5},bytesFromStringArray:function(){return a.Ub},bytesPerElement:function(){return a.bT},checkConversionForErrors:function(){return a.D5},clamp:function(){return a.uZ},computeStrides:function(){return a.e3},createScalarValue:function(){return x},createShuffledIndices:function(){return a.U$},decodeString:function(){return N},distSquared:function(){return a.E7},encodeString:function(){return I},fetch:function(){return w},fingerPrint64:function(){return b},flatten:function(){return a.xH},getArrayFromDType:function(){return a.rQ},getTypedArrayFromDType:function(){return a.WP},hasEncodingLoss:function(){return a.QB},hexToLong:function(){return i},indexToLoc:function(){return a.NE},inferDtype:function(){return a.D2},inferFromImplicitShape:function(){return a.JZ},isBoolean:function(){return a.jn},isFunction:function(){return a.mf},isInt:function(){return a.GN},isNumber:function(){return a.hj},isPromise:function(){return a.tI},isScalarShape:function(){return a.N9},isString:function(){return a.HD},isTypedArray:function(){return a.fU},isValidDtype:function(){return a.LP},locToIndex:function(){return a.qy},makeOnesTypedArray:function(){return a.p8},makeZerosNestedTypedArray:function(){return a.l6},makeZerosTypedArray:function(){return a.wT},nearestDivisor:function(){return a.jP},nearestLargerEven:function(){return a.nY},now:function(){return k},parseAxisParam:function(){return a.EC},randUniform:function(){return a.bj},repeatedTry:function(){return a.WD},rightPad:function(){return a.oj},shuffle:function(){return a.TV},shuffleCombo:function(){return a.d7},sizeFromShape:function(){return a.NA},sizeToSquarishShape:function(){return a.YP},squeezeShape:function(){return a.bp},sum:function(){return a.Sm},swap:function(){return a.LF},tanh:function(){return a.AE},toNestedArray:function(){return a.GX},toTypedArray:function(){return v}});var r=n(22885),a=n(20569),s=n(43720);const o=n.n(s)()||s;function i(e){return o.fromString(e,!0,16)}const u=i("c3a5c85c97cb3127"),c=i("b492b66fbe98f273"),l=i("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function h(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=i("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(o)]}(h(e,t),h(e,t+8),h(e,t+16),h(e,t+24),n,r)}function b(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=l.add(2*t),r=h(e,0).add(l),a=h(e,t-8);return g(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=l.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(l.mul(n).xor(u.mul(r))).mul(l)}return l}(e,t):function(e,t=e.length){const n=l.add(2*t),r=h(e,0).mul(c),a=h(e,8),s=h(e,t-8).mul(n),o=h(e,t-16).mul(l);return g(m(r.add(a),43).add(m(s,30)).add(o),r.add(m(a.add(l),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=l.add(2*t),r=h(e,0).mul(l),a=h(e,8),s=h(e,t-8).mul(n),o=h(e,t-16).mul(l),i=m(r.add(a),43).add(m(s,30)).add(o),u=g(i,r.add(m(a.add(l),18)).add(s),n),c=h(e,16).mul(n),d=h(e,24),p=i.add(h(e,t-32)).mul(n),f=u.add(h(e,t-24)).mul(n);return g(m(c.add(d),43).add(m(p,30)).add(f),c.add(m(d.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(c).add(113),s=d(a.mul(l).add(113)).mul(l),i=[o.UZERO,o.UZERO],p=[o.UZERO,o.UZERO];r=r.mul(l).add(h(e,0));let b=0;const x=64*(t-1>>6),v=x+(t-1&63)-63;do{r=m(r.add(a).add(i[0]).add(h(e,b+8)),37).mul(c),a=m(a.add(i[1]).add(h(e,b+48)),42).mul(c),r=r.xor(p[1]),a=a.add(i[0]).add(h(e,b+40)),s=m(s.add(p[0]),33).mul(c),i=y(e,b,i[1].mul(c),r.add(p[0])),p=y(e,b+32,s.add(p[1]),a.add(h(e,b+16))),[s,r]=[r,s],b+=64}while(b!==x);const k=c.add(s.and(255).shl(1));return b=v,p[0]=p[0].add(t-1&63),i[0]=i[0].add(p[0]),p[0]=p[0].add(i[0]),r=m(r.add(a).add(i[0]).add(h(e,b+8)),37).mul(k),a=m(a.add(i[1]).add(h(e,b+48)),42).mul(k),r=r.xor(p[1].mul(9)),a=a.add(i[0].mul(9).add(h(e,b+40))),s=m(s.add(p[0]),33).mul(k),i=y(e,b,i[1].mul(k),r.add(p[0])),p=y(e,b+32,s.add(p[1]),a.add(h(e,b+16))),[s,r]=[r,s],g(g(i[0],p[0],k).add(d(a).mul(u)).add(s),g(i[1],p[1],k).add(r),k)}function x(e,t){return"string"===t?I(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.xH(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function k(){return(0,r.OB)().platform.now()}function w(e,t){return(0,r.OB)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function N(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},20569:function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function p(e,t,n=""){d(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||R(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const o=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?a():setTimeout(o,i)};o()}))}function N(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function S(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:S(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function _(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function C(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function $(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function R(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function O(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function D(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function B(e){return"number"===typeof e}function P(e){return Array.isArray(e)?P(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":B(e)?"float32":D(e)?"string":M(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function V(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function W(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function z(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=z(e+t*i,o,n,r)}return a}function U(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return z(0,e,t,n)}function G(e,t){const n=H(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{TV:function(){return r},d7:function(){return a},uZ:function(){return s},nY:function(){return o},LF:function(){return i},Sm:function(){return u},bj:function(){return c},E7:function(){return l},hu:function(){return d},k5:function(){return p},Cq:function(){return h},xH:function(){return f},NA:function(){return m},N9:function(){return g},cO:function(){return y},GN:function(){return b},AE:function(){return x},YP:function(){return v},U$:function(){return k},oj:function(){return w},WD:function(){return I},JZ:function(){return N},EC:function(){return S},bp:function(){return T},WP:function(){return _},rQ:function(){return E},D5:function(){return C},LP:function(){return A},QB:function(){return $},fU:function(){return R},bT:function(){return F},Ub:function(){return O},HD:function(){return D},jn:function(){return M},hj:function(){return B},D2:function(){return P},mf:function(){return L},jP:function(){return V},e3:function(){return W},GX:function(){return U},p8:function(){return G},wT:function(){return H},l6:function(){return j},Mu:function(){return q},qy:function(){return X},NE:function(){return K},tI:function(){return Y}})},25948:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WASM_INFERENCE_DIMENSIONS=t.BODYPIX_INFERENCE_DIMENSIONS=t.INFERENCE_CONFIG=t.MODEL_CONFIG=t.TFLITE_SIMD_LOADER_NAME=t.TFLITE_LOADER_NAME=t.MODEL_NAME=t.PERSON_PROBABILITY_THRESHOLD=t.HISTORY_COUNT=t.MASK_BLUR_RADIUS=t.DEBOUNCE=t.BLUR_FILTER_RADIUS=void 0,t.BLUR_FILTER_RADIUS=15,t.DEBOUNCE=2,t.MASK_BLUR_RADIUS=5,t.HISTORY_COUNT=5,t.PERSON_PROBABILITY_THRESHOLD=.4,t.MODEL_NAME="selfie_segmentation_landscape.tflite",t.TFLITE_LOADER_NAME="tflite-1-0-0.js",t.TFLITE_SIMD_LOADER_NAME="tflite-simd-1-0-0.js",t.MODEL_CONFIG={architecture:"MobileNetV1",outputStride:16,multiplier:.75,quantBytes:4},t.INFERENCE_CONFIG={internalResolution:1,maxDetections:1,segmentationThreshold:.75},t.BODYPIX_INFERENCE_DIMENSIONS={width:224,height:224},t.WASM_INFERENCE_DIMENSIONS={width:256,height:144}},11464:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.VirtualBackgroundProcessor=t.version=t.isSupported=t.ImageFit=t.GaussianBlurBackgroundProcessor=void 0;var a=n(66240);Object.defineProperty(t,"GaussianBlurBackgroundProcessor",{enumerable:!0,get:function(){return a.GaussianBlurBackgroundProcessor}});var s=n(79186);Object.defineProperty(t,"VirtualBackgroundProcessor",{enumerable:!0,get:function(){return s.VirtualBackgroundProcessor}});var o=n(65519);Object.defineProperty(t,"ImageFit",{enumerable:!0,get:function(){return o.ImageFit}});var i=n(25590);Object.defineProperty(t,"isSupported",{enumerable:!0,get:function(){return i.isSupported}});var u=n(37347);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return u.version}}),"undefined"!==typeof window&&(window.Twilio=window.Twilio||{},window.Twilio.VideoProcessors=r(r({},window.Twilio.VideoProcessors),{GaussianBlurBackgroundProcessor:a.GaussianBlurBackgroundProcessor,ImageFit:o.ImageFit,isSupported:i.isSupported,version:u.version,VirtualBackgroundProcessor:s.VirtualBackgroundProcessor}))},36067:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Processor=void 0;var n=function(){};t.Processor=n},71520:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{u(r.next(e))}catch(t){s(t)}}function i(e){try{u(r.throw(e))}catch(t){s(t)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"===typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=(a=o.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(i){s=[6,i],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.BackgroundProcessor=void 0,n(50603),n(95982);var o=n(9098),i=n(36067),u=n(61125),c=n(37347),l=n(25948),d=function(e){function t(t){var n=e.call(this)||this;if(n._currentMask=new Uint8ClampedArray,n._debounce=l.DEBOUNCE,n._dummyImageData=new ImageData(1,1),n._historyCount=l.HISTORY_COUNT,n._inferenceConfig=l.INFERENCE_CONFIG,n._inferenceDimensions=l.WASM_INFERENCE_DIMENSIONS,n._inputMemoryOffset=0,n._isSimdEnabled=null,n._maskBlurRadius=l.MASK_BLUR_RADIUS,n._maskUsageCounter=0,n._outputMemoryOffset=0,n._personProbabilityThreshold=l.PERSON_PROBABILITY_THRESHOLD,n._version=c.version,"string"!==typeof t.assetsPath)throw new Error("assetsPath parameter is missing");var r=t.assetsPath;return r&&"/"!==r[r.length-1]&&(r+="/"),n.maskBlurRadius=t.maskBlurRadius,n._assetsPath=r,n._debounce=t.debounce||l.DEBOUNCE,n._historyCount=t.historyCount||l.HISTORY_COUNT,n._inferenceConfig=t.inferenceConfig||l.INFERENCE_CONFIG,n._personProbabilityThreshold=t.personProbabilityThreshold||l.PERSON_PROBABILITY_THRESHOLD,n._useWasm="boolean"!==typeof t.useWasm||t.useWasm,n._inferenceDimensions=t.inferenceDimensions||(n._useWasm?l.WASM_INFERENCE_DIMENSIONS:l.BODYPIX_INFERENCE_DIMENSIONS),n._benchmark=new u.Benchmark,n._inputCanvas=document.createElement("canvas"),n._inputContext=n._inputCanvas.getContext("2d"),n._maskCanvas=new OffscreenCanvas(1,1),n._maskContext=n._maskCanvas.getContext("2d"),n._outputCanvas=document.createElement("canvas"),n._outputContext=n._outputCanvas.getContext("2d"),n._masks=[],n}return r(t,e),t._loadModel=function(e){return void 0===e&&(e=l.MODEL_CONFIG),a(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return n=t,[4,o.load(e).catch((function(e){return console.error("Unable to load model.",e)}))];case 1:return n._model=r.sent()||null,[2]}}))}))},Object.defineProperty(t.prototype,"maskBlurRadius",{get:function(){return this._maskBlurRadius},set:function(e){("number"!==typeof e||e<0)&&(console.warn("Valid mask blur radius not found. Using "+l.MASK_BLUR_RADIUS+" as default."),e=l.MASK_BLUR_RADIUS),this._maskBlurRadius=e},enumerable:!1,configurable:!0}),t.prototype.loadModel=function(){return a(this,void 0,void 0,(function(){var e,n,r,a;return s(this,(function(s){switch(s.label){case 0:return[4,Promise.all([t._loadModel(),this._loadTwilioTfLite(),fetch(this._assetsPath+l.MODEL_NAME)])];case 1:return e=s.sent(),n=e[1],[4,e[2].arrayBuffer()];case 2:return r=s.sent(),a=n._getModelBufferMemoryOffset(),n.HEAPU8.set(new Uint8Array(r),a),n._loadModel(r.byteLength),this._inputMemoryOffset=n._getInputMemoryOffset()/4,this._outputMemoryOffset=n._getOutputMemoryOffset()/4,this._tflite=n,[2]}}))}))},t.prototype.processFrame=function(e,n){return a(this,void 0,void 0,(function(){var r,a,o,i,u,c,l,d;return s(this,(function(s){switch(s.label){case 0:if(!t._model||!this._tflite)return[2];if(!e||!n)throw new Error("Missing input or output frame buffer");return this._benchmark.end("captureFrameDelay"),this._benchmark.start("processFrameDelay"),a=(r=e).width,o=r.height,i=this._inferenceDimensions,u=i.width,c=i.height,this._outputCanvas!==n&&(this._outputCanvas=n,this._outputContext=n.getContext("2d")),l=!1,this._inputCanvas.width!==u&&(this._inputCanvas.width=u,this._maskCanvas.width=u,l=!0),this._inputCanvas.height!==c&&(this._inputCanvas.height=c,this._maskCanvas.height=c,l=!0),l&&(this._dummyImageData=new ImageData(new Uint8ClampedArray(u*c*4),u,c)),[4,this._createPersonMask(r)];case 1:return d=s.sent(),this._benchmark.start("imageCompositionDelay"),this._maskContext.putImageData(d,0,0),this._outputContext.save(),this._outputContext.filter="blur("+this._maskBlurRadius+"px)",this._outputContext.globalCompositeOperation="copy",this._outputContext.drawImage(this._maskCanvas,0,0,a,o),this._outputContext.filter="none",this._outputContext.globalCompositeOperation="source-in",this._outputContext.drawImage(r,0,0,a,o),this._outputContext.globalCompositeOperation="destination-over",this._setBackground(r),this._outputContext.restore(),this._benchmark.end("imageCompositionDelay"),this._benchmark.end("processFrameDelay"),this._benchmark.end("totalProcessingDelay"),this._benchmark.start("totalProcessingDelay"),this._benchmark.start("captureFrameDelay"),[2]}}))}))},t.prototype._addMask=function(e){this._masks.length>=this._historyCount&&this._masks.splice(0,this._masks.length-this._historyCount+1),this._masks.push(e)},t.prototype._applyAlpha=function(e){for(var t=this._masks.reduce((function(e,t,n){return e+(n+1)*(n+1)}),0),n=e.height*e.width,r=function(n){var r=a._masks.reduce((function(e,t,r){return e+t[n]*(r+1)*(r+1)}),0)/t;e.data[4*n+3]=Math.round(255*r)},a=this,s=0;s<n;s++)r(s)},t.prototype._createPersonMask=function(e){return a(this,void 0,void 0,(function(){var t,n,r,a;return s(this,(function(s){switch(s.label){case 0:return t=this._dummyImageData,n=this._maskUsageCounter<1,this._benchmark.start("inputImageResizeDelay"),n&&(t=this._getResizedInputImageData(e)),this._benchmark.end("inputImageResizeDelay"),this._benchmark.start("segmentationDelay"),n?(r=this,this._useWasm?(a=this._runTwilioTfLiteInference(t),[3,3]):[3,1]):[3,4];case 1:return[4,this._runBodyPixInference(t)];case 2:a=s.sent(),s.label=3;case 3:r._currentMask=a,this._maskUsageCounter=this._debounce,s.label=4;case 4:return this._addMask(this._currentMask),this._applyAlpha(t),this._maskUsageCounter--,this._benchmark.end("segmentationDelay"),[2,t]}}))}))},t.prototype._getResizedInputImageData=function(e){var t=this._inputCanvas,n=t.width,r=t.height;return this._inputContext.drawImage(e,0,0,n,r),this._inputContext.getImageData(0,0,n,r)},t.prototype._loadJs=function(e){return new Promise((function(t,n){var r=document.createElement("script");r.onload=function(){return t()},r.onerror=n,document.head.append(r),r.src=e}))},t.prototype._loadTwilioTfLite=function(){return a(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this._loadJs(this._assetsPath+l.TFLITE_SIMD_LOADER_NAME)];case 1:t.sent(),t.label=2;case 2:return t.trys.push([2,4,,7]),[4,window.createTwilioTFLiteSIMDModule()];case 3:return e=t.sent(),this._isSimdEnabled=!0,[3,7];case 4:return t.sent(),console.warn("SIMD not supported. You may experience poor quality of background replacement."),[4,this._loadJs(this._assetsPath+l.TFLITE_LOADER_NAME)];case 5:return t.sent(),[4,window.createTwilioTFLiteModule()];case 6:return e=t.sent(),this._isSimdEnabled=!1,[3,7];case 7:return[2,e]}}))}))},t.prototype._runBodyPixInference=function(e){return a(this,void 0,void 0,(function(){return s(this,(function(n){switch(n.label){case 0:return[4,t._model.segmentPerson(e,this._inferenceConfig)];case 1:return[2,n.sent().data]}}))}))},t.prototype._runTwilioTfLiteInference=function(e){for(var t=this,n=t._inferenceDimensions,r=n.width,a=n.height,s=t._inputMemoryOffset,o=t._tflite,i=r*a,u=0;u<i;u++)o.HEAPF32[s+3*u]=e.data[4*u]/255,o.HEAPF32[s+3*u+1]=e.data[4*u+1]/255,o.HEAPF32[s+3*u+2]=e.data[4*u+2]/255;o._runInference();var c=new Uint8ClampedArray(4*i);for(u=0;u<i;u++){var l=o.HEAPF32[this._outputMemoryOffset+u];c[u]=Number(l>=this._personProbabilityThreshold)*l}return c},t._model=null,t}(i.Processor);t.BackgroundProcessor=d},66240:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0}),t.GaussianBlurBackgroundProcessor=void 0;var a=n(71520),s=n(25948),o=function(e){function t(t){var n=e.call(this,t)||this;return n._blurFilterRadius=s.BLUR_FILTER_RADIUS,n._name="GaussianBlurBackgroundProcessor",n.blurFilterRadius=t.blurFilterRadius,n}return r(t,e),Object.defineProperty(t.prototype,"blurFilterRadius",{get:function(){return this._blurFilterRadius},set:function(e){e||(console.warn("Valid blur filter radius not found. Using "+s.BLUR_FILTER_RADIUS+" as default."),e=s.BLUR_FILTER_RADIUS),this._blurFilterRadius=e},enumerable:!1,configurable:!0}),t.prototype._setBackground=function(e){this._outputContext.filter="blur("+this._blurFilterRadius+"px)",this._outputContext.drawImage(e,0,0)},t}(a.BackgroundProcessor);t.GaussianBlurBackgroundProcessor=o},79186:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0}),t.VirtualBackgroundProcessor=void 0;var a=n(71520),s=n(65519),o=function(e){function t(t){var n=e.call(this,t)||this;return n._name="VirtualBackgroundProcessor",n.backgroundImage=t.backgroundImage,n.fitType=t.fitType,n}return r(t,e),Object.defineProperty(t.prototype,"backgroundImage",{get:function(){return this._backgroundImage},set:function(e){if(!e||!e.complete||!e.naturalHeight)throw new Error("Invalid image. Make sure that the image is an HTMLImageElement and has been successfully loaded");this._backgroundImage=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fitType",{get:function(){return this._fitType},set:function(e){Object.keys(s.ImageFit).includes(e)||(console.warn("Valid fitType not found. Using '"+s.ImageFit.Fill+"' as default."),e=s.ImageFit.Fill),this._fitType=e},enumerable:!1,configurable:!0}),t.prototype._setBackground=function(){var e=this._backgroundImage,t=e.naturalWidth,n=e.naturalHeight,r=this._outputCanvas.width,a=this._outputCanvas.height;if(this._fitType===s.ImageFit.Fill)this._outputContext.drawImage(e,0,0,t,n,0,0,r,a);else if(this._fitType===s.ImageFit.None)this._outputContext.drawImage(e,0,0,t,n);else if(this._fitType===s.ImageFit.Contain){var o=this._getFitPosition(t,n,r,a,s.ImageFit.Contain),i=o.x,u=o.y,c=o.w,l=o.h;this._outputContext.drawImage(e,0,0,t,n,i,u,c,l)}else if(this._fitType===s.ImageFit.Cover){var d=this._getFitPosition(t,n,r,a,s.ImageFit.Cover);i=d.x,u=d.y,c=d.w,l=d.h;this._outputContext.drawImage(e,0,0,t,n,i,u,c,l)}},t.prototype._getFitPosition=function(e,t,n,r,a){var o=n/e,i=n,u=o*t;return(a===s.ImageFit.Contain&&u>r||a===s.ImageFit.Cover&&r>u)&&(i*=o=r/u,u=r),{x:(n-i)/2,y:(r-u)/2,w:i,h:u}},t}(a.BackgroundProcessor);t.VirtualBackgroundProcessor=o},65519:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ImageFit=void 0,function(e){e.Contain="Contain",e.Cover="Cover",e.Fill="Fill",e.None="None"}(t.ImageFit||(t.ImageFit={}))},61125:function(e,t){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Benchmark=void 0;var r=function(){function e(){this._timingCache=new Map,this._timings=new Map}return e.prototype.end=function(e){var t=this._timings.get(e);t&&(t.end=Date.now(),t.delay=t.end-t.start,this._save(e,n({},t)))},e.prototype.getAverageDelay=function(e){var t=this._timingCache.get(e);if(t&&t.length)return t.map((function(e){return e.delay})).reduce((function(e,t){return e+t}),0)/t.length},e.prototype.getNames=function(){return Array.from(this._timingCache.keys())},e.prototype.getRate=function(e){var t=this._timingCache.get(e);if(t&&!(t.length<2)){var n=t[t.length-1].end-t[0].start;return t.length/n*1e3}},e.prototype.start=function(e){var t=this._timings.get(e);t||(t={},this._timings.set(e,t)),t.start=Date.now(),delete t.end,delete t.delay},e.prototype._save=function(t,n){var r=this._timingCache.get(t);r||(r=[],this._timingCache.set(t,r)),r.push(n),r.length>e.cacheSize&&r.splice(0,r.length-e.cacheSize)},e.cacheSize=41,e}();t.Benchmark=r},25590:function(e,t){"use strict";function n(){return"undefined"!==typeof window&&(!!window.OffscreenCanvas&&!/Mobi/i.test(window.navigator.userAgent)&&!!window.chrome)}Object.defineProperty(t,"__esModule",{value:!0}),t.isSupported=t.isBrowserSupported=void 0,t.isBrowserSupported=n,t.isSupported=n()},37347:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="1.0.2"},79742:function(e,t){"use strict";t.byteLength=function(e){var t=u(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,s=u(e),o=s[0],i=s[1],c=new a(function(e,t,n){return 3*(t+n)/4-n}(0,o,i)),l=0,d=i>0?o-4:o;for(n=0;n<d;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],c[l++]=t>>16&255,c[l++]=t>>8&255,c[l++]=255&t;2===i&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,c[l++]=255&t);1===i&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,c[l++]=t>>8&255,c[l++]=255&t);return c},t.fromByteArray=function(e){for(var t,r=e.length,a=r%3,s=[],o=16383,i=0,u=r-a;i<u;i+=o)s.push(c(e,i,i+o>u?u:i+o));1===a?(t=e[r-1],s.push(n[t>>2]+n[t<<4&63]+"==")):2===a&&(t=(e[r-2]<<8)+e[r-1],s.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return s.join("")};for(var n=[],r=[],a="undefined"!==typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,i=s.length;o<i;++o)n[o]=s[o],r[s.charCodeAt(o)]=o;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function c(e,t,r){for(var a,s,o=[],i=t;i<r;i+=3)a=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),o.push(n[(s=a)>>18&63]+n[s>>12&63]+n[s>>6&63]+n[63&s]);return o.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},48764:function(e,t,n){"use strict";var r=n(79742),a=n(80645),s="function"===typeof Symbol&&"function"===typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50;var o=2147483647;function i(e){if(e>o)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,u.prototype),t}function u(e,t,n){if("number"===typeof e){if("string"===typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return d(e)}return c(e,t,n)}function c(e,t,n){if("string"===typeof e)return function(e,t){"string"===typeof t&&""!==t||(t="utf8");if(!u.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var n=0|m(e,t),r=i(n),a=r.write(e,t);a!==n&&(r=r.slice(0,a));return r}(e,t);if(ArrayBuffer.isView(e))return p(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(z(e,ArrayBuffer)||e&&z(e.buffer,ArrayBuffer))return h(e,t,n);if("undefined"!==typeof SharedArrayBuffer&&(z(e,SharedArrayBuffer)||e&&z(e.buffer,SharedArrayBuffer)))return h(e,t,n);if("number"===typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return u.from(r,t,n);var a=function(e){if(u.isBuffer(e)){var t=0|f(e.length),n=i(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!==typeof e.length||U(e.length)?i(0):p(e);if("Buffer"===e.type&&Array.isArray(e.data))return p(e.data)}(e);if(a)return a;if("undefined"!==typeof Symbol&&null!=Symbol.toPrimitive&&"function"===typeof e[Symbol.toPrimitive])return u.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!==typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function d(e){return l(e),i(e<0?0:0|f(e))}function p(e){for(var t=e.length<0?0:0|f(e.length),n=i(t),r=0;r<t;r+=1)n[r]=255&e[r];return n}function h(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');var r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,u.prototype),r}function f(e){if(e>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|e}function m(e,t){if(u.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||z(e,ArrayBuffer))return e.byteLength;if("string"!==typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;for(var a=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return L(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return V(e).length;default:if(a)return r?-1:L(e).length;t=(""+t).toLowerCase(),a=!0}}function g(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return $(this,t,n);case"utf8":case"utf-8":return _(this,t,n);case"ascii":return C(this,t,n);case"latin1":case"binary":return A(this,t,n);case"base64":return T(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function y(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function b(e,t,n,r,a){if(0===e.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),U(n=+n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:x(e,t,n,r,a);if("number"===typeof t)return t&=255,"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):x(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function x(e,t,n,r,a){var s,o=1,i=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,i/=2,u/=2,n/=2}function c(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(a){var l=-1;for(s=n;s<i;s++)if(c(e,s)===c(t,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===u)return l*o}else-1!==l&&(s-=s-l),l=-1}else for(n+u>i&&(n=i-u),s=n;s>=0;s--){for(var d=!0,p=0;p<u;p++)if(c(e,s+p)!==c(t,p)){d=!1;break}if(d)return s}return-1}function v(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=t.length;r>s/2&&(r=s/2);for(var o=0;o<r;++o){var i=parseInt(t.substr(2*o,2),16);if(U(i))return o;e[n+o]=i}return o}function k(e,t,n,r){return W(L(t,e.length-n),e,n,r)}function w(e,t,n,r){return W(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function I(e,t,n,r){return w(e,t,n,r)}function N(e,t,n,r){return W(V(t),e,n,r)}function S(e,t,n,r){return W(function(e,t){for(var n,r,a,s=[],o=0;o<e.length&&!((t-=2)<0);++o)r=(n=e.charCodeAt(o))>>8,a=n%256,s.push(a),s.push(r);return s}(t,e.length-n),e,n,r)}function T(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function _(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var s,o,i,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128===(192&(s=e[a+1]))&&(u=(31&c)<<6|63&s)>127&&(l=u);break;case 3:s=e[a+1],o=e[a+2],128===(192&s)&&128===(192&o)&&(u=(15&c)<<12|(63&s)<<6|63&o)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:s=e[a+1],o=e[a+2],i=e[a+3],128===(192&s)&&128===(192&o)&&128===(192&i)&&(u=(15&c)<<18|(63&s)<<12|(63&o)<<6|63&i)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(e){var t=e.length;if(t<=E)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=E));return n}(r)}t.kMaxLength=o,u.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(n){return!1}}(),u.TYPED_ARRAY_SUPPORT||"undefined"===typeof console||"function"!==typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(e,t,n){return c(e,t,n)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(e,t,n){return function(e,t,n){return l(e),e<=0?i(e):void 0!==t?"string"===typeof n?i(e).fill(t,n):i(e).fill(t):i(e)}(e,t,n)},u.allocUnsafe=function(e){return d(e)},u.allocUnsafeSlow=function(e){return d(e)},u.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==u.prototype},u.compare=function(e,t){if(z(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),z(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var s=e[n];if(z(s,Uint8Array)&&(s=u.from(s)),!u.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(r,a),a+=s.length}return r},u.byteLength=m,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)y(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},u.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?_(this,0,e):g.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},s&&(u.prototype[s]=u.prototype.inspect),u.prototype.compare=function(e,t,n,r,a){if(z(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var s=(a>>>=0)-(r>>>=0),o=(n>>>=0)-(t>>>=0),i=Math.min(s,o),c=this.slice(r,a),l=e.slice(t,n),d=0;d<i;++d)if(c[d]!==l[d]){s=c[d],o=l[d];break}return s<o?-1:o<s?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return b(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return b(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"===typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return v(this,e,t,n);case"utf8":case"utf-8":return k(this,e,t,n);case"ascii":return w(this,e,t,n);case"latin1":case"binary":return I(this,e,t,n);case"base64":return N(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var E=4096;function C(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function A(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function $(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=G[e[s]];return a}function R(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function F(e,t,n){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function O(e,t,n,r,a,s){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function D(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(e,t,n,r,s){return t=+t,n>>>=0,s||D(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function B(e,t,n,r,s){return t=+t,n>>>=0,s||D(e,0,n,8),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var r=this.subarray(e,t);return Object.setPrototypeOf(r,u.prototype),r},u.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r},u.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return e>>>=0,t||F(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return e>>>=0,t||F(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return e>>>=0,t||F(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return e>>>=0,t||F(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return e>>>=0,t||F(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);for(var r=t,a=1,s=this[e+--r];r>0&&(a*=256);)s+=this[e+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},u.prototype.readInt8=function(e,t){return e>>>=0,t||F(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){e>>>=0,t||F(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){e>>>=0,t||F(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return e>>>=0,t||F(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return e>>>=0,t||F(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return e>>>=0,t||F(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return e>>>=0,t||F(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return e>>>=0,t||F(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return e>>>=0,t||F(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t>>>=0,n>>>=0,r)||O(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[t]=255&e;++s<n&&(a*=256);)this[t+s]=e/a&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t>>>=0,n>>>=0,r)||O(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,1,255,0),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var a=Math.pow(2,8*n-1);O(this,e,t,n,a-1,-a)}var s=0,o=1,i=0;for(this[t]=255&e;++s<n&&(o*=256);)e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var a=Math.pow(2,8*n-1);O(this,e,t,n,a-1,-a)}var s=n-1,o=1,i=0;for(this[t+s]=255&e;--s>=0&&(o*=256);)e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeFloatLE=function(e,t,n){return M(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return M(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return B(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return B(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(!u.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a=r-n;if(this===e&&"function"===typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,n,r);else if(this===e&&n<t&&t<r)for(var s=a-1;s>=0;--s)e[s+t]=this[s+n];else Uint8Array.prototype.set.call(e,this.subarray(n,r),t);return a},u.prototype.fill=function(e,t,n,r){if("string"===typeof e){if("string"===typeof t?(r=t,t=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){var a=e.charCodeAt(0);("utf8"===r&&a<128||"latin1"===r)&&(e=a)}}else"number"===typeof e?e&=255:"boolean"===typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"===typeof e)for(s=t;s<n;++s)this[s]=e;else{var o=u.isBuffer(e)?e:u.from(e,r),i=o.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<n-t;++s)this[s+t]=o[s%i]}return this};var P=/[^+/0-9A-Za-z-_]/g;function L(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],o=0;o<r;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function V(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(P,"")).length<2)return"";for(;e.length%4!==0;)e+="=";return e}(e))}function W(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}function z(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function U(e){return e!==e}var G=function(){for(var e="0123456789abcdef",t=new Array(256),n=0;n<16;++n)for(var r=16*n,a=0;a<16;++a)t[r+a]=e[n]+e[a];return t}()},80645:function(e,t){t.read=function(e,t,n,r,a){var s,o,i=8*a-r-1,u=(1<<i)-1,c=u>>1,l=-7,d=n?a-1:0,p=n?-1:1,h=e[t+d];for(d+=p,s=h&(1<<-l)-1,h>>=-l,l+=i;l>0;s=256*s+e[t+d],d+=p,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=r;l>0;o=256*o+e[t+d],d+=p,l-=8);if(0===s)s=1-c;else{if(s===u)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,r),s-=c}return(h?-1:1)*o*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var o,i,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,p=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=l):(o=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-o))<1&&(o--,u*=2),(t+=o+d>=1?p/u:p*Math.pow(2,1-d))*u>=2&&(o++,u/=2),o+d>=l?(i=0,o=l):o+d>=1?(i=(t*u-1)*Math.pow(2,a),o+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,a),o=0));a>=8;e[n+h]=255&i,h+=f,i/=256,a-=8);for(o=o<<a|i,c+=a;c>0;e[n+h]=255&o,h+=f,o/=256,c-=8);e[n+h-f]|=128*m}},43720:function(e){e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(S){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return w}else{if(e<=-f)return I;if(e+1>=f)return k}return e<0?i(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var c=Math.pow;function l(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return l(e.substring(1),t,n).neg();for(var a=i(c(n,8)),s=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+u),n);if(u<8){var p=i(c(n,u));s=s.mul(p).add(i(d))}else s=(s=s.mul(a)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?l(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=l,n.fromValue=d;var p=4294967296,h=p*p,f=h/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var v=o(-1);n.NEG_ONE=v;var k=u(-1,2147483647,!1);n.MAX_VALUE=k;var w=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=w;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=i(c(e,6),this.unsigned),s=this,o="";;){var u=s.div(a),l=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return l+o;for(;l.length<6;)l="0"+l;o=""+l+o}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1===(1&this.low)},N.isEven=function(){return 0===(1&this.low)},N.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},N.neg=N.negate,N.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,c=e.low>>>16,l=0,p=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,p+=(h+=a+c)>>>16,l+=(p+=n+i)>>>16,l+=t+o,u((h&=65535)<<16|(f&=65535),(l&=65535)<<16|(p&=65535),this.unsigned)},N.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,o=65535&this.low,c=e.high>>>16,l=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=o*h)>>>16,y+=(b+=s*h)>>>16,b&=65535,y+=(b+=o*p)>>>16,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=o*l)>>>16,f+=n*h+a*p+s*l+o*c,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(I))return e.eq(b)||e.eq(v)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),l=o<=48?1:c(2,o-48),p=i(n),h=p.mul(e);h.isNegative()||h.gt(a);)h=(p=i(n-=l,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),a=a.sub(h)}return s},N.div=N.divide,N.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},92703:function(e,t,n){"use strict";var r=n(50414);function a(){}function s(){}s.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,s,o){if(o!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:s,resetWarningCache:a};return n.PropTypes=n,n}},45697:function(e,t,n){e.exports=n(92703)()},50414:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},69590:function(e){var t="undefined"!==typeof Element,n="function"===typeof Map,r="function"===typeof Set,a="function"===typeof ArrayBuffer&&!!ArrayBuffer.isView;function s(e,o){if(e===o)return!0;if(e&&o&&"object"==typeof e&&"object"==typeof o){if(e.constructor!==o.constructor)return!1;var i,u,c,l;if(Array.isArray(e)){if((i=e.length)!=o.length)return!1;for(u=i;0!==u--;)if(!s(e[u],o[u]))return!1;return!0}if(n&&e instanceof Map&&o instanceof Map){if(e.size!==o.size)return!1;for(l=e.entries();!(u=l.next()).done;)if(!o.has(u.value[0]))return!1;for(l=e.entries();!(u=l.next()).done;)if(!s(u.value[1],o.get(u.value[0])))return!1;return!0}if(r&&e instanceof Set&&o instanceof Set){if(e.size!==o.size)return!1;for(l=e.entries();!(u=l.next()).done;)if(!o.has(u.value[0]))return!1;return!0}if(a&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(o)){if((i=e.length)!=o.length)return!1;for(u=i;0!==u--;)if(e[u]!==o[u])return!1;return!0}if(e.constructor===RegExp)return e.source===o.source&&e.flags===o.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===o.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===o.toString();if((i=(c=Object.keys(e)).length)!==Object.keys(o).length)return!1;for(u=i;0!==u--;)if(!Object.prototype.hasOwnProperty.call(o,c[u]))return!1;if(t&&e instanceof Element)return!1;for(u=i;0!==u--;)if(("_owner"!==c[u]&&"__v"!==c[u]&&"__o"!==c[u]||!e.$$typeof)&&!s(e[c[u]],o[c[u]]))return!1;return!0}return e!==e&&o!==o}e.exports=function(e,t){try{return s(e,t)}catch(n){if((n.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw n}}},66441:function(e,t,n){"use strict";n.d(t,{D:function(){return xe}});var r=n(67294);function a(e,t){void 0===t&&(t=!1);var n=e.getBoundingClientRect();return{width:n.width/1,height:n.height/1,top:n.top/1,right:n.right/1,bottom:n.bottom/1,left:n.left/1,x:n.left/1,y:n.top/1}}function s(e){if(null==e)return window;if("[object Window]"!==e.toString()){var t=e.ownerDocument;return t&&t.defaultView||window}return e}function o(e){var t=s(e);return{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function i(e){return e instanceof s(e).Element||e instanceof Element}function u(e){return e instanceof s(e).HTMLElement||e instanceof HTMLElement}function c(e){return"undefined"!==typeof ShadowRoot&&(e instanceof s(e).ShadowRoot||e instanceof ShadowRoot)}function l(e){return e?(e.nodeName||"").toLowerCase():null}function d(e){return((i(e)?e.ownerDocument:e.document)||window.document).documentElement}function p(e){return a(d(e)).left+o(e).scrollLeft}function h(e){return s(e).getComputedStyle(e)}function f(e){var t=h(e),n=t.overflow,r=t.overflowX,a=t.overflowY;return/auto|scroll|overlay|hidden/.test(n+a+r)}function m(e,t,n){void 0===n&&(n=!1);var r=u(t),i=u(t)&&function(e){var t=e.getBoundingClientRect(),n=t.width/e.offsetWidth||1,r=t.height/e.offsetHeight||1;return 1!==n||1!==r}(t),c=d(t),h=a(e,i),m={scrollLeft:0,scrollTop:0},g={x:0,y:0};return(r||!r&&!n)&&(("body"!==l(t)||f(c))&&(m=function(e){return e!==s(e)&&u(e)?{scrollLeft:(t=e).scrollLeft,scrollTop:t.scrollTop}:o(e);var t}(t)),u(t)?((g=a(t,!0)).x+=t.clientLeft,g.y+=t.clientTop):c&&(g.x=p(c))),{x:h.left+m.scrollLeft-g.x,y:h.top+m.scrollTop-g.y,width:h.width,height:h.height}}function g(e){var t=a(e),n=e.offsetWidth,r=e.offsetHeight;return Math.abs(t.width-n)<=1&&(n=t.width),Math.abs(t.height-r)<=1&&(r=t.height),{x:e.offsetLeft,y:e.offsetTop,width:n,height:r}}function y(e){return"html"===l(e)?e:e.assignedSlot||e.parentNode||(c(e)?e.host:null)||d(e)}function b(e){return["html","body","#document"].indexOf(l(e))>=0?e.ownerDocument.body:u(e)&&f(e)?e:b(y(e))}function x(e,t){var n;void 0===t&&(t=[]);var r=b(e),a=r===(null==(n=e.ownerDocument)?void 0:n.body),o=s(r),i=a?[o].concat(o.visualViewport||[],f(r)?r:[]):r,u=t.concat(i);return a?u:u.concat(x(y(i)))}function v(e){return["table","td","th"].indexOf(l(e))>=0}function k(e){return u(e)&&"fixed"!==h(e).position?e.offsetParent:null}function w(e){for(var t=s(e),n=k(e);n&&v(n)&&"static"===h(n).position;)n=k(n);return n&&("html"===l(n)||"body"===l(n)&&"static"===h(n).position)?t:n||function(e){var t=-1!==navigator.userAgent.toLowerCase().indexOf("firefox");if(-1!==navigator.userAgent.indexOf("Trident")&&u(e)&&"fixed"===h(e).position)return null;for(var n=y(e);u(n)&&["html","body"].indexOf(l(n))<0;){var r=h(n);if("none"!==r.transform||"none"!==r.perspective||"paint"===r.contain||-1!==["transform","perspective"].indexOf(r.willChange)||t&&"filter"===r.willChange||t&&r.filter&&"none"!==r.filter)return n;n=n.parentNode}return null}(e)||t}var I="top",N="bottom",S="right",T="left",_="auto",E=[I,N,S,T],C="start",A="end",$="viewport",R="popper",F=E.reduce((function(e,t){return e.concat([t+"-"+C,t+"-"+A])}),[]),O=[].concat(E,[_]).reduce((function(e,t){return e.concat([t,t+"-"+C,t+"-"+A])}),[]),D=["beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite"];function M(e){var t=new Map,n=new Set,r=[];function a(e){n.add(e.name),[].concat(e.requires||[],e.requiresIfExists||[]).forEach((function(e){if(!n.has(e)){var r=t.get(e);r&&a(r)}})),r.push(e)}return e.forEach((function(e){t.set(e.name,e)})),e.forEach((function(e){n.has(e.name)||a(e)})),r}function B(e){var t;return function(){return t||(t=new Promise((function(n){Promise.resolve().then((function(){t=void 0,n(e())}))}))),t}}var P={placement:"bottom",modifiers:[],strategy:"absolute"};function L(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return!t.some((function(e){return!(e&&"function"===typeof e.getBoundingClientRect)}))}function V(e){void 0===e&&(e={});var t=e,n=t.defaultModifiers,r=void 0===n?[]:n,a=t.defaultOptions,s=void 0===a?P:a;return function(e,t,n){void 0===n&&(n=s);var a={placement:"bottom",orderedModifiers:[],options:Object.assign({},P,s),modifiersData:{},elements:{reference:e,popper:t},attributes:{},styles:{}},o=[],u=!1,c={state:a,setOptions:function(n){var u="function"===typeof n?n(a.options):n;l(),a.options=Object.assign({},s,a.options,u),a.scrollParents={reference:i(e)?x(e):e.contextElement?x(e.contextElement):[],popper:x(t)};var d=function(e){var t=M(e);return D.reduce((function(e,n){return e.concat(t.filter((function(e){return e.phase===n})))}),[])}(function(e){var t=e.reduce((function(e,t){var n=e[t.name];return e[t.name]=n?Object.assign({},n,t,{options:Object.assign({},n.options,t.options),data:Object.assign({},n.data,t.data)}):t,e}),{});return Object.keys(t).map((function(e){return t[e]}))}([].concat(r,a.options.modifiers)));return a.orderedModifiers=d.filter((function(e){return e.enabled})),a.orderedModifiers.forEach((function(e){var t=e.name,n=e.options,r=void 0===n?{}:n,s=e.effect;if("function"===typeof s){var i=s({state:a,name:t,instance:c,options:r}),u=function(){};o.push(i||u)}})),c.update()},forceUpdate:function(){if(!u){var e=a.elements,t=e.reference,n=e.popper;if(L(t,n)){a.rects={reference:m(t,w(n),"fixed"===a.options.strategy),popper:g(n)},a.reset=!1,a.placement=a.options.placement,a.orderedModifiers.forEach((function(e){return a.modifiersData[e.name]=Object.assign({},e.data)}));for(var r=0;r<a.orderedModifiers.length;r++)if(!0!==a.reset){var s=a.orderedModifiers[r],o=s.fn,i=s.options,l=void 0===i?{}:i,d=s.name;"function"===typeof o&&(a=o({state:a,options:l,name:d,instance:c})||a)}else a.reset=!1,r=-1}}},update:B((function(){return new Promise((function(e){c.forceUpdate(),e(a)}))})),destroy:function(){l(),u=!0}};if(!L(e,t))return c;function l(){o.forEach((function(e){return e()})),o=[]}return c.setOptions(n).then((function(e){!u&&n.onFirstUpdate&&n.onFirstUpdate(e)})),c}}var W={passive:!0};var z={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(e){var t=e.state,n=e.instance,r=e.options,a=r.scroll,o=void 0===a||a,i=r.resize,u=void 0===i||i,c=s(t.elements.popper),l=[].concat(t.scrollParents.reference,t.scrollParents.popper);return o&&l.forEach((function(e){e.addEventListener("scroll",n.update,W)})),u&&c.addEventListener("resize",n.update,W),function(){o&&l.forEach((function(e){e.removeEventListener("scroll",n.update,W)})),u&&c.removeEventListener("resize",n.update,W)}},data:{}};function U(e){return e.split("-")[0]}function G(e){return e.split("-")[1]}function H(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}function j(e){var t,n=e.reference,r=e.element,a=e.placement,s=a?U(a):null,o=a?G(a):null,i=n.x+n.width/2-r.width/2,u=n.y+n.height/2-r.height/2;switch(s){case I:t={x:i,y:n.y-r.height};break;case N:t={x:i,y:n.y+n.height};break;case S:t={x:n.x+n.width,y:u};break;case T:t={x:n.x-r.width,y:u};break;default:t={x:n.x,y:n.y}}var c=s?H(s):null;if(null!=c){var l="y"===c?"height":"width";switch(o){case C:t[c]=t[c]-(n[l]/2-r[l]/2);break;case A:t[c]=t[c]+(n[l]/2-r[l]/2)}}return t}var q={name:"popperOffsets",enabled:!0,phase:"read",fn:function(e){var t=e.state,n=e.name;t.modifiersData[n]=j({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})},data:{}},X=Math.max,K=Math.min,Y=Math.round,Q={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Z(e){var t,n=e.popper,r=e.popperRect,a=e.placement,o=e.variation,i=e.offsets,u=e.position,c=e.gpuAcceleration,l=e.adaptive,p=e.roundOffsets,f=!0===p?function(e){var t=e.x,n=e.y,r=window.devicePixelRatio||1;return{x:Y(Y(t*r)/r)||0,y:Y(Y(n*r)/r)||0}}(i):"function"===typeof p?p(i):i,m=f.x,g=void 0===m?0:m,y=f.y,b=void 0===y?0:y,x=i.hasOwnProperty("x"),v=i.hasOwnProperty("y"),k=T,_=I,E=window;if(l){var C=w(n),$="clientHeight",R="clientWidth";C===s(n)&&"static"!==h(C=d(n)).position&&"absolute"===u&&($="scrollHeight",R="scrollWidth"),C=C,a!==I&&(a!==T&&a!==S||o!==A)||(_=N,b-=C[$]-r.height,b*=c?1:-1),a!==T&&(a!==I&&a!==N||o!==A)||(k=S,g-=C[R]-r.width,g*=c?1:-1)}var F,O=Object.assign({position:u},l&&Q);return c?Object.assign({},O,((F={})[_]=v?"0":"",F[k]=x?"0":"",F.transform=(E.devicePixelRatio||1)<=1?"translate("+g+"px, "+b+"px)":"translate3d("+g+"px, "+b+"px, 0)",F)):Object.assign({},O,((t={})[_]=v?b+"px":"",t[k]=x?g+"px":"",t.transform="",t))}var J={left:"right",right:"left",bottom:"top",top:"bottom"};function ee(e){return e.replace(/left|right|bottom|top/g,(function(e){return J[e]}))}var te={start:"end",end:"start"};function ne(e){return e.replace(/start|end/g,(function(e){return te[e]}))}function re(e,t){var n=t.getRootNode&&t.getRootNode();if(e.contains(t))return!0;if(n&&c(n)){var r=t;do{if(r&&e.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}function ae(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function se(e,t){return t===$?ae(function(e){var t=s(e),n=d(e),r=t.visualViewport,a=n.clientWidth,o=n.clientHeight,i=0,u=0;return r&&(a=r.width,o=r.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(i=r.offsetLeft,u=r.offsetTop)),{width:a,height:o,x:i+p(e),y:u}}(e)):u(t)?function(e){var t=a(e);return t.top=t.top+e.clientTop,t.left=t.left+e.clientLeft,t.bottom=t.top+e.clientHeight,t.right=t.left+e.clientWidth,t.width=e.clientWidth,t.height=e.clientHeight,t.x=t.left,t.y=t.top,t}(t):ae(function(e){var t,n=d(e),r=o(e),a=null==(t=e.ownerDocument)?void 0:t.body,s=X(n.scrollWidth,n.clientWidth,a?a.scrollWidth:0,a?a.clientWidth:0),i=X(n.scrollHeight,n.clientHeight,a?a.scrollHeight:0,a?a.clientHeight:0),u=-r.scrollLeft+p(e),c=-r.scrollTop;return"rtl"===h(a||n).direction&&(u+=X(n.clientWidth,a?a.clientWidth:0)-s),{width:s,height:i,x:u,y:c}}(d(e)))}function oe(e,t,n){var r="clippingParents"===t?function(e){var t=x(y(e)),n=["absolute","fixed"].indexOf(h(e).position)>=0&&u(e)?w(e):e;return i(n)?t.filter((function(e){return i(e)&&re(e,n)&&"body"!==l(e)})):[]}(e):[].concat(t),a=[].concat(r,[n]),s=a[0],o=a.reduce((function(t,n){var r=se(e,n);return t.top=X(r.top,t.top),t.right=K(r.right,t.right),t.bottom=K(r.bottom,t.bottom),t.left=X(r.left,t.left),t}),se(e,s));return o.width=o.right-o.left,o.height=o.bottom-o.top,o.x=o.left,o.y=o.top,o}function ie(e){return Object.assign({},{top:0,right:0,bottom:0,left:0},e)}function ue(e,t){return t.reduce((function(t,n){return t[n]=e,t}),{})}function ce(e,t){void 0===t&&(t={});var n=t,r=n.placement,s=void 0===r?e.placement:r,o=n.boundary,u=void 0===o?"clippingParents":o,c=n.rootBoundary,l=void 0===c?$:c,p=n.elementContext,h=void 0===p?R:p,f=n.altBoundary,m=void 0!==f&&f,g=n.padding,y=void 0===g?0:g,b=ie("number"!==typeof y?y:ue(y,E)),x=h===R?"reference":R,v=e.rects.popper,k=e.elements[m?x:h],w=oe(i(k)?k:k.contextElement||d(e.elements.popper),u,l),T=a(e.elements.reference),_=j({reference:T,element:v,strategy:"absolute",placement:s}),C=ae(Object.assign({},v,_)),A=h===R?C:T,F={top:w.top-A.top+b.top,bottom:A.bottom-w.bottom+b.bottom,left:w.left-A.left+b.left,right:A.right-w.right+b.right},O=e.modifiersData.offset;if(h===R&&O){var D=O[s];Object.keys(F).forEach((function(e){var t=[S,N].indexOf(e)>=0?1:-1,n=[I,N].indexOf(e)>=0?"y":"x";F[e]+=D[n]*t}))}return F}function le(e,t,n){return X(e,K(t,n))}function de(e,t,n){return void 0===n&&(n={x:0,y:0}),{top:e.top-t.height-n.y,right:e.right-t.width+n.x,bottom:e.bottom-t.height+n.y,left:e.left-t.width-n.x}}function pe(e){return[I,S,N,T].some((function(t){return e[t]>=0}))}var he=V({defaultModifiers:[z,q,{name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(e){var t=e.state,n=e.options,r=n.gpuAcceleration,a=void 0===r||r,s=n.adaptive,o=void 0===s||s,i=n.roundOffsets,u=void 0===i||i,c={placement:U(t.placement),variation:G(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:a};null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign({},t.styles.popper,Z(Object.assign({},c,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:o,roundOffsets:u})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign({},t.styles.arrow,Z(Object.assign({},c,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:u})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})},data:{}},{name:"applyStyles",enabled:!0,phase:"write",fn:function(e){var t=e.state;Object.keys(t.elements).forEach((function(e){var n=t.styles[e]||{},r=t.attributes[e]||{},a=t.elements[e];u(a)&&l(a)&&(Object.assign(a.style,n),Object.keys(r).forEach((function(e){var t=r[e];!1===t?a.removeAttribute(e):a.setAttribute(e,!0===t?"":t)})))}))},effect:function(e){var t=e.state,n={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,n.popper),t.styles=n,t.elements.arrow&&Object.assign(t.elements.arrow.style,n.arrow),function(){Object.keys(t.elements).forEach((function(e){var r=t.elements[e],a=t.attributes[e]||{},s=Object.keys(t.styles.hasOwnProperty(e)?t.styles[e]:n[e]).reduce((function(e,t){return e[t]="",e}),{});u(r)&&l(r)&&(Object.assign(r.style,s),Object.keys(a).forEach((function(e){r.removeAttribute(e)})))}))}},requires:["computeStyles"]},{name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(e){var t=e.state,n=e.options,r=e.name,a=n.offset,s=void 0===a?[0,0]:a,o=O.reduce((function(e,n){return e[n]=function(e,t,n){var r=U(e),a=[T,I].indexOf(r)>=0?-1:1,s="function"===typeof n?n(Object.assign({},t,{placement:e})):n,o=s[0],i=s[1];return o=o||0,i=(i||0)*a,[T,S].indexOf(r)>=0?{x:i,y:o}:{x:o,y:i}}(n,t.rects,s),e}),{}),i=o[t.placement],u=i.x,c=i.y;null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=u,t.modifiersData.popperOffsets.y+=c),t.modifiersData[r]=o}},{name:"flip",enabled:!0,phase:"main",fn:function(e){var t=e.state,n=e.options,r=e.name;if(!t.modifiersData[r]._skip){for(var a=n.mainAxis,s=void 0===a||a,o=n.altAxis,i=void 0===o||o,u=n.fallbackPlacements,c=n.padding,l=n.boundary,d=n.rootBoundary,p=n.altBoundary,h=n.flipVariations,f=void 0===h||h,m=n.allowedAutoPlacements,g=t.options.placement,y=U(g),b=u||(y===g||!f?[ee(g)]:function(e){if(U(e)===_)return[];var t=ee(e);return[ne(e),t,ne(t)]}(g)),x=[g].concat(b).reduce((function(e,n){return e.concat(U(n)===_?function(e,t){void 0===t&&(t={});var n=t,r=n.placement,a=n.boundary,s=n.rootBoundary,o=n.padding,i=n.flipVariations,u=n.allowedAutoPlacements,c=void 0===u?O:u,l=G(r),d=l?i?F:F.filter((function(e){return G(e)===l})):E,p=d.filter((function(e){return c.indexOf(e)>=0}));0===p.length&&(p=d);var h=p.reduce((function(t,n){return t[n]=ce(e,{placement:n,boundary:a,rootBoundary:s,padding:o})[U(n)],t}),{});return Object.keys(h).sort((function(e,t){return h[e]-h[t]}))}(t,{placement:n,boundary:l,rootBoundary:d,padding:c,flipVariations:f,allowedAutoPlacements:m}):n)}),[]),v=t.rects.reference,k=t.rects.popper,w=new Map,A=!0,$=x[0],R=0;R<x.length;R++){var D=x[R],M=U(D),B=G(D)===C,P=[I,N].indexOf(M)>=0,L=P?"width":"height",V=ce(t,{placement:D,boundary:l,rootBoundary:d,altBoundary:p,padding:c}),W=P?B?S:T:B?N:I;v[L]>k[L]&&(W=ee(W));var z=ee(W),H=[];if(s&&H.push(V[M]<=0),i&&H.push(V[W]<=0,V[z]<=0),H.every((function(e){return e}))){$=D,A=!1;break}w.set(D,H)}if(A)for(var j=function(e){var t=x.find((function(t){var n=w.get(t);if(n)return n.slice(0,e).every((function(e){return e}))}));if(t)return $=t,"break"},q=f?3:1;q>0;q--){if("break"===j(q))break}t.placement!==$&&(t.modifiersData[r]._skip=!0,t.placement=$,t.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}},{name:"preventOverflow",enabled:!0,phase:"main",fn:function(e){var t=e.state,n=e.options,r=e.name,a=n.mainAxis,s=void 0===a||a,o=n.altAxis,i=void 0!==o&&o,u=n.boundary,c=n.rootBoundary,l=n.altBoundary,d=n.padding,p=n.tether,h=void 0===p||p,f=n.tetherOffset,m=void 0===f?0:f,y=ce(t,{boundary:u,rootBoundary:c,padding:d,altBoundary:l}),b=U(t.placement),x=G(t.placement),v=!x,k=H(b),_="x"===k?"y":"x",E=t.modifiersData.popperOffsets,A=t.rects.reference,$=t.rects.popper,R="function"===typeof m?m(Object.assign({},t.rects,{placement:t.placement})):m,F={x:0,y:0};if(E){if(s||i){var O="y"===k?I:T,D="y"===k?N:S,M="y"===k?"height":"width",B=E[k],P=E[k]+y[O],L=E[k]-y[D],V=h?-$[M]/2:0,W=x===C?A[M]:$[M],z=x===C?-$[M]:-A[M],j=t.elements.arrow,q=h&&j?g(j):{width:0,height:0},Y=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},Q=Y[O],Z=Y[D],J=le(0,A[M],q[M]),ee=v?A[M]/2-V-J-Q-R:W-J-Q-R,te=v?-A[M]/2+V+J+Z+R:z+J+Z+R,ne=t.elements.arrow&&w(t.elements.arrow),re=ne?"y"===k?ne.clientTop||0:ne.clientLeft||0:0,ae=t.modifiersData.offset?t.modifiersData.offset[t.placement][k]:0,se=E[k]+ee-ae-re,oe=E[k]+te-ae;if(s){var ie=le(h?K(P,se):P,B,h?X(L,oe):L);E[k]=ie,F[k]=ie-B}if(i){var ue="x"===k?I:T,de="x"===k?N:S,pe=E[_],he=pe+y[ue],fe=pe-y[de],me=le(h?K(he,se):he,pe,h?X(fe,oe):fe);E[_]=me,F[_]=me-pe}}t.modifiersData[r]=F}},requiresIfExists:["offset"]},{name:"arrow",enabled:!0,phase:"main",fn:function(e){var t,n=e.state,r=e.name,a=e.options,s=n.elements.arrow,o=n.modifiersData.popperOffsets,i=U(n.placement),u=H(i),c=[T,S].indexOf(i)>=0?"height":"width";if(s&&o){var l=function(e,t){return ie("number"!==typeof(e="function"===typeof e?e(Object.assign({},t.rects,{placement:t.placement})):e)?e:ue(e,E))}(a.padding,n),d=g(s),p="y"===u?I:T,h="y"===u?N:S,f=n.rects.reference[c]+n.rects.reference[u]-o[u]-n.rects.popper[c],m=o[u]-n.rects.reference[u],y=w(s),b=y?"y"===u?y.clientHeight||0:y.clientWidth||0:0,x=f/2-m/2,v=l[p],k=b-d[c]-l[h],_=b/2-d[c]/2+x,C=le(v,_,k),A=u;n.modifiersData[r]=((t={})[A]=C,t.centerOffset=C-_,t)}},effect:function(e){var t=e.state,n=e.options.element,r=void 0===n?"[data-popper-arrow]":n;null!=r&&("string"!==typeof r||(r=t.elements.popper.querySelector(r)))&&re(t.elements.popper,r)&&(t.elements.arrow=r)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]},{name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(e){var t=e.state,n=e.name,r=t.rects.reference,a=t.rects.popper,s=t.modifiersData.preventOverflow,o=ce(t,{elementContext:"reference"}),i=ce(t,{altBoundary:!0}),u=de(o,r),c=de(i,a,s),l=pe(u),d=pe(c);t.modifiersData[n]={referenceClippingOffsets:u,popperEscapeOffsets:c,isReferenceHidden:l,hasPopperEscaped:d},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":l,"data-popper-escaped":d})}}]}),fe=n(69590),me=n.n(fe),ge=function(e){return e.reduce((function(e,t){var n=t[0],r=t[1];return e[n]=r,e}),{})},ye="undefined"!==typeof window&&window.document&&window.document.createElement?r.useLayoutEffect:r.useEffect,be=[],xe=function(e,t,n){void 0===n&&(n={});var a=r.useRef(null),s={onFirstUpdate:n.onFirstUpdate,placement:n.placement||"bottom",strategy:n.strategy||"absolute",modifiers:n.modifiers||be},o=r.useState({styles:{popper:{position:s.strategy,left:"0",top:"0"},arrow:{position:"absolute"}},attributes:{}}),i=o[0],u=o[1],c=r.useMemo((function(){return{name:"updateState",enabled:!0,phase:"write",fn:function(e){var t=e.state,n=Object.keys(t.elements);u({styles:ge(n.map((function(e){return[e,t.styles[e]||{}]}))),attributes:ge(n.map((function(e){return[e,t.attributes[e]]})))})},requires:["computeStyles"]}}),[]),l=r.useMemo((function(){var e={onFirstUpdate:s.onFirstUpdate,placement:s.placement,strategy:s.strategy,modifiers:[].concat(s.modifiers,[c,{name:"applyStyles",enabled:!1}])};return me()(a.current,e)?a.current||e:(a.current=e,e)}),[s.onFirstUpdate,s.placement,s.strategy,s.modifiers,c]),d=r.useRef();return ye((function(){d.current&&d.current.setOptions(l)}),[l]),ye((function(){if(null!=e&&null!=t){var r=(n.createPopper||he)(e,t,l);return d.current=r,function(){r.destroy(),d.current=null}}}),[e,t,n.createPopper]),{state:d.current?d.current.state:null,styles:i.styles,attributes:i.attributes,update:d.current?d.current.update:null,forceUpdate:d.current?d.current.forceUpdate:null}}},36377:function(e,t,n){var r=n(84832),a=n(68652),s=n(90801),o=n(92030),i=n(3618),u=n(89049),c=n(51971);c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=o,c.xor4096=i,c.tychei=u,e.exports=c},84832:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n=function(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},89049:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},68652:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},92030:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},90801:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},51971:function(e,t,n){var r;!function(a,s){var o,i=this,u=256,c=s.pow(u,6),l=s.pow(2,52),d=2*l,p=255;function h(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,b(a)]}}():e,3),r),h=new f(r),x=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*u+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),a),e.exports){e.exports=h;try{o=n(75042)}catch(x){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},48318:function(e,t,n){"use strict";n.d(t,{Z:function(){return x}});var r,a,s=0,o=0,i=0,u=0,c=0,l=0,d="object"===typeof performance&&performance.now?performance:Date,p="object"===typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function h(){return c||(p(f),c=d.now()+l)}function f(){c=0}function m(){this._call=this._time=this._next=null}function g(){c=(u=d.now())+l,s=o=0;try{!function(){h(),++s;for(var e,t=r;t;)(e=c-t._time)>=0&&t._call.call(void 0,e),t=t._next;--s}()}finally{s=0,function(){var e,t,n=r,s=1/0;for(;n;)n._call?(s>n._time&&(s=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:r=t);a=e,b(s)}(),c=0}}function y(){var e=d.now(),t=e-u;t>1e3&&(l-=t,u=e)}function b(e){s||(o&&(o=clearTimeout(o)),e-c>24?(e<1/0&&(o=setTimeout(g,e-d.now()-l)),i&&(i=clearInterval(i))):(i||(u=d.now(),i=setInterval(y,1e3)),s=1,p(g)))}function x(e,t,n){var r=new m,a=t;return null==t?(r.restart(e,t,n),r):(r._restart=r.restart,r.restart=function(e,t,n){t=+t,n=null==n?h():+n,r._restart((function s(o){o+=a,r._restart(s,a+=t,n),e(o)}),t,n)},r.restart(e,t,n),r)}m.prototype=function(e,t,n){var r=new m;return r.restart(e,t,n),r}.prototype={constructor:m,restart:function(e,t,n){if("function"!==typeof e)throw new TypeError("callback is not a function");n=(null==n?h():+n)+(null==t?0:+t),this._next||a===this||(a?a._next=this:r=this,a=this),this._call=e,this._time=n,b()},stop:function(){this._call&&(this._call=null,this._time=1/0,b())}}}}]);